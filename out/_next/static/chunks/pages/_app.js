_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcz81YTQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEsd0NBQXdDLFNBQVM7QUFDakQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlMaWtlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRoSG9sZXMuanM/YzEzNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhIb2xlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRoSG9sZXM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRob3V0SG9sZXMuanM/MjIzNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUIsbUJBQU8sQ0FBQyxxRkFBb0I7O0FBRW5EO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aG91dEhvbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5TGlrZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9hcnJheUxpa2VUb0FycmF5XCIpO1xuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KGFycik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FycmF5V2l0aG91dEhvbGVzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzNjOTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcz9jOTczIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3luY1RvR2VuZXJhdG9yOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/OTcwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ \"./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY29uc3RydWN0LmpzP2IxN2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsaUZBQWtCOztBQUUvQywrQkFBK0IsbUJBQU8sQ0FBQyxxR0FBNEI7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NvbnN0cnVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mXCIpO1xuXG52YXIgaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gcmVxdWlyZShcIi4vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0XCIpO1xuXG5mdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgICB2YXIgYSA9IFtudWxsXTtcbiAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgaWYgKENsYXNzKSBzZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/construct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanM/NWJjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanM/OTUyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _defineProperty; });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzP2FkZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2YuanM/MzZjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICB9O1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanM/ZWQ2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBa0I7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9zZXRQcm90b3R5cGVPZlwiKTtcblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/inherits.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzPzRlYTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgXCJkZWZhdWx0XCI6IG9ialxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcz9kYmNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxzRkFBK0I7O0FBRXJEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gIGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDtcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcblxuICBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gICAgcmV0dXJuIGNhY2hlO1xuICB9O1xuXG4gIHJldHVybiBjYWNoZTtcbn1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7XG4gIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiZGVmYXVsdFwiOiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7XG5cbiAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChvYmopO1xuICB9XG5cbiAgdmFyIG5ld09iaiA9IHt9O1xuICB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcblxuICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZXdPYmpbXCJkZWZhdWx0XCJdID0gb2JqO1xuXG4gIGlmIChjYWNoZSkge1xuICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzPzZmOGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuXG4gIHRyeSB7XG4gICAgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5LmpzPzExYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pdGVyYWJsZVRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/iterableToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanM/OWI0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMsK0JBQStCO0FBQzVFOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcbiAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2l0ZXJhYmxlVG9BcnJheUxpbWl0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVSZXN0LmpzP2MyNDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVSZXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfbm9uSXRlcmFibGVSZXN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVTcHJlYWQuanM/MDY3NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVNwcmVhZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX25vbkl0ZXJhYmxlU3ByZWFkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\n\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcz82YjU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxzRkFBK0I7O0FBRXJELDRCQUE0QixtQkFBTyxDQUFDLCtGQUF5Qjs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIGFzc2VydFRoaXNJbml0aWFsaXplZCA9IHJlcXVpcmUoXCIuL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiKTtcblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgIHJldHVybiBjYWxsO1xuICB9XG5cbiAgcmV0dXJuIGFzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YuanM/NGE0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcz8yNzhjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFrQjs7QUFFL0MsMkJBQTJCLG1CQUFPLENBQUMsNkZBQXdCOztBQUUzRCxpQ0FBaUMsbUJBQU8sQ0FBQyx5R0FBOEI7O0FBRXZFLHNCQUFzQixtQkFBTyxDQUFDLG1GQUFtQjs7QUFFakQ7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheVdpdGhIb2xlcyA9IHJlcXVpcmUoXCIuL2FycmF5V2l0aEhvbGVzXCIpO1xuXG52YXIgaXRlcmFibGVUb0FycmF5TGltaXQgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdFwiKTtcblxudmFyIHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXlcIik7XG5cbnZhciBub25JdGVyYWJsZVJlc3QgPSByZXF1aXJlKFwiLi9ub25JdGVyYWJsZVJlc3RcIik7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NsaWNlZFRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ \"./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\");\n\nvar iterableToArray = __webpack_require__(/*! ./iterableToArray */ \"./node_modules/@babel/runtime/helpers/iterableToArray.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ \"./node_modules/@babel/runtime/helpers/nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXkuanM/NDQ4YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0IsbUJBQU8sQ0FBQyx1RkFBcUI7O0FBRXJELHNCQUFzQixtQkFBTyxDQUFDLG1GQUFtQjs7QUFFakQsaUNBQWlDLG1CQUFPLENBQUMseUdBQThCOztBQUV2RSx3QkFBd0IsbUJBQU8sQ0FBQyx1RkFBcUI7O0FBRXJEO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aG91dEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRob3V0SG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlcIik7XG5cbnZhciB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSA9IHJlcXVpcmUoXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5XCIpO1xuXG52YXIgbm9uSXRlcmFibGVTcHJlYWQgPSByZXF1aXJlKFwiLi9ub25JdGVyYWJsZVNwcmVhZFwiKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3RvQ29uc3VtYWJsZUFycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/toConsumableArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzPzcwMzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/typeof.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/NjYxMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUIsbUJBQU8sQ0FBQyxxRkFBb0I7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcnJheUxpa2VUb0FycmF5ID0gcmVxdWlyZShcIi4vYXJyYXlMaWtlVG9BcnJheVwiKTtcblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2EzNGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXFCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/govuk-frontend/govuk/all.js":
/*!**************************************************!*\
  !*** ./node_modules/govuk-frontend/govuk/all.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\n   true ? factory(exports) :\n    undefined;\n}(this, (function (exports) {\n  'use strict';\n\n  /**\n   * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\n   * This seems to fail in IE8, requires more investigation.\n   * See: https://github.com/imagitama/nodelist-foreach-polyfill\n   */\n  function nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n      return nodes.forEach(callback)\n    }\n    for (var i = 0; i < nodes.length; i++) {\n      callback.call(window, nodes[i], i, nodes);\n    }\n  }\n\n  // Used to generate a unique string, allows multiple instances of the component without\n  // Them conflicting with each other.\n  // https://stackoverflow.com/a/8809472\n  function generateUniqueID() {\n    var d = new Date().getTime();\n    if (typeof window.performance !== 'undefined' && typeof window.performance.now === 'function') {\n      d += window.performance.now(); // use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)\n    })\n  }\n\n  (function (undefined) {\n\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\n    var detect = (\n      // In IE8, defineProperty could only act on DOM elements, so full support\n      // for the feature requires the ability to set a property on an arbitrary object\n      'defineProperty' in Object && (function () {\n        try {\n          var a = {};\n          Object.defineProperty(a, 'test', { value: 42 });\n          return true;\n        } catch (e) {\n          return false\n        }\n      }())\n    );\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\n    (function (nativeDefineProperty) {\n\n      var supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\n      var ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\n      var ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\n\n      Object.defineProperty = function defineProperty(object, property, descriptor) {\n\n        // Where native support exists, assume it\n        if (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\n          return nativeDefineProperty(object, property, descriptor);\n        }\n\n        if (object === null || !(object instanceof Object || typeof object === 'object')) {\n          throw new TypeError('Object.defineProperty called on non-object');\n        }\n\n        if (!(descriptor instanceof Object)) {\n          throw new TypeError('Property description must be an object');\n        }\n\n        var propertyString = String(property);\n        var hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\n        var getterType = 'get' in descriptor && typeof descriptor.get;\n        var setterType = 'set' in descriptor && typeof descriptor.set;\n\n        // handle descriptor.get\n        if (getterType) {\n          if (getterType !== 'function') {\n            throw new TypeError('Getter must be a function');\n          }\n          if (!supportsAccessors) {\n            throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n          }\n          if (hasValueOrWritable) {\n            throw new TypeError(ERR_VALUE_ACCESSORS);\n          }\n          Object.__defineGetter__.call(object, propertyString, descriptor.get);\n        } else {\n          object[propertyString] = descriptor.value;\n        }\n\n        // handle descriptor.set\n        if (setterType) {\n          if (setterType !== 'function') {\n            throw new TypeError('Setter must be a function');\n          }\n          if (!supportsAccessors) {\n            throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n          }\n          if (hasValueOrWritable) {\n            throw new TypeError(ERR_VALUE_ACCESSORS);\n          }\n          Object.__defineSetter__.call(object, propertyString, descriptor.set);\n        }\n\n        // OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\n        if ('value' in descriptor) {\n          object[propertyString] = descriptor.value;\n        }\n\n        return object;\n      };\n    }(Object.defineProperty));\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\n    var detect = 'bind' in Function.prototype;\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\n    Object.defineProperty(Function.prototype, 'bind', {\n      value: function bind(that) { // .length is 1\n        // add necessary es5-shim utilities\n        var $Array = Array;\n        var $Object = Object;\n        var ObjectPrototype = $Object.prototype;\n        var ArrayPrototype = $Array.prototype;\n        var Empty = function Empty() { };\n        var to_string = ObjectPrototype.toString;\n        var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n        var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\n        var array_slice = ArrayPrototype.slice;\n        var array_concat = ArrayPrototype.concat;\n        var array_push = ArrayPrototype.push;\n        var max = Math.max;\n        // /add necessary es5-shim utilities\n\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (!isCallable(target)) {\n          throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = array_slice.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var bound;\n        var binder = function () {\n\n          if (this instanceof bound) {\n            // 15.3.4.5.2 [[Construct]]\n            // When the [[Construct]] internal method of a function object,\n            // F that was created using the bind function is called with a\n            // list of arguments ExtraArgs, the following steps are taken:\n            // 1. Let target be the value of F's [[TargetFunction]]\n            //   internal property.\n            // 2. If target has no [[Construct]] internal method, a\n            //   TypeError exception is thrown.\n            // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n            //   property.\n            // 4. Let args be a new list containing the same values as the\n            //   list boundArgs in the same order followed by the same\n            //   values as the list ExtraArgs in the same order.\n            // 5. Return the result of calling the [[Construct]] internal\n            //   method of target providing args as the arguments.\n\n            var result = target.apply(\n              this,\n              array_concat.call(args, array_slice.call(arguments))\n            );\n            if ($Object(result) === result) {\n              return result;\n            }\n            return this;\n\n          } else {\n            // 15.3.4.5.1 [[Call]]\n            // When the [[Call]] internal method of a function object, F,\n            // which was created using the bind function is called with a\n            // this value and a list of arguments ExtraArgs, the following\n            // steps are taken:\n            // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n            //   property.\n            // 2. Let boundThis be the value of F's [[BoundThis]] internal\n            //   property.\n            // 3. Let target be the value of F's [[TargetFunction]] internal\n            //   property.\n            // 4. Let args be a new list containing the same values as the\n            //   list boundArgs in the same order followed by the same\n            //   values as the list ExtraArgs in the same order.\n            // 5. Return the result of calling the [[Call]] internal method\n            //   of target providing boundThis as the this value and\n            //   providing args as the arguments.\n\n            // equiv: target.call(this, ...boundArgs, ...args)\n            return target.apply(\n              that,\n              array_concat.call(args, array_slice.call(arguments))\n            );\n\n          }\n\n        };\n\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n\n        var boundLength = max(0, target.length - args.length);\n\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n        var boundArgs = [];\n        for (var i = 0; i < boundLength; i++) {\n          array_push.call(boundArgs, '$' + i);\n        }\n\n        // XXX Build a dynamic function with desired amount of arguments is the only\n        // way to set the length property of a function.\n        // In environments where Content Security Policies enabled (Chrome extensions,\n        // for ex.) all use of eval or Function costructor throws an exception.\n        // However in all of these environments Function.prototype.bind exists\n        // and so this code will never be executed.\n        bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n        if (target.prototype) {\n          Empty.prototype = target.prototype;\n          bound.prototype = new Empty();\n          // Clean up dangling references.\n          Empty.prototype = null;\n        }\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n      }\n    });\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\n    var detect = (\n      'DOMTokenList' in this && (function (x) {\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\n      })(document.createElement('x'))\n    );\n\n    if (detect) return\n\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\n    (function (global) {\n      var nativeImpl = \"DOMTokenList\" in global && global.DOMTokenList;\n\n      if (\n        !nativeImpl ||\n        (\n          !!document.createElementNS &&\n          !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\n          !(document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").classList instanceof DOMTokenList)\n        )\n      ) {\n        global.DOMTokenList = (function () { // eslint-disable-line no-unused-vars\n          var dpSupport = true;\n          var defineGetter = function (object, name, fn, configurable) {\n            if (Object.defineProperty)\n              Object.defineProperty(object, name, {\n                configurable: false === dpSupport ? true : !!configurable,\n                get: fn\n              });\n\n            else object.__defineGetter__(name, fn);\n          };\n\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\n          try {\n            defineGetter({}, \"support\");\n          }\n          catch (e) {\n            dpSupport = false;\n          }\n\n\n          var _DOMTokenList = function (el, prop) {\n            var that = this;\n            var tokens = [];\n            var tokenMap = {};\n            var length = 0;\n            var maxLength = 0;\n            var addIndexGetter = function (i) {\n              defineGetter(that, i, function () {\n                preop();\n                return tokens[i];\n              }, false);\n\n            };\n            var reindex = function () {\n\n              /** Define getter functions for array-like access to the tokenList's contents. */\n              if (length >= maxLength)\n                for (; maxLength < length; ++maxLength) {\n                  addIndexGetter(maxLength);\n                }\n            };\n\n            /** Helper function called at the start of each class method. Internal use only. */\n            var preop = function () {\n              var error;\n              var i;\n              var args = arguments;\n              var rSpace = /\\s+/;\n\n              /** Validate the token/s passed to an instance method, if any. */\n              if (args.length)\n                for (i = 0; i < args.length; ++i)\n                  if (rSpace.test(args[i])) {\n                    error = new SyntaxError('String \"' + args[i] + '\" ' + \"contains\" + ' an invalid character');\n                    error.code = 5;\n                    error.name = \"InvalidCharacterError\";\n                    throw error;\n                  }\n\n\n              /** Split the new value apart by whitespace*/\n              if (typeof el[prop] === \"object\") {\n                tokens = (\"\" + el[prop].baseVal).replace(/^\\s+|\\s+$/g, \"\").split(rSpace);\n              } else {\n                tokens = (\"\" + el[prop]).replace(/^\\s+|\\s+$/g, \"\").split(rSpace);\n              }\n\n              /** Avoid treating blank strings as single-item token lists */\n              if (\"\" === tokens[0]) tokens = [];\n\n              /** Repopulate the internal token lists */\n              tokenMap = {};\n              for (i = 0; i < tokens.length; ++i)\n                tokenMap[tokens[i]] = true;\n              length = tokens.length;\n              reindex();\n            };\n\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\n            preop();\n\n            /** Return the number of tokens in the underlying string. Read-only. */\n            defineGetter(that, \"length\", function () {\n              preop();\n              return length;\n            });\n\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\n            that.toLocaleString =\n              that.toString = function () {\n                preop();\n                return tokens.join(\" \");\n              };\n\n            that.item = function (idx) {\n              preop();\n              return tokens[idx];\n            };\n\n            that.contains = function (token) {\n              preop();\n              return !!tokenMap[token];\n            };\n\n            that.add = function () {\n              preop.apply(that, args = arguments);\n\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\n                token = args[i];\n                if (!tokenMap[token]) {\n                  tokens.push(token);\n                  tokenMap[token] = true;\n                }\n              }\n\n              /** Update the targeted attribute of the attached element if the token list's changed. */\n              if (length !== tokens.length) {\n                length = tokens.length >>> 0;\n                if (typeof el[prop] === \"object\") {\n                  el[prop].baseVal = tokens.join(\" \");\n                } else {\n                  el[prop] = tokens.join(\" \");\n                }\n                reindex();\n              }\n            };\n\n            that.remove = function () {\n              preop.apply(that, args = arguments);\n\n              /** Build a hash of token names to compare against when recollecting our token list. */\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\n                ignore[args[i]] = true;\n                delete tokenMap[args[i]];\n              }\n\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\n              for (i = 0; i < tokens.length; ++i)\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\n\n              tokens = t;\n              length = t.length >>> 0;\n\n              /** Update the targeted attribute of the attached element. */\n              if (typeof el[prop] === \"object\") {\n                el[prop].baseVal = tokens.join(\" \");\n              } else {\n                el[prop] = tokens.join(\" \");\n              }\n              reindex();\n            };\n\n            that.toggle = function (token, force) {\n              preop.apply(that, [token]);\n\n              /** Token state's being forced. */\n              if (undefined !== force) {\n                if (force) {\n                  that.add(token);\n                  return true;\n                } else {\n                  that.remove(token);\n                  return false;\n                }\n              }\n\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\n              if (tokenMap[token]) {\n                that.remove(token);\n                return false;\n              }\n\n              /** Otherwise, add the token and return TRUE. */\n              that.add(token);\n              return true;\n            };\n\n            return that;\n          };\n\n          return _DOMTokenList;\n        }());\n      }\n\n      // Add second argument to native DOMTokenList.toggle() if necessary\n      (function () {\n        var e = document.createElement('span');\n        if (!('classList' in e)) return;\n        e.classList.toggle('x', false);\n        if (!e.classList.contains('x')) return;\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\n          var force = arguments[1];\n          if (force === undefined) {\n            var add = !this.contains(token);\n            this[add ? 'add' : 'remove'](token);\n            return add;\n          }\n          force = !!force;\n          this[force ? 'add' : 'remove'](token);\n          return force;\n        };\n      }());\n\n      // Add multiple arguments to native DOMTokenList.add() if necessary\n      (function () {\n        var e = document.createElement('span');\n        if (!('classList' in e)) return;\n        e.classList.add('a', 'b');\n        if (e.classList.contains('b')) return;\n        var native = e.classList.constructor.prototype.add;\n        e.classList.constructor.prototype.add = function () {\n          var args = arguments;\n          var l = arguments.length;\n          for (var i = 0; i < l; i++) {\n            native.call(this, args[i]);\n          }\n        };\n      }());\n\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\n      (function () {\n        var e = document.createElement('span');\n        if (!('classList' in e)) return;\n        e.classList.add('a');\n        e.classList.add('b');\n        e.classList.remove('a', 'b');\n        if (!e.classList.contains('b')) return;\n        var native = e.classList.constructor.prototype.remove;\n        e.classList.constructor.prototype.remove = function () {\n          var args = arguments;\n          var l = arguments.length;\n          for (var i = 0; i < l; i++) {\n            native.call(this, args[i]);\n          }\n        };\n      }());\n\n    }(this));\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\n    var detect = (\"Document\" in this);\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\n    if ((typeof WorkerGlobalScope === \"undefined\") && (typeof importScripts !== \"function\")) {\n\n      if (this.HTMLDocument) { // IE8\n\n        // HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\n        this.Document = this.HTMLDocument;\n\n      } else {\n\n        // Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\n        this.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\n        this.Document.prototype = document;\n      }\n    }\n\n\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\n    var detect = ('Element' in this && 'HTMLElement' in this);\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\n    (function () {\n\n      // IE8\n      if (window.Element && !window.HTMLElement) {\n        window.HTMLElement = window.Element;\n        return;\n      }\n\n      // create Element constructor\n      window.Element = window.HTMLElement = new Function('return function Element() {}')();\n\n      // generate sandboxed iframe\n      var vbody = document.appendChild(document.createElement('body'));\n      var frame = vbody.appendChild(document.createElement('iframe'));\n\n      // use sandboxed iframe to replicate Element functionality\n      var frameDocument = frame.contentWindow.document;\n      var prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\n      var cache = {};\n\n      // polyfill Element.prototype on an element\n      var shiv = function (element, deep) {\n        var\n          childNodes = element.childNodes || [],\n          index = -1,\n          key, value, childNode;\n\n        if (element.nodeType === 1 && element.constructor !== Element) {\n          element.constructor = Element;\n\n          for (key in cache) {\n            value = cache[key];\n            element[key] = value;\n          }\n        }\n\n        while (childNode = deep && childNodes[++index]) {\n          shiv(childNode, deep);\n        }\n\n        return element;\n      };\n\n      var elements = document.getElementsByTagName('*');\n      var nativeCreateElement = document.createElement;\n      var interval;\n      var loopLimit = 100;\n\n      prototype.attachEvent('onpropertychange', function (event) {\n        var\n          propertyName = event.propertyName,\n          nonValue = !cache.hasOwnProperty(propertyName),\n          newValue = prototype[propertyName],\n          oldValue = cache[propertyName],\n          index = -1,\n          element;\n\n        while (element = elements[++index]) {\n          if (element.nodeType === 1) {\n            if (nonValue || element[propertyName] === oldValue) {\n              element[propertyName] = newValue;\n            }\n          }\n        }\n\n        cache[propertyName] = newValue;\n      });\n\n      prototype.constructor = Element;\n\n      if (!prototype.hasAttribute) {\n        // <Element>.hasAttribute\n        prototype.hasAttribute = function hasAttribute(name) {\n          return this.getAttribute(name) !== null;\n        };\n      }\n\n      // Apply Element prototype to the pre-existing DOM as soon as the body element appears.\n      function bodyCheck() {\n        if (!(loopLimit--)) clearTimeout(interval);\n        if (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\n          shiv(document, true);\n          if (interval && document.body.prototype) clearTimeout(interval);\n          return (!!document.body.prototype);\n        }\n        return false;\n      }\n      if (!bodyCheck()) {\n        document.onreadystatechange = bodyCheck;\n        interval = setInterval(bodyCheck, 25);\n      }\n\n      // Apply to any new elements created after load\n      document.createElement = function createElement(nodeName) {\n        var element = nativeCreateElement(String(nodeName).toLowerCase());\n        return shiv(element);\n      };\n\n      // remove sandboxed iframe\n      document.removeChild(vbody);\n    }());\n\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\n    var detect = (\n      'document' in this && \"classList\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\n        var e = document.createElement('span');\n        e.classList.add('a', 'b');\n        return e.classList.contains('b');\n      }())\n    );\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\n    (function (global) {\n      var dpSupport = true;\n      var defineGetter = function (object, name, fn, configurable) {\n        if (Object.defineProperty)\n          Object.defineProperty(object, name, {\n            configurable: false === dpSupport ? true : !!configurable,\n            get: fn\n          });\n\n        else object.__defineGetter__(name, fn);\n      };\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\n      try {\n        defineGetter({}, \"support\");\n      }\n      catch (e) {\n        dpSupport = false;\n      }\n      /** Polyfills a property with a DOMTokenList */\n      var addProp = function (o, name, attr) {\n\n        defineGetter(o.prototype, name, function () {\n          var tokenList;\n\n          var THIS = this,\n\n            /** Prevent this from firing twice for some reason. What the hell, IE. */\n            gibberishProperty = \"__defineGetter__\" + \"DEFINE_PROPERTY\" + name;\n          if (THIS[gibberishProperty]) return tokenList;\n          THIS[gibberishProperty] = true;\n\n          /**\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\n           *\n           * What this is doing is creating a dummy element (\"reflection\") inside a detached phantom node (\"mirror\")\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\n           * select lists).\n           */\n          if (false === dpSupport) {\n\n            var visage;\n            var mirror = addProp.mirror || document.createElement(\"div\");\n            var reflections = mirror.childNodes;\n            var l = reflections.length;\n\n            for (var i = 0; i < l; ++i)\n              if (reflections[i]._R === THIS) {\n                visage = reflections[i];\n                break;\n              }\n\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\n            visage || (visage = mirror.appendChild(document.createElement(\"div\")));\n\n            tokenList = DOMTokenList.call(visage, THIS, attr);\n          } else tokenList = new DOMTokenList(THIS, attr);\n\n          defineGetter(THIS, name, function () {\n            return tokenList;\n          });\n          delete THIS[gibberishProperty];\n\n          return tokenList;\n        }, true);\n      };\n\n      addProp(global.Element, \"classList\", \"className\");\n      addProp(global.HTMLElement, \"classList\", \"className\");\n      addProp(global.HTMLLinkElement, \"relList\", \"rel\");\n      addProp(global.HTMLAnchorElement, \"relList\", \"rel\");\n      addProp(global.HTMLAreaElement, \"relList\", \"rel\");\n    }(this));\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  function Accordion($module) {\n    this.$module = $module;\n    this.moduleId = $module.getAttribute('id');\n    this.$sections = $module.querySelectorAll('.govuk-accordion__section');\n    this.$openAllButton = '';\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage();\n\n    this.controlsClass = 'govuk-accordion__controls';\n    this.openAllClass = 'govuk-accordion__open-all';\n    this.iconClass = 'govuk-accordion__icon';\n\n    this.sectionHeaderClass = 'govuk-accordion__section-header';\n    this.sectionHeaderFocusedClass = 'govuk-accordion__section-header--focused';\n    this.sectionHeadingClass = 'govuk-accordion__section-heading';\n    this.sectionSummaryClass = 'govuk-accordion__section-summary';\n    this.sectionButtonClass = 'govuk-accordion__section-button';\n    this.sectionExpandedClass = 'govuk-accordion__section--expanded';\n  }\n\n  // Initialize component\n  Accordion.prototype.init = function () {\n    // Check for module\n    if (!this.$module) {\n      return\n    }\n\n    this.initControls();\n\n    this.initSectionHeaders();\n\n    // See if \"Open all\" button text should be updated\n    var areAllSectionsOpen = this.checkIfAllSectionsOpen();\n    this.updateOpenAllButton(areAllSectionsOpen);\n  };\n\n  // Initialise controls and set attributes\n  Accordion.prototype.initControls = function () {\n    // Create \"Open all\" button and set attributes\n    this.$openAllButton = document.createElement('button');\n    this.$openAllButton.setAttribute('type', 'button');\n    this.$openAllButton.innerHTML = 'Open all <span class=\"govuk-visually-hidden\">sections</span>';\n    this.$openAllButton.setAttribute('class', this.openAllClass);\n    this.$openAllButton.setAttribute('aria-expanded', 'false');\n    this.$openAllButton.setAttribute('type', 'button');\n\n    // Create control wrapper and add controls to it\n    var accordionControls = document.createElement('div');\n    accordionControls.setAttribute('class', this.controlsClass);\n    accordionControls.appendChild(this.$openAllButton);\n    this.$module.insertBefore(accordionControls, this.$module.firstChild);\n\n    // Handle events for the controls\n    this.$openAllButton.addEventListener('click', this.onOpenOrCloseAllToggle.bind(this));\n  };\n\n  // Initialise section headers\n  Accordion.prototype.initSectionHeaders = function () {\n    // Loop through section headers\n    nodeListForEach(this.$sections, function ($section, i) {\n      // Set header attributes\n      var header = $section.querySelector('.' + this.sectionHeaderClass);\n      this.initHeaderAttributes(header, i);\n\n      this.setExpanded(this.isExpanded($section), $section);\n\n      // Handle events\n      header.addEventListener('click', this.onSectionToggle.bind(this, $section));\n\n      // See if there is any state stored in sessionStorage and set the sections to\n      // open or closed.\n      this.setInitialState($section);\n    }.bind(this));\n  };\n\n  // Set individual header attributes\n  Accordion.prototype.initHeaderAttributes = function ($headerWrapper, index) {\n    var $module = this;\n    var $span = $headerWrapper.querySelector('.' + this.sectionButtonClass);\n    var $heading = $headerWrapper.querySelector('.' + this.sectionHeadingClass);\n    var $summary = $headerWrapper.querySelector('.' + this.sectionSummaryClass);\n\n    // Copy existing span element to an actual button element, for improved accessibility.\n    var $button = document.createElement('button');\n    $button.setAttribute('type', 'button');\n    $button.setAttribute('id', this.moduleId + '-heading-' + (index + 1));\n    $button.setAttribute('aria-controls', this.moduleId + '-content-' + (index + 1));\n\n    // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n    for (var i = 0; i < $span.attributes.length; i++) {\n      var attr = $span.attributes.item(i);\n      $button.setAttribute(attr.nodeName, attr.nodeValue);\n    }\n\n    $button.addEventListener('focusin', function (e) {\n      if (!$headerWrapper.classList.contains($module.sectionHeaderFocusedClass)) {\n        $headerWrapper.className += ' ' + $module.sectionHeaderFocusedClass;\n      }\n    });\n\n    $button.addEventListener('blur', function (e) {\n      $headerWrapper.classList.remove($module.sectionHeaderFocusedClass);\n    });\n\n    if (typeof ($summary) !== 'undefined' && $summary !== null) {\n      $button.setAttribute('aria-describedby', this.moduleId + '-summary-' + (index + 1));\n    }\n\n    // $span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $button.innerHTML = $span.innerHTML;\n\n    $heading.removeChild($span);\n    $heading.appendChild($button);\n\n    // Add \"+/-\" icon\n    var icon = document.createElement('span');\n    icon.className = this.iconClass;\n    icon.setAttribute('aria-hidden', 'true');\n\n    $button.appendChild(icon);\n  };\n\n  // When section toggled, set and store state\n  Accordion.prototype.onSectionToggle = function ($section) {\n    var expanded = this.isExpanded($section);\n    this.setExpanded(!expanded, $section);\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section);\n  };\n\n  // When Open/Close All toggled, set and store state\n  Accordion.prototype.onOpenOrCloseAllToggle = function () {\n    var $module = this;\n    var $sections = this.$sections;\n\n    var nowExpanded = !this.checkIfAllSectionsOpen();\n\n    nodeListForEach($sections, function ($section) {\n      $module.setExpanded(nowExpanded, $section);\n      // Store the state in sessionStorage when a change is triggered\n      $module.storeState($section);\n    });\n\n    $module.updateOpenAllButton(nowExpanded);\n  };\n\n  // Set section attributes when opened/closed\n  Accordion.prototype.setExpanded = function (expanded, $section) {\n    var $button = $section.querySelector('.' + this.sectionButtonClass);\n    $button.setAttribute('aria-expanded', expanded);\n\n    if (expanded) {\n      $section.classList.add(this.sectionExpandedClass);\n    } else {\n      $section.classList.remove(this.sectionExpandedClass);\n    }\n\n    // See if \"Open all\" button text should be updated\n    var areAllSectionsOpen = this.checkIfAllSectionsOpen();\n    this.updateOpenAllButton(areAllSectionsOpen);\n  };\n\n  // Get state of section\n  Accordion.prototype.isExpanded = function ($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  };\n\n  // Check if all sections are open\n  Accordion.prototype.checkIfAllSectionsOpen = function () {\n    // Get a count of all the Accordion sections\n    var sectionsCount = this.$sections.length;\n    // Get a count of all Accordion sections that are expanded\n    var expandedSectionCount = this.$module.querySelectorAll('.' + this.sectionExpandedClass).length;\n    var areAllSectionsOpen = sectionsCount === expandedSectionCount;\n\n    return areAllSectionsOpen\n  };\n\n  // Update \"Open all\" button\n  Accordion.prototype.updateOpenAllButton = function (expanded) {\n    var newButtonText = expanded ? 'Close all' : 'Open all';\n    newButtonText += '<span class=\"govuk-visually-hidden\"> sections</span>';\n    this.$openAllButton.setAttribute('aria-expanded', expanded);\n    this.$openAllButton.innerHTML = newButtonText;\n  };\n\n  // Check for `window.sessionStorage`, and that it actually works.\n  var helper = {\n    checkForSessionStorage: function () {\n      var testString = 'this is the test string';\n      var result;\n      try {\n        window.sessionStorage.setItem(testString, testString);\n        result = window.sessionStorage.getItem(testString) === testString.toString();\n        window.sessionStorage.removeItem(testString);\n        return result\n      } catch (exception) {\n        if ((typeof console === 'undefined' || typeof console.log === 'undefined')) {\n          console.log('Notice: sessionStorage not available.');\n        }\n      }\n    }\n  };\n\n  // Set the state of the accordions in sessionStorage\n  Accordion.prototype.storeState = function ($section) {\n    if (this.browserSupportsSessionStorage) {\n      // We need a unique way of identifying each content in the accordion. Since\n      // an `#id` should be unique and an `id` is required for `aria-` attributes\n      // `id` can be safely used.\n      var $button = $section.querySelector('.' + this.sectionButtonClass);\n\n      if ($button) {\n        var contentId = $button.getAttribute('aria-controls');\n        var contentState = $button.getAttribute('aria-expanded');\n\n        if (typeof contentId === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n          console.error(new Error('No aria controls present in accordion section heading.'));\n        }\n\n        if (typeof contentState === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\n          console.error(new Error('No aria expanded present in accordion section heading.'));\n        }\n\n        // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState);\n        }\n      }\n    }\n  };\n\n  // Read the state of the accordions from sessionStorage\n  Accordion.prototype.setInitialState = function ($section) {\n    if (this.browserSupportsSessionStorage) {\n      var $button = $section.querySelector('.' + this.sectionButtonClass);\n\n      if ($button) {\n        var contentId = $button.getAttribute('aria-controls');\n        var contentState = contentId ? window.sessionStorage.getItem(contentId) : null;\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section);\n        }\n      }\n    }\n  };\n\n  (function (undefined) {\n\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\n    var detect = ('Window' in this);\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\n    if ((typeof WorkerGlobalScope === \"undefined\") && (typeof importScripts !== \"function\")) {\n      (function (global) {\n        if (global.constructor) {\n          global.Window = global.constructor;\n        } else {\n          (global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\n        }\n      }(this));\n    }\n\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\n    var detect = (\n      (function (global) {\n\n        if (!('Event' in global)) return false;\n        if (typeof global.Event === 'function') return true;\n\n        try {\n\n          // In IE 9-11, the Event object exists but cannot be instantiated\n          new Event('click');\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }(this))\n    );\n\n    if (detect) return\n\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\n    (function () {\n      var unlistenableWindowEvents = {\n        click: 1,\n        dblclick: 1,\n        keyup: 1,\n        keypress: 1,\n        keydown: 1,\n        mousedown: 1,\n        mouseup: 1,\n        mousemove: 1,\n        mouseover: 1,\n        mouseenter: 1,\n        mouseleave: 1,\n        mouseout: 1,\n        storage: 1,\n        storagecommit: 1,\n        textinput: 1\n      };\n\n      // This polyfill depends on availability of `document` so will not run in a worker\n      // However, we asssume there are no browsers with worker support that lack proper\n      // support for `Event` within the worker\n      if (typeof document === 'undefined' || typeof window === 'undefined') return;\n\n      function indexOf(array, element) {\n        var\n          index = -1,\n          length = array.length;\n\n        while (++index < length) {\n          if (index in array && array[index] === element) {\n            return index;\n          }\n        }\n\n        return -1;\n      }\n\n      var existingProto = (window.Event && window.Event.prototype) || null;\n      window.Event = Window.prototype.Event = function Event(type, eventInitDict) {\n        if (!type) {\n          throw new Error('Not enough arguments');\n        }\n\n        var event;\n        // Shortcut if browser supports createEvent\n        if ('createEvent' in document) {\n          event = document.createEvent('Event');\n          var bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\n          var cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\n\n          event.initEvent(type, bubbles, cancelable);\n\n          return event;\n        }\n\n        event = document.createEventObject();\n\n        event.type = type;\n        event.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\n        event.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\n\n        return event;\n      };\n      if (existingProto) {\n        Object.defineProperty(window.Event, 'prototype', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: existingProto\n        });\n      }\n\n      if (!('createEvent' in document)) {\n        window.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\n          var\n            element = this,\n            type = arguments[0],\n            listener = arguments[1];\n\n          if (element === window && type in unlistenableWindowEvents) {\n            throw new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\n          }\n\n          if (!element._events) {\n            element._events = {};\n          }\n\n          if (!element._events[type]) {\n            element._events[type] = function (event) {\n              var\n                list = element._events[event.type].list,\n                events = list.slice(),\n                index = -1,\n                length = events.length,\n                eventElement;\n\n              event.preventDefault = function preventDefault() {\n                if (event.cancelable !== false) {\n                  event.returnValue = false;\n                }\n              };\n\n              event.stopPropagation = function stopPropagation() {\n                event.cancelBubble = true;\n              };\n\n              event.stopImmediatePropagation = function stopImmediatePropagation() {\n                event.cancelBubble = true;\n                event.cancelImmediate = true;\n              };\n\n              event.currentTarget = element;\n              event.relatedTarget = event.fromElement || null;\n              event.target = event.target || event.srcElement || element;\n              event.timeStamp = new Date().getTime();\n\n              if (event.clientX) {\n                event.pageX = event.clientX + document.documentElement.scrollLeft;\n                event.pageY = event.clientY + document.documentElement.scrollTop;\n              }\n\n              while (++index < length && !event.cancelImmediate) {\n                if (index in events) {\n                  eventElement = events[index];\n\n                  if (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\n                    eventElement.call(element, event);\n                  }\n                }\n              }\n            };\n\n            element._events[type].list = [];\n\n            if (element.attachEvent) {\n              element.attachEvent('on' + type, element._events[type]);\n            }\n          }\n\n          element._events[type].list.push(listener);\n        };\n\n        window.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\n          var\n            element = this,\n            type = arguments[0],\n            listener = arguments[1],\n            index;\n\n          if (element._events && element._events[type] && element._events[type].list) {\n            index = indexOf(element._events[type].list, listener);\n\n            if (index !== -1) {\n              element._events[type].list.splice(index, 1);\n\n              if (!element._events[type].list.length) {\n                if (element.detachEvent) {\n                  element.detachEvent('on' + type, element._events[type]);\n                }\n                delete element._events[type];\n              }\n            }\n          }\n        };\n\n        window.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\n          if (!arguments.length) {\n            throw new Error('Not enough arguments');\n          }\n\n          if (!event || typeof event.type !== 'string') {\n            throw new Error('DOM Events Exception 0');\n          }\n\n          var element = this, type = event.type;\n\n          try {\n            if (!event.bubbles) {\n              event.cancelBubble = true;\n\n              var cancelBubbleEvent = function (event) {\n                event.cancelBubble = true;\n\n                (element || window).detachEvent('on' + type, cancelBubbleEvent);\n              };\n\n              this.attachEvent('on' + type, cancelBubbleEvent);\n            }\n\n            this.fireEvent('on' + type, event);\n          } catch (error) {\n            event.target = element;\n\n            do {\n              event.currentTarget = element;\n\n              if ('_events' in element && typeof element._events[type] === 'function') {\n                element._events[type].call(element, event);\n              }\n\n              if (typeof element['on' + type] === 'function') {\n                element['on' + type].call(element, event);\n              }\n\n              element = element.nodeType === 9 ? element.parentWindow : element.parentNode;\n            } while (element && !event.cancelBubble);\n          }\n\n          return true;\n        };\n\n        // Add the DOMContentLoaded Event\n        document.attachEvent('onreadystatechange', function () {\n          if (document.readyState === 'complete') {\n            document.dispatchEvent(new Event('DOMContentLoaded', {\n              bubbles: true\n            }));\n          }\n        });\n      }\n    }());\n\n  })\n    .call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  var KEY_SPACE = 32;\n  var DEBOUNCE_TIMEOUT_IN_SECONDS = 1;\n\n  function Button($module) {\n    this.$module = $module;\n    this.debounceFormSubmitTimer = null;\n  }\n\n  /**\n  * JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\n  *\n  * Created since some Assistive Technologies (for example some Screenreaders)\n  * will tell a user to press space on a 'button', so this functionality needs to be shimmed\n  * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n  *\n  * @param {object} event event\n  */\n  Button.prototype.handleKeyDown = function (event) {\n    // get the target element\n    var target = event.target;\n    // if the element has a role='button' and the pressed key is a space, we'll simulate a click\n    if (target.getAttribute('role') === 'button' && event.keyCode === KEY_SPACE) {\n      event.preventDefault();\n      // trigger the target's click event\n      target.click();\n    }\n  };\n\n  /**\n  * If the click quickly succeeds a previous click then nothing will happen.\n  * This stops people accidentally causing multiple form submissions by\n  * double clicking buttons.\n  */\n  Button.prototype.debounce = function (event) {\n    var target = event.target;\n    // Check the button that is clicked on has the preventDoubleClick feature enabled\n    if (target.getAttribute('data-prevent-double-click') !== 'true') {\n      return\n    }\n\n    // If the timer is still running then we want to prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault();\n      return false\n    }\n\n    this.debounceFormSubmitTimer = setTimeout(function () {\n      this.debounceFormSubmitTimer = null;\n    }.bind(this), DEBOUNCE_TIMEOUT_IN_SECONDS * 1000);\n  };\n\n  /**\n  * Initialise an event listener for keydown at document level\n  * this will help listening for later inserted elements with a role=\"button\"\n  */\n  Button.prototype.init = function () {\n    this.$module.addEventListener('keydown', this.handleKeyDown);\n    this.$module.addEventListener('click', this.debounce);\n  };\n\n  /**\n   * JavaScript 'polyfill' for HTML5's <details> and <summary> elements\n   * and 'shim' to add accessiblity enhancements for all browsers\n   *\n   * http://caniuse.com/#feat=details\n   */\n\n  var KEY_ENTER = 13;\n  var KEY_SPACE$1 = 32;\n\n  function Details($module) {\n    this.$module = $module;\n  }\n\n  Details.prototype.init = function () {\n    if (!this.$module) {\n      return\n    }\n\n    // If there is native details support, we want to avoid running code to polyfill native behaviour.\n    var hasNativeDetails = typeof this.$module.open === 'boolean';\n\n    if (hasNativeDetails) {\n      return\n    }\n\n    this.polyfillDetails();\n  };\n\n  Details.prototype.polyfillDetails = function () {\n    var $module = this.$module;\n\n    // Save shortcuts to the inner summary and content elements\n    var $summary = this.$summary = $module.getElementsByTagName('summary').item(0);\n    var $content = this.$content = $module.getElementsByTagName('div').item(0);\n\n    // If <details> doesn't have a <summary> and a <div> representing the content\n    // it means the required HTML structure is not met so the script will stop\n    if (!$summary || !$content) {\n      return\n    }\n\n    // If the content doesn't have an ID, assign it one now\n    // which we'll need for the summary's aria-controls assignment\n    if (!$content.id) {\n      $content.id = 'details-content-' + generateUniqueID();\n    }\n\n    // Add ARIA role=\"group\" to details\n    $module.setAttribute('role', 'group');\n\n    // Add role=button to summary\n    $summary.setAttribute('role', 'button');\n\n    // Add aria-controls\n    $summary.setAttribute('aria-controls', $content.id);\n\n    // Set tabIndex so the summary is keyboard accessible for non-native elements\n    //\n    // We have to use the camelcase `tabIndex` property as there is a bug in IE6/IE7 when we set the correct attribute lowercase:\n    // See http://web.archive.org/web/20170120194036/http://www.saliences.com/browserBugs/tabIndex.html for more information.\n    $summary.tabIndex = 0;\n\n    // Detect initial open state\n    var openAttr = $module.getAttribute('open') !== null;\n    if (openAttr === true) {\n      $summary.setAttribute('aria-expanded', 'true');\n      $content.setAttribute('aria-hidden', 'false');\n    } else {\n      $summary.setAttribute('aria-expanded', 'false');\n      $content.setAttribute('aria-hidden', 'true');\n      $content.style.display = 'none';\n    }\n\n    // Bind an event to handle summary elements\n    this.polyfillHandleInputs($summary, this.polyfillSetAttributes.bind(this));\n  };\n\n  /**\n  * Define a statechange function that updates aria-expanded and style.display\n  * @param {object} summary element\n  */\n  Details.prototype.polyfillSetAttributes = function () {\n    var $module = this.$module;\n    var $summary = this.$summary;\n    var $content = this.$content;\n\n    var expanded = $summary.getAttribute('aria-expanded') === 'true';\n    var hidden = $content.getAttribute('aria-hidden') === 'true';\n\n    $summary.setAttribute('aria-expanded', (expanded ? 'false' : 'true'));\n    $content.setAttribute('aria-hidden', (hidden ? 'false' : 'true'));\n\n    $content.style.display = (expanded ? 'none' : '');\n\n    var hasOpenAttr = $module.getAttribute('open') !== null;\n    if (!hasOpenAttr) {\n      $module.setAttribute('open', 'open');\n    } else {\n      $module.removeAttribute('open');\n    }\n\n    return true\n  };\n\n  /**\n  * Handle cross-modal click events\n  * @param {object} node element\n  * @param {function} callback function\n  */\n  Details.prototype.polyfillHandleInputs = function (node, callback) {\n    node.addEventListener('keypress', function (event) {\n      var target = event.target;\n      // When the key gets pressed - check if it is enter or space\n      if (event.keyCode === KEY_ENTER || event.keyCode === KEY_SPACE$1) {\n        if (target.nodeName.toLowerCase() === 'summary') {\n          // Prevent space from scrolling the page\n          // and enter from submitting a form\n          event.preventDefault();\n          // Click to let the click event do all the necessary action\n          if (target.click) {\n            target.click();\n          } else {\n            // except Safari 5.1 and under don't support .click() here\n            callback(event);\n          }\n        }\n      }\n    });\n\n    // Prevent keyup to prevent clicking twice in Firefox when using space key\n    node.addEventListener('keyup', function (event) {\n      var target = event.target;\n      if (event.keyCode === KEY_SPACE$1) {\n        if (target.nodeName.toLowerCase() === 'summary') {\n          event.preventDefault();\n        }\n      }\n    });\n\n    node.addEventListener('click', callback);\n  };\n\n  function CharacterCount($module) {\n    this.$module = $module;\n    this.$textarea = $module.querySelector('.govuk-js-character-count');\n    if (this.$textarea) {\n      this.$countMessage = $module.querySelector('[id=\"' + this.$textarea.id + '-info\"]');\n    }\n  }\n\n  CharacterCount.prototype.defaults = {\n    characterCountAttribute: 'data-maxlength',\n    wordCountAttribute: 'data-maxwords'\n  };\n\n  // Initialize component\n  CharacterCount.prototype.init = function () {\n    // Check for module\n    var $module = this.$module;\n    var $textarea = this.$textarea;\n    var $countMessage = this.$countMessage;\n\n    if (!$textarea || !$countMessage) {\n      return\n    }\n\n    // We move count message right after the field\n    // Kept for backwards compatibility\n    $textarea.insertAdjacentElement('afterend', $countMessage);\n\n    // Read options set using dataset ('data-' values)\n    this.options = this.getDataset($module);\n\n    // Determine the limit attribute (characters or words)\n    var countAttribute = this.defaults.characterCountAttribute;\n    if (this.options.maxwords) {\n      countAttribute = this.defaults.wordCountAttribute;\n    }\n\n    // Save the element limit\n    this.maxLength = $module.getAttribute(countAttribute);\n\n    // Check for limit\n    if (!this.maxLength) {\n      return\n    }\n\n    // Remove hard limit if set\n    $module.removeAttribute('maxlength');\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of the character count is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event in browsers\n    // that support it.\n    if ('onpageshow' in window) {\n      window.addEventListener('pageshow', this.sync.bind(this));\n    } else {\n      window.addEventListener('DOMContentLoaded', this.sync.bind(this));\n    }\n\n    this.sync();\n  };\n\n  CharacterCount.prototype.sync = function () {\n    this.bindChangeEvents();\n    this.updateCountMessage();\n  };\n\n  // Read data attributes\n  CharacterCount.prototype.getDataset = function (element) {\n    var dataset = {};\n    var attributes = element.attributes;\n    if (attributes) {\n      for (var i = 0; i < attributes.length; i++) {\n        var attribute = attributes[i];\n        var match = attribute.name.match(/^data-(.+)/);\n        if (match) {\n          dataset[match[1]] = attribute.value;\n        }\n      }\n    }\n    return dataset\n  };\n\n  // Counts characters or words in text\n  CharacterCount.prototype.count = function (text) {\n    var length;\n    if (this.options.maxwords) {\n      var tokens = text.match(/\\S+/g) || []; // Matches consecutive non-whitespace chars\n      length = tokens.length;\n    } else {\n      length = text.length;\n    }\n    return length\n  };\n\n  // Bind input propertychange to the elements and update based on the change\n  CharacterCount.prototype.bindChangeEvents = function () {\n    var $textarea = this.$textarea;\n    $textarea.addEventListener('keyup', this.checkIfValueChanged.bind(this));\n\n    // Bind focus/blur events to start/stop polling\n    $textarea.addEventListener('focus', this.handleFocus.bind(this));\n    $textarea.addEventListener('blur', this.handleBlur.bind(this));\n  };\n\n  // Speech recognition software such as Dragon NaturallySpeaking will modify the\n  // fields by directly changing its `value`. These changes don't trigger events\n  // in JavaScript, so we need to poll to handle when and if they occur.\n  CharacterCount.prototype.checkIfValueChanged = function () {\n    if (!this.$textarea.oldValue) this.$textarea.oldValue = '';\n    if (this.$textarea.value !== this.$textarea.oldValue) {\n      this.$textarea.oldValue = this.$textarea.value;\n      this.updateCountMessage();\n    }\n  };\n\n  // Update message box\n  CharacterCount.prototype.updateCountMessage = function () {\n    var countElement = this.$textarea;\n    var options = this.options;\n    var countMessage = this.$countMessage;\n\n    // Determine the remaining number of characters/words\n    var currentLength = this.count(countElement.value);\n    var maxLength = this.maxLength;\n    var remainingNumber = maxLength - currentLength;\n\n    // Set threshold if presented in options\n    var thresholdPercent = options.threshold ? options.threshold : 0;\n    var thresholdValue = maxLength * thresholdPercent / 100;\n    if (thresholdValue > currentLength) {\n      countMessage.classList.add('govuk-character-count__message--disabled');\n      // Ensure threshold is hidden for users of assistive technologies\n      countMessage.setAttribute('aria-hidden', true);\n    } else {\n      countMessage.classList.remove('govuk-character-count__message--disabled');\n      // Ensure threshold is visible for users of assistive technologies\n      countMessage.removeAttribute('aria-hidden');\n    }\n\n    // Update styles\n    if (remainingNumber < 0) {\n      countElement.classList.add('govuk-textarea--error');\n      countMessage.classList.remove('govuk-hint');\n      countMessage.classList.add('govuk-error-message');\n    } else {\n      countElement.classList.remove('govuk-textarea--error');\n      countMessage.classList.remove('govuk-error-message');\n      countMessage.classList.add('govuk-hint');\n    }\n\n    // Update message\n    var charVerb = 'remaining';\n    var charNoun = 'character';\n    var displayNumber = remainingNumber;\n    if (options.maxwords) {\n      charNoun = 'word';\n    }\n    charNoun = charNoun + ((remainingNumber === -1 || remainingNumber === 1) ? '' : 's');\n\n    charVerb = (remainingNumber < 0) ? 'too many' : 'remaining';\n    displayNumber = Math.abs(remainingNumber);\n\n    countMessage.innerHTML = 'You have ' + displayNumber + ' ' + charNoun + ' ' + charVerb;\n  };\n\n  CharacterCount.prototype.handleFocus = function () {\n    // Check if value changed on focus\n    this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1000);\n  };\n\n  CharacterCount.prototype.handleBlur = function () {\n    // Cancel value checking on blur\n    clearInterval(this.valueChecker);\n  };\n\n  function Checkboxes($module) {\n    this.$module = $module;\n    this.$inputs = $module.querySelectorAll('input[type=\"checkbox\"]');\n  }\n\n  /**\n   * Initialise Checkboxes\n   *\n   * Checkboxes can be associated with a 'conditionally revealed' content block –\n   * for example, a checkbox for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the checkbox state.\n   */\n  Checkboxes.prototype.init = function () {\n    var $module = this.$module;\n    var $inputs = this.$inputs;\n\n    nodeListForEach($inputs, function ($input) {\n      var target = $input.getAttribute('data-aria-controls');\n\n      // Skip checkboxes without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!target || !$module.querySelector('#' + target)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', target);\n      $input.removeAttribute('data-aria-controls');\n    });\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event in browsers\n    // that support it.\n    if ('onpageshow' in window) {\n      window.addEventListener('pageshow', this.syncAllConditionalReveals.bind(this));\n    } else {\n      window.addEventListener('DOMContentLoaded', this.syncAllConditionalReveals.bind(this));\n    }\n\n    // Although we've set up handlers to sync state on the pageshow or\n    // DOMContentLoaded event, init could be called after those events have fired,\n    // for example if they are added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals();\n\n    $module.addEventListener('click', this.handleClick.bind(this));\n  };\n\n  /**\n   * Sync the conditional reveal states for all inputs in this $module.\n   */\n  Checkboxes.prototype.syncAllConditionalReveals = function () {\n    nodeListForEach(this.$inputs, this.syncConditionalRevealWithInputState.bind(this));\n  };\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @param {HTMLInputElement} $input Checkbox input\n   */\n  Checkboxes.prototype.syncConditionalRevealWithInputState = function ($input) {\n    var $target = this.$module.querySelector('#' + $input.getAttribute('aria-controls'));\n\n    if ($target && $target.classList.contains('govuk-checkboxes__conditional')) {\n      var inputIsChecked = $input.checked;\n\n      $input.setAttribute('aria-expanded', inputIsChecked);\n      $target.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked);\n    }\n  };\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module – if the click occurred on a checkbox, sync\n   * the state of any associated conditional reveal with the checkbox state.\n   *\n   * @param {MouseEvent} event Click event\n   */\n  Checkboxes.prototype.handleClick = function (event) {\n    var $target = event.target;\n\n    // If a checkbox with aria-controls, handle click\n    var isCheckbox = $target.getAttribute('type') === 'checkbox';\n    var hasAriaControls = $target.getAttribute('aria-controls');\n    if (isCheckbox && hasAriaControls) {\n      this.syncConditionalRevealWithInputState($target);\n    }\n  };\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/detect.js\n    var detect = (\n      'document' in this && \"matches\" in document.documentElement\n    );\n\n    if (detect) return\n\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/polyfill.js\n    Element.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || function matches(selector) {\n      var element = this;\n      var elements = (element.document || element.ownerDocument).querySelectorAll(selector);\n      var index = 0;\n\n      while (elements[index] && elements[index] !== element) {\n        ++index;\n      }\n\n      return !!elements[index];\n    };\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/detect.js\n    var detect = (\n      'document' in this && \"closest\" in document.documentElement\n    );\n\n    if (detect) return\n\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/polyfill.js\n    Element.prototype.closest = function closest(selector) {\n      var node = this;\n\n      while (node) {\n        if (node.matches(selector)) return node;\n        else node = 'SVGElement' in window && node instanceof SVGElement ? node.parentNode : node.parentElement;\n      }\n\n      return null;\n    };\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  function ErrorSummary($module) {\n    this.$module = $module;\n  }\n\n  ErrorSummary.prototype.init = function () {\n    var $module = this.$module;\n    if (!$module) {\n      return\n    }\n    $module.focus();\n\n    $module.addEventListener('click', this.handleClick.bind(this));\n  };\n\n  /**\n  * Click event handler\n  *\n  * @param {MouseEvent} event - Click event\n  */\n  ErrorSummary.prototype.handleClick = function (event) {\n    var target = event.target;\n    if (this.focusTarget(target)) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our labels\n   * or legends appear above the input, this means the user will be presented with\n   * an input without any context, as the label or legend will be off the top of\n   * the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and then\n   * focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is announced\n   * (e.g. \"Edit, has autocomplete\").\n   *\n   * @param {HTMLElement} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  ErrorSummary.prototype.focusTarget = function ($target) {\n    // If the element that was clicked was not a link, return early\n    if ($target.tagName !== 'A' || $target.href === false) {\n      return false\n    }\n\n    var inputId = this.getFragmentFromUrl($target.href);\n    var $input = document.getElementById(inputId);\n    if (!$input) {\n      return false\n    }\n\n    var $legendOrLabel = this.getAssociatedLegendOrLabel($input);\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input to\n    // avoid extra scrolling in browsers that don't support `preventScroll` (which\n    // at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView();\n    $input.focus({ preventScroll: true });\n\n    return true\n  };\n\n  /**\n   * Get fragment from URL\n   *\n   * Extract the fragment (everything after the hash) from a URL, but not including\n   * the hash.\n   *\n   * @param {string} url - URL\n   * @returns {string} Fragment from URL, without the hash\n   */\n  ErrorSummary.prototype.getFragmentFromUrl = function (url) {\n    if (url.indexOf('#') === -1) {\n      return false\n    }\n\n    return url.split('#').pop()\n  };\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @param {HTMLElement} $input - The input\n   * @returns {HTMLElement} Associated legend or label, or null if no associated\n   *                        legend or label can be found\n   */\n  ErrorSummary.prototype.getAssociatedLegendOrLabel = function ($input) {\n    var $fieldset = $input.closest('fieldset');\n\n    if ($fieldset) {\n      var legends = $fieldset.getElementsByTagName('legend');\n\n      if (legends.length) {\n        var $candidateLegend = legends[0];\n\n        // If the input type is radio or checkbox, always use the legend if there\n        // is one.\n        if ($input.type === 'checkbox' || $input.type === 'radio') {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldset’s legend (instead of\n        // the label associated with the input) if the input would end up in the\n        // top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        var legendTop = $candidateLegend.getBoundingClientRect().top;\n        var inputRect = $input.getBoundingClientRect();\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          var inputBottom = inputRect.top + inputRect.height;\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return document.querySelector(\"label[for='\" + $input.getAttribute('id') + \"']\") ||\n      $input.closest('label')\n  };\n\n  function NotificationBanner($module) {\n    this.$module = $module;\n  }\n\n  /**\n   * Initialise the component\n   */\n  NotificationBanner.prototype.init = function () {\n    var $module = this.$module;\n    // Check for module\n    if (!$module) {\n      return\n    }\n\n    this.setFocus();\n  };\n\n  /**\n   * Focus the element\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive technologies\n   * prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting `data-disable-auto-focus=\"true\"` in the\n   * component HTML. You might wish to do this based on user research findings, or to avoid a clash\n   * with another element which should be focused when the page loads.\n   */\n  NotificationBanner.prototype.setFocus = function () {\n    var $module = this.$module;\n\n    if ($module.getAttribute('data-disable-auto-focus') === 'true') {\n      return\n    }\n\n    if ($module.getAttribute('role') !== 'alert') {\n      return\n    }\n\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // Remove the tabindex on blur as the component doesn't need to be focusable after the page has\n    // loaded.\n    if (!$module.getAttribute('tabindex')) {\n      $module.setAttribute('tabindex', '-1');\n\n      $module.addEventListener('blur', function () {\n        $module.removeAttribute('tabindex');\n      });\n    }\n\n    $module.focus();\n  };\n\n  function Header($module) {\n    this.$module = $module;\n    this.$menuButton = $module && $module.querySelector('.govuk-js-header-toggle');\n    this.$menu = this.$menuButton && $module.querySelector(\n      '#' + this.$menuButton.getAttribute('aria-controls')\n    );\n  }\n\n  /**\n   * Initialise header\n   *\n   * Check for the presence of the header, menu and menu button – if any are\n   * missing then there's nothing to do so return early.\n   */\n  Header.prototype.init = function () {\n    if (!this.$module || !this.$menuButton || !this.$menu) {\n      return\n    }\n\n    this.syncState(this.$menu.classList.contains('govuk-header__navigation--open'));\n    this.$menuButton.addEventListener('click', this.handleMenuButtonClick.bind(this));\n  };\n\n  /**\n   * Sync menu state\n   *\n   * Sync the menu button class and the accessible state of the menu and the menu\n   * button with the visible state of the menu\n   *\n   * @param {boolean} isVisible Whether the menu is currently visible\n   */\n  Header.prototype.syncState = function (isVisible) {\n    this.$menuButton.classList.toggle('govuk-header__menu-button--open', isVisible);\n    this.$menuButton.setAttribute('aria-expanded', isVisible);\n  };\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   */\n  Header.prototype.handleMenuButtonClick = function () {\n    var isVisible = this.$menu.classList.toggle('govuk-header__navigation--open');\n    this.syncState(isVisible);\n  };\n\n  function Radios($module) {\n    this.$module = $module;\n    this.$inputs = $module.querySelectorAll('input[type=\"radio\"]');\n  }\n\n  /**\n   * Initialise Radios\n   *\n   * Radios can be associated with a 'conditionally revealed' content block – for\n   * example, a radio for 'Phone' could reveal an additional form field for the\n   * user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the radio state.\n   */\n  Radios.prototype.init = function () {\n    var $module = this.$module;\n    var $inputs = this.$inputs;\n\n    nodeListForEach($inputs, function ($input) {\n      var target = $input.getAttribute('data-aria-controls');\n\n      // Skip radios without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!target || !$module.querySelector('#' + target)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', target);\n      $input.removeAttribute('data-aria-controls');\n    });\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event in browsers\n    // that support it.\n    if ('onpageshow' in window) {\n      window.addEventListener('pageshow', this.syncAllConditionalReveals.bind(this));\n    } else {\n      window.addEventListener('DOMContentLoaded', this.syncAllConditionalReveals.bind(this));\n    }\n\n    // Although we've set up handlers to sync state on the pageshow or\n    // DOMContentLoaded event, init could be called after those events have fired,\n    // for example if they are added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals();\n\n    // Handle events\n    $module.addEventListener('click', this.handleClick.bind(this));\n  };\n\n  /**\n   * Sync the conditional reveal states for all inputs in this $module.\n   */\n  Radios.prototype.syncAllConditionalReveals = function () {\n    nodeListForEach(this.$inputs, this.syncConditionalRevealWithInputState.bind(this));\n  };\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @param {HTMLInputElement} $input Radio input\n   */\n  Radios.prototype.syncConditionalRevealWithInputState = function ($input) {\n    var $target = document.querySelector('#' + $input.getAttribute('aria-controls'));\n\n    if ($target && $target.classList.contains('govuk-radios__conditional')) {\n      var inputIsChecked = $input.checked;\n\n      $input.setAttribute('aria-expanded', inputIsChecked);\n      $target.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked);\n    }\n  };\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module – if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a radio\n   * in another $module)\n   *\n   * @param {MouseEvent} event Click event\n   */\n  Radios.prototype.handleClick = function (event) {\n    var $clickedInput = event.target;\n\n    // Ignore clicks on things that aren't radio buttons\n    if ($clickedInput.type !== 'radio') {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    var $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]');\n\n    nodeListForEach($allInputs, function ($input) {\n      var hasSameFormOwner = ($input.form === $clickedInput.form);\n      var hasSameName = ($input.name === $clickedInput.name);\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input);\n      }\n    }.bind(this));\n  };\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-library/master/polyfills/Element/prototype/nextElementSibling/detect.js\n    var detect = (\n      'document' in this && \"nextElementSibling\" in document.documentElement\n    );\n\n    if (detect) return\n\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-library/master/polyfills/Element/prototype/nextElementSibling/polyfill.js\n    Object.defineProperty(Element.prototype, \"nextElementSibling\", {\n      get: function () {\n        var el = this.nextSibling;\n        while (el && el.nodeType !== 1) { el = el.nextSibling; }\n        return el;\n      }\n    });\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  (function (undefined) {\n\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-library/master/polyfills/Element/prototype/previousElementSibling/detect.js\n    var detect = (\n      'document' in this && \"previousElementSibling\" in document.documentElement\n    );\n\n    if (detect) return\n\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-library/master/polyfills/Element/prototype/previousElementSibling/polyfill.js\n    Object.defineProperty(Element.prototype, 'previousElementSibling', {\n      get: function () {\n        var el = this.previousSibling;\n        while (el && el.nodeType !== 1) { el = el.previousSibling; }\n        return el;\n      }\n    });\n\n  }).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n  function Tabs($module) {\n    this.$module = $module;\n    this.$tabs = $module.querySelectorAll('.govuk-tabs__tab');\n\n    this.keys = { left: 37, right: 39, up: 38, down: 40 };\n    this.jsHiddenClass = 'govuk-tabs__panel--hidden';\n  }\n\n  Tabs.prototype.init = function () {\n    if (typeof window.matchMedia === 'function') {\n      this.setupResponsiveChecks();\n    } else {\n      this.setup();\n    }\n  };\n\n  Tabs.prototype.setupResponsiveChecks = function () {\n    this.mql = window.matchMedia('(min-width: 40.0625em)');\n    this.mql.addListener(this.checkMode.bind(this));\n    this.checkMode();\n  };\n\n  Tabs.prototype.checkMode = function () {\n    if (this.mql.matches) {\n      this.setup();\n    } else {\n      this.teardown();\n    }\n  };\n\n  Tabs.prototype.setup = function () {\n    var $module = this.$module;\n    var $tabs = this.$tabs;\n    var $tabList = $module.querySelector('.govuk-tabs__list');\n    var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\n    if (!$tabs || !$tabList || !$tabListItems) {\n      return\n    }\n\n    $tabList.setAttribute('role', 'tablist');\n\n    nodeListForEach($tabListItems, function ($item) {\n      $item.setAttribute('role', 'presentation');\n    });\n\n    nodeListForEach($tabs, function ($tab) {\n      // Set HTML attributes\n      this.setAttributes($tab);\n\n      // Save bounded functions to use when removing event listeners during teardown\n      $tab.boundTabClick = this.onTabClick.bind(this);\n      $tab.boundTabKeydown = this.onTabKeydown.bind(this);\n\n      // Handle events\n      $tab.addEventListener('click', $tab.boundTabClick, true);\n      $tab.addEventListener('keydown', $tab.boundTabKeydown, true);\n\n      // Remove old active panels\n      this.hideTab($tab);\n    }.bind(this));\n\n    // Show either the active tab according to the URL's hash or the first tab\n    var $activeTab = this.getTab(window.location.hash) || this.$tabs[0];\n    this.showTab($activeTab);\n\n    // Handle hashchange events\n    $module.boundOnHashChange = this.onHashChange.bind(this);\n    window.addEventListener('hashchange', $module.boundOnHashChange, true);\n  };\n\n  Tabs.prototype.teardown = function () {\n    var $module = this.$module;\n    var $tabs = this.$tabs;\n    var $tabList = $module.querySelector('.govuk-tabs__list');\n    var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\n\n    if (!$tabs || !$tabList || !$tabListItems) {\n      return\n    }\n\n    $tabList.removeAttribute('role');\n\n    nodeListForEach($tabListItems, function ($item) {\n      $item.removeAttribute('role', 'presentation');\n    });\n\n    nodeListForEach($tabs, function ($tab) {\n      // Remove events\n      $tab.removeEventListener('click', $tab.boundTabClick, true);\n      $tab.removeEventListener('keydown', $tab.boundTabKeydown, true);\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab);\n    }.bind(this));\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', $module.boundOnHashChange, true);\n  };\n\n  Tabs.prototype.onHashChange = function (e) {\n    var hash = window.location.hash;\n    var $tabWithHash = this.getTab(hash);\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false;\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    var $previousTab = this.getCurrentTab();\n\n    this.hideTab($previousTab);\n    this.showTab($tabWithHash);\n    $tabWithHash.focus();\n  };\n\n  Tabs.prototype.hideTab = function ($tab) {\n    this.unhighlightTab($tab);\n    this.hidePanel($tab);\n  };\n\n  Tabs.prototype.showTab = function ($tab) {\n    this.highlightTab($tab);\n    this.showPanel($tab);\n  };\n\n  Tabs.prototype.getTab = function (hash) {\n    return this.$module.querySelector('.govuk-tabs__tab[href=\"' + hash + '\"]')\n  };\n\n  Tabs.prototype.setAttributes = function ($tab) {\n    // set tab attributes\n    var panelId = this.getHref($tab).slice(1);\n    $tab.setAttribute('id', 'tab_' + panelId);\n    $tab.setAttribute('role', 'tab');\n    $tab.setAttribute('aria-controls', panelId);\n    $tab.setAttribute('aria-selected', 'false');\n    $tab.setAttribute('tabindex', '-1');\n\n    // set panel attributes\n    var $panel = this.getPanel($tab);\n    $panel.setAttribute('role', 'tabpanel');\n    $panel.setAttribute('aria-labelledby', $tab.id);\n    $panel.classList.add(this.jsHiddenClass);\n  };\n\n  Tabs.prototype.unsetAttributes = function ($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id');\n    $tab.removeAttribute('role');\n    $tab.removeAttribute('aria-controls');\n    $tab.removeAttribute('aria-selected');\n    $tab.removeAttribute('tabindex');\n\n    // unset panel attributes\n    var $panel = this.getPanel($tab);\n    $panel.removeAttribute('role');\n    $panel.removeAttribute('aria-labelledby');\n    $panel.classList.remove(this.jsHiddenClass);\n  };\n\n  Tabs.prototype.onTabClick = function (e) {\n    if (!e.target.classList.contains('govuk-tabs__tab')) {\n      // Allow events on child DOM elements to bubble up to tab parent\n      return false\n    }\n    e.preventDefault();\n    var $newTab = e.target;\n    var $currentTab = this.getCurrentTab();\n    this.hideTab($currentTab);\n    this.showTab($newTab);\n    this.createHistoryEntry($newTab);\n  };\n\n  Tabs.prototype.createHistoryEntry = function ($tab) {\n    var $panel = this.getPanel($tab);\n\n    // Save and restore the id\n    // so the page doesn't jump when a user clicks a tab (which changes the hash)\n    var id = $panel.id;\n    $panel.id = '';\n    this.changingHash = true;\n    window.location.hash = this.getHref($tab).slice(1);\n    $panel.id = id;\n  };\n\n  Tabs.prototype.onTabKeydown = function (e) {\n    switch (e.keyCode) {\n      case this.keys.left:\n      case this.keys.up:\n        this.activatePreviousTab();\n        e.preventDefault();\n        break\n      case this.keys.right:\n      case this.keys.down:\n        this.activateNextTab();\n        e.preventDefault();\n        break\n    }\n  };\n\n  Tabs.prototype.activateNextTab = function () {\n    var currentTab = this.getCurrentTab();\n    var nextTabListItem = currentTab.parentNode.nextElementSibling;\n    if (nextTabListItem) {\n      var nextTab = nextTabListItem.querySelector('.govuk-tabs__tab');\n    }\n    if (nextTab) {\n      this.hideTab(currentTab);\n      this.showTab(nextTab);\n      nextTab.focus();\n      this.createHistoryEntry(nextTab);\n    }\n  };\n\n  Tabs.prototype.activatePreviousTab = function () {\n    var currentTab = this.getCurrentTab();\n    var previousTabListItem = currentTab.parentNode.previousElementSibling;\n    if (previousTabListItem) {\n      var previousTab = previousTabListItem.querySelector('.govuk-tabs__tab');\n    }\n    if (previousTab) {\n      this.hideTab(currentTab);\n      this.showTab(previousTab);\n      previousTab.focus();\n      this.createHistoryEntry(previousTab);\n    }\n  };\n\n  Tabs.prototype.getPanel = function ($tab) {\n    var $panel = this.$module.querySelector($tab);\n    return $panel\n  };\n\n  Tabs.prototype.showPanel = function ($tab) {\n    var $panel = this.getPanel($tab);\n    $panel.classList.remove(this.jsHiddenClass);\n  };\n\n  Tabs.prototype.hidePanel = function (tab) {\n    var $panel = this.getPanel(tab);\n    $panel.classList.add(this.jsHiddenClass);\n  };\n\n  Tabs.prototype.unhighlightTab = function ($tab) {\n    $tab.setAttribute('aria-selected', 'false');\n    $tab.parentNode.classList.remove('govuk-tabs__list-item--selected');\n    $tab.setAttribute('tabindex', '-1');\n  };\n\n  Tabs.prototype.highlightTab = function ($tab) {\n    $tab.setAttribute('aria-selected', 'true');\n    $tab.parentNode.classList.add('govuk-tabs__list-item--selected');\n    $tab.setAttribute('tabindex', '0');\n  };\n\n  Tabs.prototype.getCurrentTab = function () {\n    return this.$module.querySelector('.govuk-tabs__list-item--selected .govuk-tabs__tab')\n  };\n\n  // this is because IE doesn't always return the actual value but a relative full path\n  // should be a utility function most prob\n  // http://labs.thesedays.com/blog/2010/01/08/getting-the-href-value-with-jquery-in-ie/\n  Tabs.prototype.getHref = function ($tab) {\n    var href = $tab.getAttribute('href');\n    var hash = href.slice(href.indexOf('#'), href.length);\n    return hash\n  };\n\n  function initAll(options) {\n    // Set the options to an empty object by default if no options are passed.\n    options = typeof options !== 'undefined' ? options : {};\n\n    // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n    // Defaults to the entire document if nothing is set.\n    var scope = typeof options.scope !== 'undefined' ? options.scope : document;\n\n    var $buttons = scope.querySelectorAll('[data-module=\"govuk-button\"]');\n    nodeListForEach($buttons, function ($button) {\n      new Button($button).init();\n    });\n\n    var $accordions = scope.querySelectorAll('[data-module=\"govuk-accordion\"]');\n    nodeListForEach($accordions, function ($accordion) {\n      new Accordion($accordion).init();\n    });\n\n    var $details = scope.querySelectorAll('[data-module=\"govuk-details\"]');\n    nodeListForEach($details, function ($detail) {\n      new Details($detail).init();\n    });\n\n    var $characterCounts = scope.querySelectorAll('[data-module=\"govuk-character-count\"]');\n    nodeListForEach($characterCounts, function ($characterCount) {\n      new CharacterCount($characterCount).init();\n    });\n\n    var $checkboxes = scope.querySelectorAll('[data-module=\"govuk-checkboxes\"]');\n    nodeListForEach($checkboxes, function ($checkbox) {\n      new Checkboxes($checkbox).init();\n    });\n\n    // Find first error summary module to enhance.\n    var $errorSummary = scope.querySelector('[data-module=\"govuk-error-summary\"]');\n    new ErrorSummary($errorSummary).init();\n\n    // Find first header module to enhance.\n    var $toggleButton = scope.querySelector('[data-module=\"govuk-header\"]');\n    new Header($toggleButton).init();\n\n    var $notificationBanners = scope.querySelectorAll('[data-module=\"govuk-notification-banner\"]');\n    nodeListForEach($notificationBanners, function ($notificationBanner) {\n      new NotificationBanner($notificationBanner).init();\n    });\n\n    var $radios = scope.querySelectorAll('[data-module=\"govuk-radios\"]');\n    nodeListForEach($radios, function ($radio) {\n      new Radios($radio).init();\n    });\n\n    var $tabs = scope.querySelectorAll('[data-module=\"govuk-tabs\"]');\n    nodeListForEach($tabs, function ($tabs) {\n      new Tabs($tabs).init();\n    });\n  }\n\n  exports.initAll = initAll;\n  exports.Accordion = Accordion;\n  exports.Button = Button;\n  exports.Details = Details;\n  exports.CharacterCount = CharacterCount;\n  exports.Checkboxes = Checkboxes;\n  exports.ErrorSummary = ErrorSummary;\n  exports.Header = Header;\n  exports.Radios = Radios;\n  exports.Tabs = Tabs;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../next/dist/compiled/webpack/global.js */ \"./node_modules/next/dist/compiled/webpack/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/govuk-frontend/govuk/all.js\n");

/***/ }),

/***/ "./node_modules/govuk-frontend/govuk/all.scss":
/*!****************************************************!*\
  !*** ./node_modules/govuk-frontend/govuk/all.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-7-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-7-2!../../next/dist/compiled/resolve-url-loader??ref--5-oneOf-7-3!../../next/dist/compiled/sass-loader/cjs.js??ref--5-oneOf-7-4!./all.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./node_modules/govuk-frontend/govuk/all.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement);};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(!a[p]){return false;}}return true;};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-7-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-7-2!../../next/dist/compiled/resolve-url-loader??ref--5-oneOf-7-3!../../next/dist/compiled/sass-loader/cjs.js??ref--5-oneOf-7-4!./all.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./node_modules/govuk-frontend/govuk/all.scss\",\n      function () {\n        content = __webpack_require__(/*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-7-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-7-2!../../next/dist/compiled/resolve-url-loader??ref--5-oneOf-7-3!../../next/dist/compiled/sass-loader/cjs.js??ref--5-oneOf-7-4!./all.scss */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./node_modules/govuk-frontend/govuk/all.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.i, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dvdnVrLWZyb250ZW5kL2dvdnVrL2FsbC5zY3NzP2Y0MTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLHlNQUE4RjtBQUNoSCwwQkFBMEIsbUJBQU8sQ0FBQyw4aEJBQWlSOztBQUVuVDs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBLHNFQUFzRSx3Q0FBd0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2Q7QUFDQSxrRUFBa0UsaUJBQWlCLGNBQWMsTUFBTSxZQUFZLGlDQUFpQztBQUNwSixVQUFVLGdCQUFnQixlQUFlLFlBQVksaUNBQWlDO0FBQ3RGLFVBQVUsVUFBVSxlQUFlO0FBQ25DOztBQUVBO0FBQ0EsTUFBTSw4aEJBQWlSO0FBQ3ZSO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsOGhCQUFpUjs7QUFFM1M7O0FBRUE7QUFDQSw0QkFBNEIsUUFBUztBQUNyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9nb3Z1ay1mcm9udGVuZC9nb3Z1ay9hbGwuc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTctMSEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNy0yIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS1vbmVPZi03LTMhLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTctNCEuL2FsbC5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCl7Ly8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4vLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG52YXIgYW5jaG9yRWxlbWVudD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fJyk7dmFyIHBhcmVudE5vZGU9YW5jaG9yRWxlbWVudC5wYXJlbnROb2RlOy8vIE5vcm1hbGx5IDxoZWFkPlxuLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4vLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4vLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LGFuY2hvckVsZW1lbnQpO307XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsYixpc05hbWVkRXhwb3J0KXtpZighYSYmYnx8YSYmIWIpe3JldHVybiBmYWxzZTt9bGV0IHA7Zm9yKHAgaW4gYSl7aWYoaXNOYW1lZEV4cG9ydCYmcD09PSdkZWZhdWx0Jyl7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG5jb250aW51ZTt9aWYoYVtwXSE9PWJbcF0pe3JldHVybiBmYWxzZTt9fWZvcihwIGluIGIpe2lmKGlzTmFtZWRFeHBvcnQmJnA9PT0nZGVmYXVsdCcpey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuY29udGludWU7fWlmKCFhW3BdKXtyZXR1cm4gZmFsc2U7fX1yZXR1cm4gdHJ1ZTt9O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTctMSEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNy0yIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS1vbmVPZi03LTMhLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTctNCEuL2FsbC5zY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3JlZi0tNS1vbmVPZi03LTEhLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTctMiEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtb25lT2YtNy0zIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9zYXNzLWxvYWRlci9janMuanM/P3JlZi0tNS1vbmVPZi03LTQhLi9hbGwuc2Nzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/govuk-frontend/govuk/all.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcz80MWViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLHNDQUFzQyxzQkFBc0I7QUFDekUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7dmFyIGFzc2lnbj1PYmplY3QuYXNzaWduLmJpbmQoT2JqZWN0KTttb2R1bGUuZXhwb3J0cz1hc3NpZ247bW9kdWxlLmV4cG9ydHMuZGVmYXVsdD1tb2R1bGUuZXhwb3J0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC1hc3NpZ24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/_app\",\n        function () {\n          return __webpack_require__(/*! private-next-pages/_app.js */ \"./pages/_app.js\");\n        }\n      ]);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzPzVhMDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLG1EQUE0QjtBQUNyRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP3BhZ2U9JTJGX2FwcCZhYnNvbHV0ZVBhZ2VQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAuanMhLi8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgICBcIi9fYXBwXCIsXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gcmVxdWlyZShcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwLmpzXCIpO1xuICAgICAgICB9XG4gICAgICBdKTtcbiAgICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks\n// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n// Tests for existence of standard globals is to allow style-loader\n// to operate correctly into non-standard environments\n// @see https://github.com/webpack-contrib/style-loader/issues/177\nmemo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself\nif(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked\n// due to cross-origin restrictions\nstyleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next\nstyleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=`${id} ${count}`;idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef\n true?__webpack_require__.nc:undefined;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(key=>{style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if\nif(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?`@media ${obj.media} {${obj.css}}`:obj.css;// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+=`\\n/*# sourceMappingURL=data:application/json;base64,${btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))} */`;}// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=()=>{removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=(list,options)=>{options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nif(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\n/**\n* Removes the trailing slash of a path if there is one. Preserves the root path `/`.\n*/\n\nfunction removePathTrailingSlash(path) {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\n/**\n* Normalizes the trailing slash of a path according to the `trailingSlash` option\n* in `next.config.js`.\n*/\n\n\nvar normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2gudHM/NjMyMyJdLCJuYW1lcyI6WyJwYXRoIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJwcm9jZXNzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTs7QUFDTyx1Q0FBdUQ7QUFDNUQsU0FBT0EsSUFBSSxDQUFKQSxpQkFBc0JBLElBQUksS0FBMUJBLE1BQXFDQSxJQUFJLENBQUpBLFNBQWMsQ0FBbkRBLENBQXFDQSxDQUFyQ0EsR0FBUDtBQUdGO0FBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNPLElBQU1DLDBCQUEwQixHQUFHQyxTQUNyQ0YsU0FEcUNFLEdBQW5DIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW1vdmVzIHRoZSB0cmFpbGluZyBzbGFzaCBvZiBhIHBhdGggaWYgdGhlcmUgaXMgb25lLiBQcmVzZXJ2ZXMgdGhlIHJvb3QgcGF0aCBgL2AuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gcGF0aC5lbmRzV2l0aCgnLycpICYmIHBhdGggIT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aFxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIG9mIGEgcGF0aCBhY2NvcmRpbmcgdG8gdGhlIGB0cmFpbGluZ1NsYXNoYCBvcHRpb25cbiAqIGluIGBuZXh0LmNvbmZpZy5qc2AuXG4gKi9cbmV4cG9ydCBjb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSFxuICA/IChwYXRoOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgICAgaWYgKC9cXC5bXi9dK1xcLz8kLy50ZXN0KHBhdGgpKSB7XG4gICAgICAgIHJldHVybiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKVxuICAgICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcbiAgICAgICAgcmV0dXJuIHBhdGhcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBwYXRoICsgJy8nXG4gICAgICB9XG4gICAgfVxuICA6IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\n\nvar requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback || function (cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.requestIdleCallback = requestIdleCallback;\n\nvar cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback || function (id) {\n  return clearTimeout(id);\n};\n\nexports.cancelIdleCallback = cancelIdleCallback;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2sudHM/ZmY5ZSJdLCJuYW1lcyI6WyJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsInN0YXJ0IiwiRGF0ZSIsInNldFRpbWVvdXQiLCJjYiIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsImNhbmNlbElkbGVDYWxsYmFjayIsImNsZWFyVGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFtQk8sSUFBTUEsbUJBQW1CLEdBQzdCLCtCQUErQkMsSUFBSSxDQUFwQyxtQkFBQyxJQUNELGNBRWtCO0FBQ2hCLE1BQUlDLEtBQUssR0FBR0MsSUFBSSxDQUFoQixHQUFZQSxFQUFaO0FBQ0EsU0FBT0MsVUFBVSxDQUFDLFlBQVk7QUFDNUJDLE1BQUUsQ0FBQztBQUNEQyxnQkFBVSxFQURUO0FBRURDLG1CQUFhLEVBQUUseUJBQVk7QUFDekIsZUFBT0MsSUFBSSxDQUFKQSxPQUFZLE1BQU1MLElBQUksQ0FBSkEsUUFBekIsS0FBbUIsQ0FBWkssQ0FBUDtBQUhKSDtBQUFHLEtBQUQsQ0FBRkE7QUFEZSxLQUFqQixDQUFpQixDQUFqQjtBQU5HOzs7O0FBZ0JBLElBQU1JLGtCQUFrQixHQUM1QiwrQkFBK0JSLElBQUksQ0FBcEMsa0JBQUMsSUFDRCxjQUF5QztBQUN2QyxTQUFPUyxZQUFZLENBQW5CLEVBQW1CLENBQW5CO0FBSEciLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFJlcXVlc3RJZGxlQ2FsbGJhY2tIYW5kbGUgPSBhbnlcbnR5cGUgUmVxdWVzdElkbGVDYWxsYmFja09wdGlvbnMgPSB7XG4gIHRpbWVvdXQ6IG51bWJlclxufVxudHlwZSBSZXF1ZXN0SWRsZUNhbGxiYWNrRGVhZGxpbmUgPSB7XG4gIHJlYWRvbmx5IGRpZFRpbWVvdXQ6IGJvb2xlYW5cbiAgdGltZVJlbWFpbmluZzogKCkgPT4gbnVtYmVyXG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgcmVxdWVzdElkbGVDYWxsYmFjazogKFxuICAgICAgY2FsbGJhY2s6IChkZWFkbGluZTogUmVxdWVzdElkbGVDYWxsYmFja0RlYWRsaW5lKSA9PiB2b2lkLFxuICAgICAgb3B0cz86IFJlcXVlc3RJZGxlQ2FsbGJhY2tPcHRpb25zXG4gICAgKSA9PiBSZXF1ZXN0SWRsZUNhbGxiYWNrSGFuZGxlXG4gICAgY2FuY2VsSWRsZUNhbGxiYWNrOiAoaWQ6IFJlcXVlc3RJZGxlQ2FsbGJhY2tIYW5kbGUpID0+IHZvaWRcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcmVxdWVzdElkbGVDYWxsYmFjayA9XG4gICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrKSB8fFxuICBmdW5jdGlvbiAoXG4gICAgY2I6IChkZWFkbGluZTogUmVxdWVzdElkbGVDYWxsYmFja0RlYWRsaW5lKSA9PiB2b2lkXG4gICk6IE5vZGVKUy5UaW1lb3V0IHtcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpXG4gICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgY2Ioe1xuICAgICAgICBkaWRUaW1lb3V0OiBmYWxzZSxcbiAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBNYXRoLm1heCgwLCA1MCAtIChEYXRlLm5vdygpIC0gc3RhcnQpKVxuICAgICAgICB9LFxuICAgICAgfSlcbiAgICB9LCAxKVxuICB9XG5cbmV4cG9ydCBjb25zdCBjYW5jZWxJZGxlQ2FsbGJhY2sgPVxuICAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrKSB8fFxuICBmdW5jdGlvbiAoaWQ6IFJlcXVlc3RJZGxlQ2FsbGJhY2tIYW5kbGUpIHtcbiAgICByZXR1cm4gY2xlYXJUaW1lb3V0KGlkKVxuICB9XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports[\"default\"] = void 0;\n\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../next-server/lib/router/utils/get-asset-path-from-route */ \"./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"));\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\"); // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nvar MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  var entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  var resolver;\n  var prom = new Promise(function (resolve) {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? // eslint-disable-next-line no-sequences\n  generator().then(function (value) {\n    return resolver(value), value;\n  }) : prom;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (_unused) {\n    return false;\n  }\n}\n\nvar canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise(function (res, rej) {\n    if (document.querySelector(\"link[rel=\\\"prefetch\\\"][href^=\\\"\".concat(href, \"\\\"]\"))) {\n      return res();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = \"prefetch\";\n    link.crossOrigin = undefined;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nvar ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR'); // TODO: unexport\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction appendScript(src, script) {\n  return new Promise(function (resolve, reject) {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = function () {\n      return reject(markAssetError(new Error(\"Failed to load script: \".concat(src))));\n    }; // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n}\n\nfunction idleTimeout(ms, err) {\n  return new Promise(function (_resolve, reject) {\n    return (0, _requestIdleCallback.requestIdleCallback)(function () {\n      return setTimeout(function () {\n        return reject(err);\n      }, ms);\n    });\n  });\n} // TODO: stop exporting or cache the failure\n// It'd be best to stop exporting this. It's an implementation detail. We're\n// only exporting it for backwards compatibilty with the `page-loader`.\n// Only cache this response as a last resort if we cannot eliminate all other\n// code branches that use the Build Manifest Callback and push them through\n// the Route Loader interface.\n\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  var onBuildManifest = new Promise(function (resolve) {\n    // Mandatory because this is not concurrent safe:\n    var cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = function () {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return Promise.race([onBuildManifest, idleTimeout(MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')))]);\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    return Promise.resolve({\n      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute[\"default\"])(route, '.js'))],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(function (manifest) {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(\"Failed to lookup route: \".concat(route)));\n    }\n\n    var allFiles = manifest[route].map(function (entry) {\n      return assetPrefix + '/_next/' + encodeURI(entry);\n    });\n    return {\n      scripts: allFiles.filter(function (v) {\n        return v.endsWith('.js');\n      }),\n      css: allFiles.filter(function (v) {\n        return v.endsWith('.css');\n      })\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  var entrypoints = new Map();\n  var loadedScripts = new Map();\n  var styleSheets = new Map();\n  var routes = new Map();\n\n  function maybeExecuteScript(src) {\n    var prom = loadedScripts.get(src);\n\n    if (prom) {\n      return prom;\n    } // Skip executing script if it's already in the DOM:\n\n\n    if (document.querySelector(\"script[src^=\\\"\".concat(src, \"\\\"]\"))) {\n      return Promise.resolve();\n    }\n\n    loadedScripts.set(src, prom = appendScript(src));\n    return prom;\n  }\n\n  function fetchStyleSheet(href) {\n    var prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(function (res) {\n      if (!res.ok) {\n        throw new Error(\"Failed to load stylesheet: \".concat(href));\n      }\n\n      return res.text().then(function (text) {\n        return {\n          href: href,\n          content: text\n        };\n      });\n    })[\"catch\"](function (err) {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint: function whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n    onEntrypoint: function onEntrypoint(route, execute) {\n      Promise.resolve(execute).then(function (fn) {\n        return fn();\n      }).then(function (exports) {\n        return {\n          component: exports && exports[\"default\"] || exports,\n          exports: exports\n        };\n      }, function (err) {\n        return {\n          error: err\n        };\n      }).then(function (input) {\n        var old = entrypoints.get(route);\n        entrypoints.set(route, input);\n        if (old && 'resolve' in old) old.resolve(input);\n      });\n    },\n    loadRoute: function loadRoute(route) {\n      var _this = this;\n\n      return withFuture(route, routes, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getFilesForRou, scripts, css, _yield$Promise$all, _yield$Promise$all2, styles, entrypoint, res;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return getFilesForRoute(assetPrefix, route);\n\n              case 3:\n                _yield$getFilesForRou = _context.sent;\n                scripts = _yield$getFilesForRou.scripts;\n                css = _yield$getFilesForRou.css;\n                _context.next = 8;\n                return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n\n              case 8:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                styles = _yield$Promise$all2[1];\n                _context.next = 13;\n                return Promise.race([_this.whenEntrypoint(route), idleTimeout(MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Route did not complete loading: \".concat(route))))]);\n\n              case 13:\n                entrypoint = _context.sent;\n                res = Object.assign({\n                  styles: styles\n                }, entrypoint);\n                return _context.abrupt(\"return\", 'error' in entrypoint ? entrypoint : res);\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  error: _context.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 18]]);\n      })));\n    },\n    prefetch: function prefetch(route) {\n      var _this2 = this;\n\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      var cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(function (output) {\n        return Promise.all(canPrefetch ? output.scripts.map(function (script) {\n          return prefetchViaDom(script, 'script');\n        }) : []);\n      }).then(function () {\n        (0, _requestIdleCallback.requestIdleCallback)(function () {\n          return _this2.loadRoute(route);\n        });\n      })[\"catch\"]( // swallow prefetch errors\n      function () {});\n    }\n  };\n}\n\nvar _default = createRouteLoader;\nexports[\"default\"] = _default;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _construct = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/construct */ \"./node_modules/@babel/runtime/helpers/construct.js\");\n\nvar _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.useRouter = useRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports.createRouter = exports.withRouter = exports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ \"./node_modules/next/dist/next-server/lib/router/router.js\"));\n\nexports.Router = _router2[\"default\"];\nexports.NextRouter = _router2.NextRouter;\n\nvar _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ \"./node_modules/next/dist/next-server/lib/router-context.js\");\n\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\n\nexports.withRouter = _withRouter[\"default\"];\n/* global window */\n\nvar singletonRouter = {\n  router: null,\n  // holds the actual router instance\n  readyCallbacks: [],\n  ready: function ready(cb) {\n    if (this.router) return cb();\n\n    if (true) {\n      this.readyCallbacks.push(cb);\n    }\n  }\n}; // Create public properties and methods of the router in the singletonRouter\n\nvar urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady', 'isLocaleDomain'];\nvar routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];\nvar coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it\n\nObject.defineProperty(singletonRouter, 'events', {\n  get: function get() {\n    return _router2[\"default\"].events;\n  }\n});\nurlPropertyFields.forEach(function (field) {\n  // Here we need to use Object.defineProperty because, we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get: function get() {\n      var router = getRouter();\n      return router[field];\n    }\n  });\n});\ncoreMethodFields.forEach(function (field) {\n  // We don't really know the types here, so we add them later instead\n  ;\n\n  singletonRouter[field] = function () {\n    var router = getRouter();\n    return router[field].apply(router, arguments);\n  };\n});\nrouterEvents.forEach(function (event) {\n  singletonRouter.ready(function () {\n    _router2[\"default\"].events.on(event, function () {\n      var eventField = \"on\".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));\n      var _singletonRouter = singletonRouter;\n\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField].apply(_singletonRouter, arguments);\n        } catch (err) {\n          console.error(\"Error when running the Router event: \".concat(eventField));\n          console.error(\"\".concat(err.message, \"\\n\").concat(err.stack));\n        }\n      }\n    });\n  });\n});\n\nfunction getRouter() {\n  if (!singletonRouter.router) {\n    var message = 'No router instance found.\\n' + 'You should only use \"next/router\" inside the client side of your app.\\n';\n    throw new Error(message);\n  }\n\n  return singletonRouter.router;\n} // Export the singletonRouter and this is the public API.\n\n\nvar _default = singletonRouter; // Reexport the withRoute HOC\n\nexports[\"default\"] = _default;\n\nfunction useRouter() {\n  _s();\n\n  return _react[\"default\"].useContext(_routerContext.RouterContext);\n} // INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\n\n\n_s(useRouter, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar createRouter = function createRouter() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  singletonRouter.router = _construct(_router2[\"default\"], args);\n  singletonRouter.readyCallbacks.forEach(function (cb) {\n    return cb();\n  });\n  singletonRouter.readyCallbacks = [];\n  return singletonRouter.router;\n}; // This function is used to create the `withRouter` router instance\n\n\nexports.createRouter = createRouter;\n\nfunction makePublicRouterInstance(router) {\n  var _router = router;\n  var instance = {};\n\n  var _iterator = _createForOfIteratorHelper(urlPropertyFields),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var property = _step.value;\n\n      if (typeof _router[property] === 'object') {\n        instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful\n\n        continue;\n      }\n\n      instance[property] = _router[property];\n    } // Events is a static property on the router, the router doesn't have to be initialized to use it\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  instance.events = _router2[\"default\"].events;\n  coreMethodFields.forEach(function (field) {\n    instance[field] = function () {\n      return _router[field].apply(_router, arguments);\n    };\n  });\n  return instance;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports[\"default\"] = withRouter;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nfunction withRouter(ComposedComponent) {\n  function WithRouterWrapper(props) {\n    return /*#__PURE__*/_react[\"default\"].createElement(ComposedComponent, Object.assign({\n      router: (0, _router.useRouter)()\n    }, props));\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app\n  ;\n  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (true) {\n    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouterWrapper.displayName = \"withRouter(\".concat(name, \")\");\n  }\n\n  return WithRouterWrapper;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL2NsaWVudC93aXRoLXJvdXRlci50c3g/NGZjYiJdLCJuYW1lcyI6WyJDb21wb3NlZENvbXBvbmVudCIsImdldEluaXRpYWxQcm9wcyIsIldpdGhSb3V0ZXJXcmFwcGVyIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQVdlLHVDQUsrQjtBQUM1QyxvQ0FBb0Q7QUFDbEQsd0JBQU87QUFBbUIsWUFBTSxFQUFFLFlBQTNCLFNBQTJCO0FBQTNCLE9BQVAsS0FBTyxFQUFQO0FBR0Y7O0FBQUEsbUJBQWlCLENBQWpCLGtCQUFvQ0EsaUJBQWlCLENBQUNDLGVBQXRELENBQ0E7QUFEQTtBQUVFQyxtQkFBRCxvQkFBQ0EsR0FBaURGLGlCQUFELENBQWpELG1CQUFDRTs7QUFDRixZQUEyQztBQUN6QyxRQUFNQyxJQUFJLEdBQ1JILGlCQUFpQixDQUFqQkEsZUFBaUNBLGlCQUFpQixDQUFsREEsUUFERjtBQUVBRSxxQkFBaUIsQ0FBakJBO0FBR0Y7O0FBQUE7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3dpdGgtcm91dGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgTmV4dENvbXBvbmVudFR5cGUsIE5leHRQYWdlQ29udGV4dCB9IGZyb20gJy4uL25leHQtc2VydmVyL2xpYi91dGlscydcbmltcG9ydCB7IE5leHRSb3V0ZXIsIHVzZVJvdXRlciB9IGZyb20gJy4vcm91dGVyJ1xuXG5leHBvcnQgdHlwZSBXaXRoUm91dGVyUHJvcHMgPSB7XG4gIHJvdXRlcjogTmV4dFJvdXRlclxufVxuXG5leHBvcnQgdHlwZSBFeGNsdWRlUm91dGVyUHJvcHM8UD4gPSBQaWNrPFxuICBQLFxuICBFeGNsdWRlPGtleW9mIFAsIGtleW9mIFdpdGhSb3V0ZXJQcm9wcz5cbj5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2l0aFJvdXRlcjxcbiAgUCBleHRlbmRzIFdpdGhSb3V0ZXJQcm9wcyxcbiAgQyA9IE5leHRQYWdlQ29udGV4dFxuPihcbiAgQ29tcG9zZWRDb21wb25lbnQ6IE5leHRDb21wb25lbnRUeXBlPEMsIGFueSwgUD5cbik6IFJlYWN0LkNvbXBvbmVudFR5cGU8RXhjbHVkZVJvdXRlclByb3BzPFA+PiB7XG4gIGZ1bmN0aW9uIFdpdGhSb3V0ZXJXcmFwcGVyKHByb3BzOiBhbnkpOiBKU1guRWxlbWVudCB7XG4gICAgcmV0dXJuIDxDb21wb3NlZENvbXBvbmVudCByb3V0ZXI9e3VzZVJvdXRlcigpfSB7Li4ucHJvcHN9IC8+XG4gIH1cblxuICBXaXRoUm91dGVyV3JhcHBlci5nZXRJbml0aWFsUHJvcHMgPSBDb21wb3NlZENvbXBvbmVudC5nZXRJbml0aWFsUHJvcHNcbiAgLy8gVGhpcyBpcyBuZWVkZWQgdG8gYWxsb3cgY2hlY2tpbmcgZm9yIGN1c3RvbSBnZXRJbml0aWFsUHJvcHMgaW4gX2FwcFxuICA7KFdpdGhSb3V0ZXJXcmFwcGVyIGFzIGFueSkub3JpZ0dldEluaXRpYWxQcm9wcyA9IChDb21wb3NlZENvbXBvbmVudCBhcyBhbnkpLm9yaWdHZXRJbml0aWFsUHJvcHNcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBjb25zdCBuYW1lID1cbiAgICAgIENvbXBvc2VkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvc2VkQ29tcG9uZW50Lm5hbWUgfHwgJ1Vua25vd24nXG4gICAgV2l0aFJvdXRlcldyYXBwZXIuZGlzcGxheU5hbWUgPSBgd2l0aFJvdXRlcigke25hbWV9KWBcbiAgfVxuXG4gIHJldHVybiBXaXRoUm91dGVyV3JhcHBlclxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************!*\
  !*** (webpack)/css-loader/api.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports=function(){\"use strict\";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return\"@media \".concat(t[2],\" {\").concat(r,\"}\")}return r}).join(\"\")};t.i=function(n,r,o){if(typeof n===\"string\"){n=[[null,n,\"\"]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]=\"\".concat(r,\" and \").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||\"\";var o=n[3];if(!o){return r}if(t&&typeof btoa===\"function\"){var e=toComment(o);var a=o.sources.map(function(n){return\"/*# sourceURL=\".concat(o.sourceRoot||\"\").concat(n,\" */\")});return[r].concat(a).concat([e]).join(\"\\n\")}return[r].join(\"\\n\")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r=\"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(t);return\"/*# \".concat(r,\" */\")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(762)}();\n/* WEBPACK VAR INJECTION */}.call(this, \"/\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS9jc3MtbG9hZGVyL2FwaS5qcz84ZmI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJFQUEwQixhQUFhLE9BQU8sZ0JBQWdCLHNCQUFzQixTQUFTLCtCQUErQiw0QkFBNEIsa0NBQWtDLFNBQVMsK0JBQStCLGNBQWMsR0FBRyxTQUFTLFlBQVksb0JBQW9CLHdCQUF3QixnQkFBZ0IsU0FBUyxNQUFNLFlBQVksY0FBYyxLQUFLLGlCQUFpQixZQUFZLFlBQVksWUFBWSxXQUFXLEtBQUssc0JBQXNCLGVBQWUsU0FBUyxNQUFNLFVBQVUsT0FBTyxLQUFLLHdDQUF3QyxZQUFZLFVBQVUscUNBQXFDLGVBQWUsV0FBVyxPQUFPLFNBQVMsZ0NBQWdDLG1CQUFtQixnQ0FBZ0MsZ0VBQWdFLEVBQUUsMkNBQTJDLHFCQUFxQixzQkFBc0IsNERBQTRELDhDQUE4QyxjQUFjLG1CQUFtQixnQ0FBZ0MsU0FBUyxnQ0FBZ0MsU0FBUyxvQkFBb0IsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIscUNBQXFDLGdDQUFnQyxHIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ezc2MjpmdW5jdGlvbihuKXtuLmV4cG9ydHM9ZnVuY3Rpb24obil7dmFyIHQ9W107dC50b1N0cmluZz1mdW5jdGlvbiB0b1N0cmluZygpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbih0KXt2YXIgcj1jc3NXaXRoTWFwcGluZ1RvU3RyaW5nKHQsbik7aWYodFsyXSl7cmV0dXJuXCJAbWVkaWEgXCIuY29uY2F0KHRbMl0sXCIge1wiKS5jb25jYXQocixcIn1cIil9cmV0dXJuIHJ9KS5qb2luKFwiXCIpfTt0Lmk9ZnVuY3Rpb24obixyLG8pe2lmKHR5cGVvZiBuPT09XCJzdHJpbmdcIil7bj1bW251bGwsbixcIlwiXV19dmFyIGU9e307aWYobyl7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBjPXRoaXNbYV1bMF07aWYoYyE9bnVsbCl7ZVtjXT10cnVlfX19Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciB1PVtdLmNvbmNhdChuW2ldKTtpZihvJiZlW3VbMF1dKXtjb250aW51ZX1pZihyKXtpZighdVsyXSl7dVsyXT1yfWVsc2V7dVsyXT1cIlwiLmNvbmNhdChyLFwiIGFuZCBcIikuY29uY2F0KHVbMl0pfX10LnB1c2godSl9fTtyZXR1cm4gdH07ZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhuLHQpe3ZhciByPW5bMV18fFwiXCI7dmFyIG89blszXTtpZighbyl7cmV0dXJuIHJ9aWYodCYmdHlwZW9mIGJ0b2E9PT1cImZ1bmN0aW9uXCIpe3ZhciBlPXRvQ29tbWVudChvKTt2YXIgYT1vLnNvdXJjZXMubWFwKGZ1bmN0aW9uKG4pe3JldHVyblwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoby5zb3VyY2VSb290fHxcIlwiKS5jb25jYXQobixcIiAqL1wiKX0pO3JldHVybltyXS5jb25jYXQoYSkuY29uY2F0KFtlXSkuam9pbihcIlxcblwiKX1yZXR1cm5bcl0uam9pbihcIlxcblwiKX1mdW5jdGlvbiB0b0NvbW1lbnQobil7dmFyIHQ9YnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkobikpKSk7dmFyIHI9XCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQodCk7cmV0dXJuXCIvKiMgXCIuY29uY2F0KHIsXCIgKi9cIil9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXtpZih0W3JdKXtyZXR1cm4gdFtyXS5leHBvcnRzfXZhciBvPXRbcl09e2V4cG9ydHM6e319O3ZhciBlPXRydWU7dHJ5e25bcl0obyxvLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7ZT1mYWxzZX1maW5hbGx5e2lmKGUpZGVsZXRlIHRbcl19cmV0dXJuIG8uZXhwb3J0c31fX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjtyZXR1cm4gX19uY2N3cGNrX3JlcXVpcmVfXyg3NjIpfSgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./node_modules/govuk-frontend/govuk/all.scss":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-7-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-7-2!(webpack)/resolve-url-loader??ref--5-oneOf-7-3!(webpack)/sass-loader/cjs.js??ref--5-oneOf-7-4!./node_modules/govuk-frontend/govuk/all.scss ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../next/dist/compiled/css-loader/api.js */ \"./node_modules/next/dist/compiled/css-loader/api.js\");\n/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \"@charset \\\"UTF-8\\\";\\n.govuk-link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n/*! Copyright (c) 2011 by Margaret Calvert & Henrik Kubel. All rights reserved. The font has been customised for exclusive use on gov.uk. This cut is not commercially available. */\\n/* stylelint-disable-line scss/comment-no-loud  */\\n@font-face {\\n  font-family: \\\"GDS Transport\\\";\\n  font-style: normal;\\n  font-weight: normal;\\n  src: url(\\\"/assets/fonts/light-94a07e06a1-v2.woff2\\\") format(\\\"woff2\\\"), url(\\\"/assets/fonts/light-f591b13f7d-v2.woff\\\") format(\\\"woff\\\");\\n  font-display: fallback;\\n}\\n@font-face {\\n  font-family: \\\"GDS Transport\\\";\\n  font-style: normal;\\n  font-weight: bold;\\n  src: url(\\\"/assets/fonts/bold-b542beb274-v2.woff2\\\") format(\\\"woff2\\\"), url(\\\"/assets/fonts/bold-affa96571d-v2.woff\\\") format(\\\"woff\\\");\\n  font-display: fallback;\\n}\\n@media print {\\n  .govuk-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-link:link {\\n  color: #1d70b8;\\n}\\n.govuk-link:visited {\\n  color: #4c2c92;\\n}\\n.govuk-link:hover {\\n  color: #003078;\\n}\\n.govuk-link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  [href^=\\\"/\\\"].govuk-link:after, [href^=\\\"http://\\\"].govuk-link:after, [href^=\\\"https://\\\"].govuk-link:after {\\n    content: \\\" (\\\" attr(href) \\\")\\\";\\n    font-size: 90%;\\n    word-wrap: break-word;\\n  }\\n}\\n\\n.govuk-link--muted:link, .govuk-link--muted:visited, .govuk-link--muted:hover, .govuk-link--muted:active {\\n  color: #505a5f;\\n}\\n.govuk-link--muted:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-link--text-colour:link, .govuk-link--text-colour:visited, .govuk-link--text-colour:hover, .govuk-link--text-colour:active, .govuk-link--text-colour:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-link--text-colour:link, .govuk-link--text-colour:visited, .govuk-link--text-colour:hover, .govuk-link--text-colour:active, .govuk-link--text-colour:focus {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-link--no-visited-state:link {\\n  color: #1d70b8;\\n}\\n.govuk-link--no-visited-state:visited {\\n  color: #1d70b8;\\n}\\n.govuk-link--no-visited-state:hover {\\n  color: #003078;\\n}\\n.govuk-link--no-visited-state:active {\\n  color: #0b0c0c;\\n}\\n.govuk-link--no-visited-state:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-list {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  padding-left: 0;\\n  list-style-type: none;\\n}\\n@media print {\\n  .govuk-list {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-list {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-list {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list {\\n    margin-bottom: 20px;\\n  }\\n}\\n.govuk-list .govuk-list {\\n  margin-top: 10px;\\n}\\n\\n.govuk-list > li {\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-list--bullet {\\n  padding-left: 20px;\\n  list-style-type: disc;\\n}\\n\\n.govuk-list--number {\\n  padding-left: 20px;\\n  list-style-type: decimal;\\n}\\n\\n.govuk-list--bullet > li,\\n.govuk-list--number > li {\\n  margin-bottom: 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list--bullet > li,\\n.govuk-list--number > li {\\n    margin-bottom: 5px;\\n  }\\n}\\n\\n.govuk-list--spaced > li {\\n  margin-bottom: 10px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list--spaced > li {\\n    margin-bottom: 15px;\\n  }\\n}\\n\\n.govuk-template {\\n  background-color: #f3f2f1;\\n  -moz-text-size-adjust: 100%;\\n  text-size-adjust: 100%;\\n}\\n@media screen {\\n  .govuk-template {\\n    overflow-y: scroll;\\n  }\\n}\\n\\n.govuk-template__body {\\n  margin: 0;\\n  background-color: #ffffff;\\n}\\n\\n.govuk-heading-xl {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 30px;\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-xl {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-heading-l {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-heading-l {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-heading-l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-heading-m {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-heading-m {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-heading-m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-heading-s {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-heading-s {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-heading-s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-s {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-caption-xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-bottom: 5px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-xl {\\n    font-size: 27px;\\n    font-size: 1.6875rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-caption-xl {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-caption-l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-bottom: 5px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-l {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-caption-l {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-l {\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.govuk-caption-m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-m {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-caption-m {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-body-lead, .govuk-body-l {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-lead, .govuk-body-l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-body, .govuk-body-m {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body, .govuk-body-m {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body, .govuk-body-m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-s {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body-s {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-s {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-body-s {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-s {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-xs {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.25;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body-xs {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-xs {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-xs {\\n    font-size: 14px;\\n    font-size: 0.875rem;\\n    line-height: 1.4285714286;\\n  }\\n}\\n@media print {\\n  .govuk-body-xs {\\n    font-size: 12pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-xs {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-l + .govuk-heading-l, .govuk-body-lead + .govuk-heading-l {\\n  padding-top: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-l + .govuk-heading-l, .govuk-body-lead + .govuk-heading-l {\\n    padding-top: 10px;\\n  }\\n}\\n\\n.govuk-body-m + .govuk-heading-l, .govuk-body + .govuk-heading-l,\\n.govuk-body-s + .govuk-heading-l,\\n.govuk-list + .govuk-heading-l {\\n  padding-top: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-m + .govuk-heading-l, .govuk-body + .govuk-heading-l,\\n.govuk-body-s + .govuk-heading-l,\\n.govuk-list + .govuk-heading-l {\\n    padding-top: 20px;\\n  }\\n}\\n\\n.govuk-body-m + .govuk-heading-m, .govuk-body + .govuk-heading-m,\\n.govuk-body-s + .govuk-heading-m,\\n.govuk-list + .govuk-heading-m,\\n.govuk-body-m + .govuk-heading-s,\\n.govuk-body + .govuk-heading-s,\\n.govuk-body-s + .govuk-heading-s,\\n.govuk-list + .govuk-heading-s {\\n  padding-top: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-m + .govuk-heading-m, .govuk-body + .govuk-heading-m,\\n.govuk-body-s + .govuk-heading-m,\\n.govuk-list + .govuk-heading-m,\\n.govuk-body-m + .govuk-heading-s,\\n.govuk-body + .govuk-heading-s,\\n.govuk-body-s + .govuk-heading-s,\\n.govuk-list + .govuk-heading-s {\\n    padding-top: 10px;\\n  }\\n}\\n\\n.govuk-section-break {\\n  margin: 0;\\n  border: 0;\\n}\\n\\n.govuk-section-break--xl {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--xl {\\n    margin-top: 50px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--xl {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-section-break--l {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--l {\\n    margin-top: 30px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-section-break--m {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--m {\\n    margin-top: 20px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-section-break--visible {\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n\\n.govuk-button-group {\\n  margin-bottom: 5px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group {\\n    margin-bottom: 15px;\\n  }\\n}\\n.govuk-button-group .govuk-link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.1875;\\n  display: inline-block;\\n  max-width: 100%;\\n  margin-top: 5px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-button-group .govuk-link {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group .govuk-link {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button-group .govuk-link {\\n    font-size: 14pt;\\n    line-height: 19px;\\n  }\\n}\\n.govuk-button-group .govuk-button {\\n  margin-bottom: 17px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group {\\n    margin-right: -15px;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    align-items: baseline;\\n  }\\n  .govuk-button-group .govuk-button,\\n.govuk-button-group .govuk-link {\\n    margin-right: 15px;\\n  }\\n  .govuk-button-group .govuk-link {\\n    text-align: left;\\n  }\\n}\\n\\n.govuk-form-group {\\n  margin-bottom: 20px;\\n}\\n.govuk-form-group:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-form-group {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-form-group .govuk-form-group:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-form-group--error {\\n  padding-left: 15px;\\n  border-left: 5px solid #d4351c;\\n}\\n.govuk-form-group--error .govuk-form-group {\\n  padding: 0;\\n  border: 0;\\n}\\n\\n.govuk-grid-row {\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n.govuk-grid-row:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-grid-column-one-quarter {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-quarter {\\n    width: 25%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-third {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-third {\\n    width: 33.3333%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-half {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-half {\\n    width: 50%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-two-thirds {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-two-thirds {\\n    width: 66.6666%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-three-quarters {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-three-quarters {\\n    width: 75%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-full {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-full {\\n    width: 100%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-quarter-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-quarter-from-desktop {\\n    width: 25%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-third-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-third-from-desktop {\\n    width: 33.3333%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-half-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-half-from-desktop {\\n    width: 50%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-two-thirds-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-two-thirds-from-desktop {\\n    width: 66.6666%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-three-quarters-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-three-quarters-from-desktop {\\n    width: 75%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-full-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-full-from-desktop {\\n    width: 100%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-main-wrapper {\\n  display: block;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-main-wrapper {\\n    padding-top: 40px;\\n    padding-bottom: 40px;\\n  }\\n}\\n\\n.govuk-main-wrapper--auto-spacing:first-child,\\n.govuk-main-wrapper--l {\\n  padding-top: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-main-wrapper--auto-spacing:first-child,\\n.govuk-main-wrapper--l {\\n    padding-top: 50px;\\n  }\\n}\\n\\n.govuk-width-container {\\n  max-width: 960px;\\n  margin-right: 15px;\\n  margin-left: 15px;\\n}\\n@supports (margin: max(calc(0px))) {\\n  .govuk-width-container {\\n    margin-right: max(15px, calc(15px + env(safe-area-inset-right)));\\n    margin-left: max(15px, calc(15px + env(safe-area-inset-left)));\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-width-container {\\n    margin-right: 30px;\\n    margin-left: 30px;\\n  }\\n  @supports (margin: max(calc(0px))) {\\n    .govuk-width-container {\\n      margin-right: max(30px, calc(15px + env(safe-area-inset-right)));\\n      margin-left: max(30px, calc(15px + env(safe-area-inset-left)));\\n    }\\n  }\\n}\\n@media (min-width: 1020px) {\\n  .govuk-width-container {\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n  @supports (margin: max(calc(0px))) {\\n    .govuk-width-container {\\n      margin-right: auto;\\n      margin-left: auto;\\n    }\\n  }\\n}\\n\\n.govuk-accordion {\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-accordion__section {\\n  padding-top: 15px;\\n}\\n\\n.govuk-accordion__section-header {\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n\\n.govuk-accordion__section-heading {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n@media print {\\n  .govuk-accordion__section-heading {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion__section-heading {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-accordion__section-heading {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-accordion__section-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding-top: 15px;\\n}\\n@media print {\\n  .govuk-accordion__section-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion__section-button {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-accordion__section-button {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-accordion__section-summary {\\n  margin-top: 10px;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-accordion__section-content > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.js-enabled .govuk-accordion {\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n.js-enabled .govuk-accordion__section {\\n  padding-top: 0;\\n}\\n.js-enabled .govuk-accordion__section-content {\\n  display: none;\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__section-content {\\n    padding-top: 15px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__section-content {\\n    padding-bottom: 15px;\\n  }\\n}\\n.js-enabled .govuk-accordion__section--expanded .govuk-accordion__section-content {\\n  display: block;\\n}\\n.js-enabled .govuk-accordion__open-all {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  position: relative;\\n  z-index: 1;\\n  margin: 0;\\n  padding: 0;\\n  border-width: 0;\\n  color: #1d70b8;\\n  background: none;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-family: sans-serif;\\n  }\\n}\\n.js-enabled .govuk-accordion__open-all:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.js-enabled .govuk-accordion__open-all:link {\\n  color: #1d70b8;\\n}\\n.js-enabled .govuk-accordion__open-all:visited {\\n  color: #4c2c92;\\n}\\n.js-enabled .govuk-accordion__open-all:hover {\\n  color: #003078;\\n}\\n.js-enabled .govuk-accordion__open-all:active {\\n  color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__open-all:focus {\\n  color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__open-all::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.js-enabled .govuk-accordion__section-header {\\n  position: relative;\\n  padding-right: 40px;\\n  border-top: 1px solid #b1b4b6;\\n  color: #1d70b8;\\n  cursor: pointer;\\n}\\n@media (hover: none) {\\n  .js-enabled .govuk-accordion__section-header:hover {\\n    border-top-color: #1d70b8;\\n    box-shadow: inset 0 3px 0 0 #1d70b8;\\n  }\\n}\\n.js-enabled .govuk-accordion__section-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  margin-left: 0;\\n  padding: 0;\\n  border-width: 0;\\n  color: inherit;\\n  background: none;\\n  text-align: left;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__section-button {\\n    font-family: sans-serif;\\n  }\\n}\\n.js-enabled .govuk-accordion__section-button:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.js-enabled .govuk-accordion__section-button::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.js-enabled .govuk-accordion__section-button:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n.js-enabled .govuk-accordion__section-button:hover:not(:focus) {\\n  text-decoration: underline;\\n}\\n@media (hover: none) {\\n  .js-enabled .govuk-accordion__section-button:hover {\\n    text-decoration: none;\\n  }\\n}\\n.js-enabled .govuk-accordion__controls {\\n  text-align: right;\\n}\\n.js-enabled .govuk-accordion__icon {\\n  position: absolute;\\n  top: 50%;\\n  right: 15px;\\n  width: 16px;\\n  height: 16px;\\n  margin-top: -8px;\\n}\\n.js-enabled .govuk-accordion__icon:after,\\n.js-enabled .govuk-accordion__icon:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 25%;\\n  height: 25%;\\n  margin: auto;\\n  border: 2px solid transparent;\\n  background-color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__icon:before {\\n  width: 100%;\\n}\\n.js-enabled .govuk-accordion__icon:after {\\n  height: 100%;\\n}\\n.js-enabled .govuk-accordion__section--expanded .govuk-accordion__icon:after {\\n  content: \\\" \\\";\\n  display: none;\\n}\\n\\n.govuk-back-link {\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  display: inline-block;\\n  position: relative;\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  padding-left: 14px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-back-link {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-back-link {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-back-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-back-link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-back-link:link, .govuk-back-link:visited, .govuk-back-link:hover, .govuk-back-link:active, .govuk-back-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-back-link:link, .govuk-back-link:visited, .govuk-back-link:hover, .govuk-back-link:active, .govuk-back-link:focus {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-back-link[href] {\\n  text-decoration: underline;\\n}\\n.govuk-back-link[href]:focus {\\n  text-decoration: none;\\n}\\n.govuk-back-link[href]:focus:before {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-back-link:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 3px;\\n  width: 7px;\\n  height: 7px;\\n  margin: auto 0;\\n  transform: rotate(225deg);\\n  border: solid;\\n  border-width: 1px 1px 0 0;\\n  border-color: #505a5f;\\n}\\n\\n.govuk-back-link:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: -14px;\\n  right: 0;\\n  bottom: -14px;\\n  left: 0;\\n}\\n\\n.govuk-breadcrumbs {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  color: #0b0c0c;\\n  margin-top: 15px;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-breadcrumbs {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-breadcrumbs__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none;\\n}\\n.govuk-breadcrumbs__list:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-breadcrumbs__list-item {\\n  display: inline-block;\\n  position: relative;\\n  margin-bottom: 5px;\\n  margin-left: 10px;\\n  padding-left: 15.655px;\\n  float: left;\\n}\\n.govuk-breadcrumbs__list-item:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: -3.31px;\\n  width: 7px;\\n  height: 7px;\\n  margin: auto 0;\\n  transform: rotate(45deg);\\n  border: solid;\\n  border-width: 1px 1px 0 0;\\n  border-color: #505a5f;\\n}\\n.govuk-breadcrumbs__list-item:first-child {\\n  margin-left: 0;\\n  padding-left: 0;\\n}\\n.govuk-breadcrumbs__list-item:first-child:before {\\n  content: none;\\n  display: none;\\n}\\n\\n.govuk-breadcrumbs__link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-breadcrumbs__link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-breadcrumbs__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-breadcrumbs__link:link, .govuk-breadcrumbs__link:visited, .govuk-breadcrumbs__link:hover, .govuk-breadcrumbs__link:active, .govuk-breadcrumbs__link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-breadcrumbs__link:link, .govuk-breadcrumbs__link:visited, .govuk-breadcrumbs__link:hover, .govuk-breadcrumbs__link:active, .govuk-breadcrumbs__link:focus {\\n    color: #000000;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item {\\n    display: none;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:first-child, .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:last-child {\\n    display: inline-block;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:before {\\n    top: 6px;\\n    margin: 0;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list {\\n    display: flex;\\n  }\\n}\\n\\n.govuk-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.1875;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n  margin-top: 0;\\n  margin-right: 0;\\n  margin-left: 0;\\n  margin-bottom: 22px;\\n  padding: 8px 10px 7px;\\n  border: 2px solid transparent;\\n  border-radius: 0;\\n  color: #ffffff;\\n  background-color: #00703c;\\n  box-shadow: 0 2px 0 #002d18;\\n  text-align: center;\\n  vertical-align: top;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .govuk-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button {\\n    font-size: 14pt;\\n    line-height: 19px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    margin-bottom: 32px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    width: auto;\\n  }\\n}\\n.govuk-button:link, .govuk-button:visited, .govuk-button:active, .govuk-button:hover {\\n  color: #ffffff;\\n  text-decoration: none;\\n}\\n.govuk-button::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.govuk-button:hover {\\n  background-color: #005a30;\\n}\\n.govuk-button:active {\\n  top: 2px;\\n}\\n.govuk-button:focus {\\n  border-color: #ffdd00;\\n  outline: 3px solid transparent;\\n  box-shadow: inset 0 0 0 1px #ffdd00;\\n}\\n.govuk-button:focus:not(:active):not(:hover) {\\n  border-color: #ffdd00;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 2px 0 #0b0c0c;\\n}\\n.govuk-button:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: -2px;\\n  right: -2px;\\n  bottom: -4px;\\n  left: -2px;\\n  background: transparent;\\n}\\n.govuk-button:active:before {\\n  top: -4px;\\n}\\n\\n.govuk-button--disabled,\\n.govuk-button[disabled=disabled],\\n.govuk-button[disabled] {\\n  opacity: 0.5;\\n}\\n.govuk-button--disabled:hover,\\n.govuk-button[disabled=disabled]:hover,\\n.govuk-button[disabled]:hover {\\n  background-color: #00703c;\\n  cursor: default;\\n}\\n.govuk-button--disabled:focus,\\n.govuk-button[disabled=disabled]:focus,\\n.govuk-button[disabled]:focus {\\n  outline: none;\\n}\\n.govuk-button--disabled:active,\\n.govuk-button[disabled=disabled]:active,\\n.govuk-button[disabled]:active {\\n  top: 0;\\n  box-shadow: 0 2px 0 #002d18;\\n}\\n\\n.govuk-button--secondary {\\n  background-color: #f3f2f1;\\n  box-shadow: 0 2px 0 #929191;\\n}\\n.govuk-button--secondary, .govuk-button--secondary:link, .govuk-button--secondary:visited, .govuk-button--secondary:active, .govuk-button--secondary:hover {\\n  color: #0b0c0c;\\n}\\n.govuk-button--secondary:hover {\\n  background-color: #dbdad9;\\n}\\n.govuk-button--secondary:hover[disabled] {\\n  background-color: #f3f2f1;\\n}\\n\\n.govuk-button--warning {\\n  background-color: #d4351c;\\n  box-shadow: 0 2px 0 #55150b;\\n}\\n.govuk-button--warning, .govuk-button--warning:link, .govuk-button--warning:visited, .govuk-button--warning:active, .govuk-button--warning:hover {\\n  color: #ffffff;\\n}\\n.govuk-button--warning:hover {\\n  background-color: #aa2a16;\\n}\\n.govuk-button--warning:hover[disabled] {\\n  background-color: #d4351c;\\n}\\n\\n.govuk-button--start {\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1;\\n  display: inline-flex;\\n  min-height: auto;\\n  justify-content: center;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button--start {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button--start {\\n    font-size: 18pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-button__start-icon {\\n  margin-left: 5px;\\n  vertical-align: middle;\\n  flex-shrink: 0;\\n  align-self: center;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-button__start-icon {\\n    margin-left: 10px;\\n  }\\n}\\n\\n.govuk-error-message {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-bottom: 15px;\\n  clear: both;\\n  color: #d4351c;\\n}\\n@media print {\\n  .govuk-error-message {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-message {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-error-message {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset {\\n  min-width: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n}\\n.govuk-fieldset:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n@supports not (caret-color: auto) {\\n  .govuk-fieldset,\\nx:-moz-any-link {\\n    display: table-cell;\\n  }\\n}\\n.govuk-fieldset__legend {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  box-sizing: border-box;\\n  display: table;\\n  max-width: 100%;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  white-space: normal;\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-fieldset__legend--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__legend--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-fieldset__legend--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__legend--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-fieldset__legend--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__heading {\\n  margin: 0;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.govuk-hint {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-bottom: 15px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-hint {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-hint {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-hint {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-fieldset__legend + .govuk-hint {\\n  margin-top: -5px;\\n}\\n\\n.govuk-label {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n@media print {\\n  .govuk-label {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-label {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-label {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-label--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-label--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-label--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-label--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-label--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-label--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-label--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-label--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-label--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-label--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label-wrapper {\\n  margin: 0;\\n}\\n\\n.govuk-checkboxes__item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  position: relative;\\n  min-height: 40px;\\n  margin-bottom: 10px;\\n  padding-left: 40px;\\n  clear: left;\\n}\\n@media print {\\n  .govuk-checkboxes__item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes__item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-checkboxes__item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-checkboxes__item:last-child,\\n.govuk-checkboxes__item:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-checkboxes__input {\\n  cursor: pointer;\\n  position: absolute;\\n  z-index: 1;\\n  top: -2px;\\n  left: -2px;\\n  width: 44px;\\n  height: 44px;\\n  margin: 0;\\n  opacity: 0;\\n}\\n\\n.govuk-checkboxes__label {\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding: 8px 15px 5px;\\n  cursor: pointer;\\n  touch-action: manipulation;\\n}\\n\\n.govuk-checkboxes__label:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border: 2px solid currentColor;\\n  background: transparent;\\n}\\n\\n.govuk-checkboxes__label:after {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 11px;\\n  left: 9px;\\n  width: 23px;\\n  height: 12px;\\n  transform: rotate(-45deg);\\n  border: solid;\\n  border-width: 0 0 5px 5px;\\n  border-top-color: transparent;\\n  opacity: 0;\\n  background: transparent;\\n}\\n\\n.govuk-checkboxes__hint {\\n  display: block;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n}\\n\\n.govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n  border-width: 4px;\\n  box-shadow: 0 0 0 3px #ffdd00;\\n}\\n\\n.govuk-checkboxes__input:checked + .govuk-checkboxes__label:after {\\n  opacity: 1;\\n}\\n\\n.govuk-checkboxes__input:disabled,\\n.govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n  cursor: default;\\n}\\n\\n.govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n  opacity: 0.5;\\n}\\n\\n.govuk-checkboxes__conditional {\\n  margin-bottom: 15px;\\n  margin-left: 18px;\\n  padding-left: 33px;\\n  border-left: 4px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes__conditional {\\n    margin-bottom: 20px;\\n  }\\n}\\n.js-enabled .govuk-checkboxes__conditional--hidden {\\n  display: none;\\n}\\n.govuk-checkboxes__conditional > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-checkboxes--small .govuk-checkboxes__item {\\n  min-height: 0;\\n  margin-bottom: 0;\\n  padding-left: 34px;\\n  float: left;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__input {\\n  left: -10px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label {\\n  margin-top: -2px;\\n  padding: 13px 15px 13px 1px;\\n  float: left;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes--small .govuk-checkboxes__label {\\n    padding: 11px 15px 10px 1px;\\n  }\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label:before {\\n  top: 8px;\\n  width: 24px;\\n  height: 24px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label:after {\\n  top: 15px;\\n  left: 6px;\\n  width: 12px;\\n  height: 6.5px;\\n  border-width: 0 0 3px 3px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__hint {\\n  padding: 0;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__conditional {\\n  margin-left: 10px;\\n  padding-left: 20px;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n  box-shadow: 0 0 0 10px #b1b4b6;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n  box-shadow: 0 0 0 3px #ffdd00, 0 0 0 10px #b1b4b6;\\n}\\n@media (hover: none), (pointer: coarse) {\\n  .govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n    box-shadow: none;\\n    box-shadow: initial;\\n  }\\n  .govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n    box-shadow: 0 0 0 3px #ffdd00;\\n  }\\n}\\n\\n.govuk-textarea {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  display: block;\\n  width: 100%;\\n  min-height: 40px;\\n  margin-bottom: 20px;\\n  padding: 5px;\\n  resize: vertical;\\n  border: 2px solid #0b0c0c;\\n  border-radius: 0;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .govuk-textarea {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-textarea {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-textarea {\\n    font-size: 14pt;\\n    line-height: 1.25;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-textarea {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-textarea:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-textarea--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-textarea--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-character-count {\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-character-count {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-character-count .govuk-form-group,\\n.govuk-character-count .govuk-textarea {\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-character-count__message {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-feature-settings: \\\"tnum\\\" 1;\\n  font-weight: 400;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n@media print {\\n  .govuk-character-count__message {\\n    font-family: sans-serif;\\n  }\\n}\\n@supports (font-variant-numeric: tabular-nums) {\\n  .govuk-character-count__message {\\n    font-feature-settings: normal, \\\"tnum\\\";\\n    font-variant-numeric: tabular-nums;\\n  }\\n}\\n\\n.govuk-character-count__message--disabled {\\n  visibility: hidden;\\n}\\n\\n.govuk-cookie-banner {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  padding-top: 20px;\\n  border-bottom: 10px solid transparent;\\n  background-color: #f3f2f1;\\n}\\n@media print {\\n  .govuk-cookie-banner {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-cookie-banner {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-cookie-banner {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-cookie-banner[hidden] {\\n  display: none;\\n}\\n\\n.govuk-cookie-banner__message {\\n  margin-bottom: -10px;\\n}\\n.govuk-cookie-banner__message[hidden] {\\n  display: none;\\n}\\n.govuk-cookie-banner__message:focus {\\n  outline: none;\\n}\\n\\n.govuk-summary-list {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-summary-list {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-summary-list {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-summary-list {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    display: table;\\n    width: 100%;\\n    table-layout: fixed;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__row {\\n    margin-bottom: 15px;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__row {\\n    display: table-row;\\n  }\\n}\\n\\n.govuk-summary-list__key,\\n.govuk-summary-list__value,\\n.govuk-summary-list__actions {\\n  margin: 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__key,\\n.govuk-summary-list__value,\\n.govuk-summary-list__actions {\\n    display: table-cell;\\n    padding-top: 10px;\\n    padding-right: 20px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n}\\n\\n.govuk-summary-list__actions {\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__actions {\\n    width: 20%;\\n    padding-right: 0;\\n    text-align: right;\\n  }\\n}\\n\\n.govuk-summary-list__key,\\n.govuk-summary-list__value {\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n}\\n\\n.govuk-summary-list__key {\\n  margin-bottom: 5px;\\n  font-weight: 700;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__key {\\n    width: 30%;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__value {\\n    margin-bottom: 15px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__value {\\n    width: 50%;\\n  }\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__value:last-child {\\n    width: 70%;\\n  }\\n}\\n\\n.govuk-summary-list__value > p {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-summary-list__value > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-summary-list__actions-list {\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.govuk-summary-list__actions-list-item {\\n  display: inline;\\n  margin-right: 10px;\\n  padding-right: 10px;\\n}\\n\\n.govuk-summary-list__actions-list-item:not(:last-child) {\\n  border-right: 1px solid #b1b4b6;\\n}\\n\\n.govuk-summary-list__actions-list-item:last-child {\\n  margin-right: 0;\\n  padding-right: 0;\\n  border: 0;\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list--no-border .govuk-summary-list__row {\\n    border: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list--no-border .govuk-summary-list__key,\\n.govuk-summary-list--no-border .govuk-summary-list__value,\\n.govuk-summary-list--no-border .govuk-summary-list__actions {\\n    padding-bottom: 11px;\\n    border: 0;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__row--no-border {\\n    border: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__row--no-border .govuk-summary-list__key,\\n.govuk-summary-list__row--no-border .govuk-summary-list__value,\\n.govuk-summary-list__row--no-border .govuk-summary-list__actions {\\n    padding-bottom: 11px;\\n    border: 0;\\n  }\\n}\\n\\n.govuk-input {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 40px;\\n  height: 2.5rem;\\n  margin-top: 0;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n  border-radius: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n@media print {\\n  .govuk-input {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-input {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-input {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-input:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-input::-webkit-outer-spin-button,\\n.govuk-input::-webkit-inner-spin-button {\\n  margin: 0;\\n  -webkit-appearance: none;\\n}\\n\\n.govuk-input[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\n.govuk-input--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-input--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-input--width-30 {\\n  max-width: 59ex;\\n}\\n\\n.govuk-input--width-20 {\\n  max-width: 41ex;\\n}\\n\\n.govuk-input--width-10 {\\n  max-width: 23ex;\\n}\\n\\n.govuk-input--width-5 {\\n  max-width: 10.8ex;\\n}\\n\\n.govuk-input--width-4 {\\n  max-width: 9ex;\\n}\\n\\n.govuk-input--width-3 {\\n  max-width: 7.2ex;\\n}\\n\\n.govuk-input--width-2 {\\n  max-width: 5.4ex;\\n}\\n\\n.govuk-input__wrapper {\\n  display: flex;\\n}\\n.govuk-input__wrapper .govuk-input {\\n  flex: 0 1 auto;\\n}\\n.govuk-input__wrapper .govuk-input:focus {\\n  z-index: 1;\\n}\\n@media (max-width: 19.99em) {\\n  .govuk-input__wrapper {\\n    display: block;\\n  }\\n  .govuk-input__wrapper .govuk-input {\\n    max-width: 100%;\\n  }\\n}\\n\\n.govuk-input__prefix,\\n.govuk-input__suffix {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  min-width: 40px;\\n  min-width: 2.5rem;\\n  height: 40px;\\n  height: 2.5rem;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n  background-color: #f3f2f1;\\n  text-align: center;\\n  white-space: nowrap;\\n  cursor: default;\\n  flex: 0 0 auto;\\n}\\n@media print {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    line-height: 1.6;\\n  }\\n}\\n@media (max-width: 19.99em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    display: block;\\n    height: 100%;\\n    white-space: normal;\\n  }\\n}\\n\\n@media (max-width: 19.99em) {\\n  .govuk-input__prefix {\\n    border-bottom: 0;\\n  }\\n}\\n@media (min-width: 20em) {\\n  .govuk-input__prefix {\\n    border-right: 0;\\n  }\\n}\\n\\n@media (max-width: 19.99em) {\\n  .govuk-input__suffix {\\n    border-top: 0;\\n  }\\n}\\n@media (min-width: 20em) {\\n  .govuk-input__suffix {\\n    border-left: 0;\\n  }\\n}\\n\\n.govuk-date-input {\\n  font-size: 0;\\n}\\n.govuk-date-input:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-date-input__item {\\n  display: inline-block;\\n  margin-right: 20px;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-date-input__label {\\n  display: block;\\n}\\n\\n.govuk-date-input__input {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-details {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-bottom: 20px;\\n  display: block;\\n}\\n@media print {\\n  .govuk-details {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-details {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-details {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-details {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-details {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-details__summary {\\n  display: inline-block;\\n  position: relative;\\n  margin-bottom: 5px;\\n  padding-left: 25px;\\n  color: #1d70b8;\\n  cursor: pointer;\\n}\\n.govuk-details__summary:hover {\\n  color: #003078;\\n}\\n.govuk-details__summary:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-details__summary-text {\\n  text-decoration: underline;\\n}\\n\\n.govuk-details__summary:focus .govuk-details__summary-text {\\n  text-decoration: none;\\n}\\n\\n.govuk-details__summary::-webkit-details-marker {\\n  display: none;\\n}\\n\\n.govuk-details__summary:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: -1px;\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\\n  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\\n  border-width: 7px 0 7px 12.124px;\\n  border-left-color: inherit;\\n}\\n.govuk-details[open] > .govuk-details__summary:before {\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  border-width: 12.124px 7px 0 7px;\\n  border-top-color: inherit;\\n}\\n\\n.govuk-details__text {\\n  padding: 15px;\\n  padding-left: 20px;\\n  border-left: 5px solid #b1b4b6;\\n}\\n\\n.govuk-details__text p {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n\\n.govuk-details__text > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-error-summary {\\n  color: #0b0c0c;\\n  padding: 15px;\\n  margin-bottom: 30px;\\n  border: 5px solid #d4351c;\\n}\\n@media print {\\n  .govuk-error-summary {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary {\\n    padding: 20px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary {\\n    margin-bottom: 50px;\\n  }\\n}\\n.govuk-error-summary:focus {\\n  outline: 3px solid #ffdd00;\\n}\\n\\n.govuk-error-summary__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-error-summary__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__title {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-error-summary__title {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__title {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-error-summary__body {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-error-summary__body {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__body {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-error-summary__body {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-error-summary__body p {\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__body p {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-error-summary__list {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-error-summary__list a {\\n  font-weight: 700;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-error-summary__list a {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-error-summary__list a:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-error-summary__list a:link, .govuk-error-summary__list a:visited {\\n  color: #d4351c;\\n}\\n.govuk-error-summary__list a:hover {\\n  color: #942514;\\n}\\n.govuk-error-summary__list a:active {\\n  color: #d4351c;\\n}\\n.govuk-error-summary__list a:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-file-upload {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n@media print {\\n  .govuk-file-upload {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-file-upload {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-file-upload {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-file-upload {\\n    color: #000000;\\n  }\\n}\\n.govuk-file-upload:focus {\\n  margin-right: -5px;\\n  margin-left: -5px;\\n  padding-right: 5px;\\n  padding-left: 5px;\\n  outline: 3px solid #ffdd00;\\n  box-shadow: inset 0 0 0 4px #0b0c0c;\\n}\\n.govuk-file-upload:focus-within {\\n  margin-right: -5px;\\n  margin-left: -5px;\\n  padding-right: 5px;\\n  padding-left: 5px;\\n  outline: 3px solid #ffdd00;\\n  box-shadow: inset 0 0 0 4px #0b0c0c;\\n}\\n\\n.govuk-footer {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  padding-top: 25px;\\n  padding-bottom: 15px;\\n  border-top: 1px solid #b1b4b6;\\n  color: #0b0c0c;\\n  background: #f3f2f1;\\n}\\n@media print {\\n  .govuk-footer {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-footer {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    padding-top: 40px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    padding-bottom: 25px;\\n  }\\n}\\n\\n.govuk-footer__link:link, .govuk-footer__link:visited, .govuk-footer__link:hover, .govuk-footer__link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-footer__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-footer__section-break {\\n  margin: 0;\\n  margin-bottom: 30px;\\n  border: 0;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__section-break {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-footer__meta {\\n  display: flex;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n  flex-wrap: wrap;\\n  align-items: flex-end;\\n  justify-content: center;\\n}\\n\\n.govuk-footer__meta-item {\\n  margin-right: 15px;\\n  margin-bottom: 25px;\\n  margin-left: 15px;\\n}\\n\\n.govuk-footer__meta-item--grow {\\n  flex: 1 1;\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-footer__meta-item--grow {\\n    flex-basis: 320px;\\n  }\\n}\\n\\n.govuk-footer__licence-logo {\\n  display: inline-block;\\n  margin-right: 10px;\\n  vertical-align: top;\\n}\\n@media (max-width: 48.0525em) {\\n  .govuk-footer__licence-logo {\\n    margin-bottom: 15px;\\n  }\\n}\\n\\n.govuk-footer__licence-description {\\n  display: inline-block;\\n}\\n\\n.govuk-footer__copyright-logo {\\n  display: inline-block;\\n  min-width: 125px;\\n  padding-top: 112px;\\n  background-image: url(\\\"/assets/images/govuk-crest.png\\\");\\n  background-repeat: no-repeat;\\n  background-position: 50% 0%;\\n  background-size: 125px 102px;\\n  text-align: center;\\n  text-decoration: none;\\n  white-space: nowrap;\\n}\\n@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\\n  .govuk-footer__copyright-logo {\\n    background-image: url(\\\"/assets/images/govuk-crest-2x.png\\\");\\n  }\\n}\\n\\n.govuk-footer__inline-list {\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  padding: 0;\\n}\\n\\n.govuk-footer__meta-custom {\\n  margin-bottom: 20px;\\n}\\n\\n.govuk-footer__inline-list-item {\\n  display: inline-block;\\n  margin-right: 15px;\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-footer__heading {\\n  margin-bottom: 25px;\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__heading {\\n    margin-bottom: 40px;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-footer__heading {\\n    padding-bottom: 10px;\\n  }\\n}\\n\\n.govuk-footer__navigation {\\n  display: flex;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n  flex-wrap: wrap;\\n}\\n\\n.govuk-footer__section {\\n  display: inline-block;\\n  margin-right: 15px;\\n  margin-bottom: 30px;\\n  margin-left: 15px;\\n  vertical-align: top;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n}\\n@media (max-width: 48.0525em) {\\n  .govuk-footer__section {\\n    flex-basis: 200px;\\n  }\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-footer__section:first-child:nth-last-child(2) {\\n    flex-grow: 2;\\n  }\\n}\\n.govuk-footer__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  -webkit-column-gap: 30px;\\n  grid-column-gap: 30px;\\n  column-gap: 30px;\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-footer__list--columns-2 {\\n    column-count: 2;\\n  }\\n\\n  .govuk-footer__list--columns-3 {\\n    column-count: 3;\\n  }\\n}\\n.govuk-footer__list-item {\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__list-item {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-footer__list-item:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-header {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  border-bottom: 10px solid #ffffff;\\n  color: #ffffff;\\n  background: #0b0c0c;\\n}\\n@media print {\\n  .govuk-header {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n\\n.govuk-header__container--full-width {\\n  padding: 0 15px;\\n  border-color: #1d70b8;\\n}\\n.govuk-header__container--full-width .govuk-header__menu-button {\\n  right: 15px;\\n}\\n\\n.govuk-header__container {\\n  position: relative;\\n  margin-bottom: -10px;\\n  padding-top: 10px;\\n  border-bottom: 10px solid #1d70b8;\\n}\\n.govuk-header__container:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-header__logotype {\\n  display: inline-block;\\n  margin-right: 5px;\\n}\\n\\n.govuk-header__logotype-crown {\\n  position: relative;\\n  top: -1px;\\n  margin-right: 1px;\\n  fill: currentColor;\\n  vertical-align: top;\\n}\\n\\n.govuk-header__logotype-crown-fallback-image {\\n  width: 36px;\\n  height: 32px;\\n  border: 0;\\n  vertical-align: middle;\\n}\\n\\n.govuk-header__product-name {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1;\\n  display: inline-table;\\n  padding-right: 10px;\\n}\\n@media print {\\n  .govuk-header__product-name {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__product-name {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-header__product-name {\\n    font-size: 18pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-header__link {\\n  text-decoration: none;\\n}\\n.govuk-header__link:link, .govuk-header__link:visited {\\n  color: #ffffff;\\n}\\n.govuk-header__link:hover {\\n  text-decoration: underline;\\n}\\n.govuk-header__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-header__link--homepage {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  display: inline-block;\\n  font-size: 30px;\\n  line-height: 1;\\n}\\n@media print {\\n  .govuk-header__link--homepage {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-header__link--homepage:link, .govuk-header__link--homepage:visited {\\n  text-decoration: none;\\n}\\n.govuk-header__link--homepage:hover, .govuk-header__link--homepage:active {\\n  margin-bottom: -1px;\\n  border-bottom: 1px solid;\\n}\\n.govuk-header__link--homepage:focus {\\n  margin-bottom: 0;\\n  border-bottom: 0;\\n}\\n\\n.govuk-header__link--service-name {\\n  display: inline-block;\\n  margin-bottom: 10px;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n}\\n@media print {\\n  .govuk-header__link--service-name {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__link--service-name {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__link--service-name {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-header__logo,\\n.govuk-header__content {\\n  box-sizing: border-box;\\n}\\n\\n.govuk-header__logo {\\n  margin-bottom: 10px;\\n  padding-right: 50px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__logo {\\n    margin-bottom: 10px;\\n  }\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-header__logo {\\n    width: 33.33%;\\n    padding-right: 15px;\\n    float: left;\\n    vertical-align: top;\\n  }\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-header__content {\\n    width: 66.66%;\\n    padding-left: 15px;\\n    float: left;\\n  }\\n}\\n\\n.govuk-header__menu-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  display: none;\\n  position: absolute;\\n  top: 20px;\\n  right: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  color: #ffffff;\\n  background: none;\\n}\\n@media print {\\n  .govuk-header__menu-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__menu-button {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__menu-button {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n.govuk-header__menu-button:hover {\\n  text-decoration: underline;\\n}\\n.govuk-header__menu-button:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-header__menu-button:after {\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  border-width: 8.66px 5px 0 5px;\\n  border-top-color: inherit;\\n  content: \\\"\\\";\\n  margin-left: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__menu-button {\\n    top: 15px;\\n  }\\n}\\n\\n.govuk-header__menu-button--open:after {\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\n  border-width: 0 5px 8.66px 5px;\\n  border-bottom-color: inherit;\\n}\\n\\n.govuk-header__navigation {\\n  margin-bottom: 10px;\\n  display: block;\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__navigation {\\n    margin-bottom: 10px;\\n  }\\n}\\n\\n.js-enabled .govuk-header__menu-button {\\n  display: block;\\n}\\n@media (min-width: 48.0625em) {\\n  .js-enabled .govuk-header__menu-button {\\n    display: none;\\n  }\\n}\\n.js-enabled .govuk-header__navigation {\\n  display: none;\\n}\\n@media (min-width: 48.0625em) {\\n  .js-enabled .govuk-header__navigation {\\n    display: block;\\n  }\\n}\\n.js-enabled .govuk-header__navigation--open {\\n  display: block;\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-header__navigation--end {\\n    margin: 0;\\n    padding: 5px 0;\\n    text-align: right;\\n  }\\n}\\n\\n.govuk-header__navigation--no-service-name {\\n  padding-top: 40px;\\n}\\n\\n.govuk-header__navigation-item {\\n  padding: 10px 0;\\n  border-bottom: 1px solid #2e3133;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-header__navigation-item {\\n    display: inline-block;\\n    margin-right: 15px;\\n    padding: 5px 0;\\n    border: 0;\\n  }\\n}\\n.govuk-header__navigation-item a {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  white-space: nowrap;\\n}\\n@media print {\\n  .govuk-header__navigation-item a {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__navigation-item a {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__navigation-item a {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n\\n.govuk-header__navigation-item--active a:link, .govuk-header__navigation-item--active a:hover, .govuk-header__navigation-item--active a:visited {\\n  color: #1d8feb;\\n}\\n.govuk-header__navigation-item--active a:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-header__navigation-item:last-child {\\n  margin-right: 0;\\n}\\n\\n@media print {\\n  .govuk-header {\\n    border-bottom-width: 0;\\n    color: #0b0c0c;\\n    background: transparent;\\n  }\\n\\n  .govuk-header__logotype-crown-fallback-image {\\n    display: none;\\n  }\\n\\n  .govuk-header__link:link, .govuk-header__link:visited {\\n    color: #0b0c0c;\\n  }\\n  .govuk-header__link:after {\\n    display: none;\\n  }\\n}\\n.govuk-inset-text {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  padding: 15px;\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  clear: both;\\n  border-left: 10px solid #b1b4b6;\\n}\\n@media print {\\n  .govuk-inset-text {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-inset-text {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-inset-text {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    margin-top: 30px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-inset-text > :first-child {\\n  margin-top: 0;\\n}\\n.govuk-inset-text > :only-child,\\n.govuk-inset-text > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-notification-banner {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-bottom: 30px;\\n  border: 5px solid #1d70b8;\\n  background-color: #1d70b8;\\n}\\n@media print {\\n  .govuk-notification-banner {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner {\\n    margin-bottom: 50px;\\n  }\\n}\\n.govuk-notification-banner:focus {\\n  outline: 3px solid #ffdd00;\\n}\\n\\n.govuk-notification-banner__header {\\n  padding: 2px 15px 5px;\\n  border-bottom: 1px solid transparent;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__header {\\n    padding: 2px 20px 5px;\\n  }\\n}\\n\\n.govuk-notification-banner__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin: 0;\\n  padding: 0;\\n  color: #ffffff;\\n}\\n@media print {\\n  .govuk-notification-banner__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__title {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner__title {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-notification-banner__content {\\n  color: #0b0c0c;\\n  padding: 15px;\\n  background-color: #ffffff;\\n}\\n@media print {\\n  .govuk-notification-banner__content {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__content {\\n    padding: 20px;\\n  }\\n}\\n.govuk-notification-banner__content > * {\\n  box-sizing: border-box;\\n  max-width: 605px;\\n}\\n.govuk-notification-banner__content > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-notification-banner__heading {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin: 0 0 15px 0;\\n  padding: 0;\\n}\\n@media print {\\n  .govuk-notification-banner__heading {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__heading {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner__heading {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-notification-banner__link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-notification-banner__link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-notification-banner__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-notification-banner__link:link {\\n  color: #1d70b8;\\n}\\n.govuk-notification-banner__link:visited {\\n  color: #1d70b8;\\n}\\n.govuk-notification-banner__link:hover {\\n  color: #003078;\\n}\\n.govuk-notification-banner__link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-notification-banner__link:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-notification-banner--success {\\n  border-color: #00703c;\\n  background-color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:link, .govuk-notification-banner--success .govuk-notification-banner__link:visited {\\n  color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:hover {\\n  color: #004e2a;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:active {\\n  color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-panel {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  margin-bottom: 15px;\\n  padding: 35px;\\n  border: 5px solid transparent;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-panel {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-panel {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-panel {\\n    padding: 25px;\\n  }\\n}\\n\\n.govuk-panel--confirmation {\\n  color: #ffffff;\\n  background: #00703c;\\n}\\n@media print {\\n  .govuk-panel--confirmation {\\n    border-color: currentColor;\\n    color: #000000;\\n    background: none;\\n  }\\n}\\n\\n.govuk-panel__title {\\n  margin-top: 0;\\n  margin-bottom: 30px;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n}\\n@media print {\\n  .govuk-panel__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel__title {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-panel__title {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-panel__title:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-panel__body {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n}\\n@media print {\\n  .govuk-panel__body {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel__body {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-panel__body {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-tag {\\n  display: inline-block;\\n  outline: 2px solid transparent;\\n  outline-offset: -2px;\\n  color: #ffffff;\\n  background-color: #1d70b8;\\n  letter-spacing: 1px;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1;\\n  padding-top: 5px;\\n  padding-right: 8px;\\n  padding-bottom: 4px;\\n  padding-left: 8px;\\n}\\n@media print {\\n  .govuk-tag {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tag {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-tag {\\n    font-size: 14pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-tag--inactive {\\n  background-color: #505a5f;\\n}\\n\\n.govuk-tag--grey {\\n  color: #383f43;\\n  background: #eeefef;\\n}\\n\\n.govuk-tag--purple {\\n  color: #3d2375;\\n  background: #dbd5e9;\\n}\\n\\n.govuk-tag--turquoise {\\n  color: #10403c;\\n  background: #bfe3e0;\\n}\\n\\n.govuk-tag--blue {\\n  color: #144e81;\\n  background: #d2e2f1;\\n}\\n\\n.govuk-tag--yellow {\\n  color: #594d00;\\n  background: #fff7bf;\\n}\\n\\n.govuk-tag--orange {\\n  color: #6e3619;\\n  background: #fcd6c3;\\n}\\n\\n.govuk-tag--red {\\n  color: #942514;\\n  background: #f6d7d2;\\n}\\n\\n.govuk-tag--pink {\\n  color: #80224d;\\n  background: #f7d7e6;\\n}\\n\\n.govuk-tag--green {\\n  color: #005a30;\\n  background: #cce2d8;\\n}\\n\\n.govuk-phase-banner {\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n\\n.govuk-phase-banner__content {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  color: #0b0c0c;\\n  display: table;\\n  margin: 0;\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-phase-banner__content {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-phase-banner__content__tag {\\n  margin-right: 10px;\\n}\\n\\n.govuk-phase-banner__text {\\n  display: table-cell;\\n  vertical-align: baseline;\\n}\\n\\n.govuk-tabs {\\n  margin-top: 5px;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs {\\n    margin-top: 5px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-tabs__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__title {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-tabs__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__list {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-tabs__list-item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-left: 25px;\\n}\\n@media print {\\n  .govuk-tabs__list-item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__list-item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__list-item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-tabs__list-item:before {\\n  color: #0b0c0c;\\n  content: \\\"—\\\";\\n  margin-left: -25px;\\n  padding-right: 5px;\\n}\\n@media print {\\n  .govuk-tabs__list-item:before {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-tabs__tab {\\n  display: inline-block;\\n  margin-bottom: 10px;\\n}\\n.govuk-tabs__tab:link {\\n  color: #1d70b8;\\n}\\n.govuk-tabs__tab:visited {\\n  color: #4c2c92;\\n}\\n.govuk-tabs__tab:hover {\\n  color: #003078;\\n}\\n.govuk-tabs__tab:active {\\n  color: #0b0c0c;\\n}\\n.govuk-tabs__tab:focus {\\n  color: #0b0c0c;\\n}\\n.govuk-tabs__tab:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-tabs__panel {\\n  margin-bottom: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__panel {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__list {\\n    margin-bottom: 0;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n  .js-enabled .govuk-tabs__list:after {\\n    content: \\\"\\\";\\n    display: block;\\n    clear: both;\\n  }\\n  .js-enabled .govuk-tabs__title {\\n    display: none;\\n  }\\n  .js-enabled .govuk-tabs__list-item {\\n    position: relative;\\n    margin-right: 5px;\\n    margin-bottom: 0;\\n    margin-left: 0;\\n    padding: 10px 20px;\\n    float: left;\\n    background-color: #f3f2f1;\\n    text-align: center;\\n  }\\n  .js-enabled .govuk-tabs__list-item:before {\\n    content: none;\\n  }\\n  .js-enabled .govuk-tabs__list-item--selected {\\n    position: relative;\\n    margin-top: -5px;\\n    margin-bottom: -1px;\\n    padding-top: 14px;\\n    padding-right: 19px;\\n    padding-bottom: 16px;\\n    padding-left: 19px;\\n    border: 1px solid #b1b4b6;\\n    border-bottom: 0;\\n    background-color: #ffffff;\\n  }\\n  .js-enabled .govuk-tabs__list-item--selected .govuk-tabs__tab {\\n    text-decoration: none;\\n  }\\n  .js-enabled .govuk-tabs__tab {\\n    margin-bottom: 0;\\n  }\\n  .js-enabled .govuk-tabs__tab:link, .js-enabled .govuk-tabs__tab:visited, .js-enabled .govuk-tabs__tab:hover, .js-enabled .govuk-tabs__tab:active, .js-enabled .govuk-tabs__tab:focus {\\n    color: #0b0c0c;\\n  }\\n}\\n@media print and (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__tab:link, .js-enabled .govuk-tabs__tab:visited, .js-enabled .govuk-tabs__tab:hover, .js-enabled .govuk-tabs__tab:active, .js-enabled .govuk-tabs__tab:focus {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__tab:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel {\\n    margin-bottom: 0;\\n    padding: 30px 20px;\\n    border: 1px solid #b1b4b6;\\n    border-top: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) and (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel {\\n    margin-bottom: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel > :last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel--hidden {\\n    display: none;\\n  }\\n}\\n\\n.govuk-radios__item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  position: relative;\\n  min-height: 40px;\\n  margin-bottom: 10px;\\n  padding-left: 40px;\\n  clear: left;\\n}\\n@media print {\\n  .govuk-radios__item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-radios__item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-radios__item:last-child,\\n.govuk-radios__item:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-radios__input {\\n  cursor: pointer;\\n  position: absolute;\\n  z-index: 1;\\n  top: -2px;\\n  left: -2px;\\n  width: 44px;\\n  height: 44px;\\n  margin: 0;\\n  opacity: 0;\\n}\\n\\n.govuk-radios__label {\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding: 8px 15px 5px;\\n  cursor: pointer;\\n  touch-action: manipulation;\\n}\\n\\n.govuk-radios__label:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border: 2px solid currentColor;\\n  border-radius: 50%;\\n  background: transparent;\\n}\\n\\n.govuk-radios__label:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 10px;\\n  left: 10px;\\n  width: 0;\\n  height: 0;\\n  border: 10px solid currentColor;\\n  border-radius: 50%;\\n  opacity: 0;\\n  background: currentColor;\\n}\\n\\n.govuk-radios__hint {\\n  display: block;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n}\\n\\n.govuk-radios__input:focus + .govuk-radios__label:before {\\n  border-width: 4px;\\n  box-shadow: 0 0 0 4px #ffdd00;\\n}\\n\\n.govuk-radios__input:checked + .govuk-radios__label:after {\\n  opacity: 1;\\n}\\n\\n.govuk-radios__input:disabled,\\n.govuk-radios__input:disabled + .govuk-radios__label {\\n  cursor: default;\\n}\\n\\n.govuk-radios__input:disabled + .govuk-radios__label {\\n  opacity: 0.5;\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .govuk-radios--inline:after {\\n    content: \\\"\\\";\\n    display: block;\\n    clear: both;\\n  }\\n  .govuk-radios--inline .govuk-radios__item {\\n    margin-right: 20px;\\n    float: left;\\n    clear: none;\\n  }\\n}\\n.govuk-radios--inline.govuk-radios--conditional .govuk-radios__item {\\n  margin-right: 0;\\n  float: none;\\n}\\n\\n.govuk-radios__divider {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  width: 40px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__divider {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-radios__conditional {\\n  margin-bottom: 15px;\\n  margin-left: 18px;\\n  padding-left: 33px;\\n  border-left: 4px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__conditional {\\n    margin-bottom: 20px;\\n  }\\n}\\n.js-enabled .govuk-radios__conditional--hidden {\\n  display: none;\\n}\\n.govuk-radios__conditional > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-radios--small .govuk-radios__item {\\n  min-height: 0;\\n  margin-bottom: 0;\\n  padding-left: 34px;\\n  float: left;\\n}\\n.govuk-radios--small .govuk-radios__item:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.govuk-radios--small .govuk-radios__input {\\n  left: -10px;\\n}\\n.govuk-radios--small .govuk-radios__label {\\n  margin-top: -2px;\\n  padding: 13px 15px 13px 1px;\\n  float: left;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios--small .govuk-radios__label {\\n    padding: 11px 15px 10px 1px;\\n  }\\n}\\n.govuk-radios--small .govuk-radios__label:before {\\n  top: 8px;\\n  width: 24px;\\n  height: 24px;\\n}\\n.govuk-radios--small .govuk-radios__label:after {\\n  top: 15px;\\n  left: 7px;\\n  border-width: 5px;\\n}\\n.govuk-radios--small .govuk-radios__hint {\\n  padding: 0;\\n  clear: both;\\n  pointer-events: none;\\n}\\n.govuk-radios--small .govuk-radios__conditional {\\n  margin-left: 10px;\\n  padding-left: 20px;\\n  clear: both;\\n}\\n.govuk-radios--small .govuk-radios__divider {\\n  width: 24px;\\n  margin-bottom: 5px;\\n}\\n.govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n  box-shadow: 0 0 0 10px #b1b4b6;\\n}\\n.govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n  box-shadow: 0 0 0 4px #ffdd00, 0 0 0 10px #b1b4b6;\\n}\\n@media (hover: none), (pointer: coarse) {\\n  .govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n    box-shadow: none;\\n    box-shadow: initial;\\n  }\\n  .govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n    box-shadow: 0 0 0 4px #ffdd00;\\n  }\\n}\\n\\n.govuk-select {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  max-width: 100%;\\n  height: 40px;\\n  height: 2.5rem;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n}\\n@media print {\\n  .govuk-select {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-select {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-select {\\n    font-size: 14pt;\\n    line-height: 1.25;\\n  }\\n}\\n.govuk-select:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-select option:active,\\n.govuk-select option:checked,\\n.govuk-select:focus::-ms-value {\\n  color: #ffffff;\\n  background-color: #1d70b8;\\n}\\n\\n.govuk-select--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-select--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-skip-link {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  white-space: nowrap !important;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  display: block;\\n  padding: 10px 15px;\\n}\\n.govuk-skip-link:active, .govuk-skip-link:focus {\\n  position: static !important;\\n  width: auto !important;\\n  height: auto !important;\\n  margin: inherit !important;\\n  overflow: visible !important;\\n  clip: auto !important;\\n  -webkit-clip-path: none !important;\\n  clip-path: none !important;\\n  white-space: inherit !important;\\n}\\n@media print {\\n  .govuk-skip-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-skip-link:link, .govuk-skip-link:visited, .govuk-skip-link:hover, .govuk-skip-link:active, .govuk-skip-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-skip-link:link, .govuk-skip-link:visited, .govuk-skip-link:hover, .govuk-skip-link:active, .govuk-skip-link:focus {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-skip-link {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-skip-link {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@supports (padding: max(calc(0px))) {\\n  .govuk-skip-link {\\n    padding-right: max(15px, calc(15px + env(safe-area-inset-right)));\\n    padding-left: max(15px, calc(15px + env(safe-area-inset-left)));\\n  }\\n}\\n.govuk-skip-link:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  background-color: #ffdd00;\\n}\\n\\n.govuk-table {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  width: 100%;\\n  margin-bottom: 20px;\\n  border-spacing: 0;\\n  border-collapse: collapse;\\n}\\n@media print {\\n  .govuk-table {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-table {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-table {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-table__header {\\n  font-weight: 700;\\n}\\n\\n.govuk-table__header,\\n.govuk-table__cell {\\n  padding: 10px 20px 10px 0;\\n  border-bottom: 1px solid #b1b4b6;\\n  text-align: left;\\n  vertical-align: top;\\n}\\n\\n.govuk-table__cell--numeric {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-feature-settings: \\\"tnum\\\" 1;\\n  font-weight: 400;\\n}\\n@media print {\\n  .govuk-table__cell--numeric {\\n    font-family: sans-serif;\\n  }\\n}\\n@supports (font-variant-numeric: tabular-nums) {\\n  .govuk-table__cell--numeric {\\n    font-feature-settings: normal, \\\"tnum\\\";\\n    font-variant-numeric: tabular-nums;\\n  }\\n}\\n\\n.govuk-table__header--numeric,\\n.govuk-table__cell--numeric {\\n  text-align: right;\\n}\\n\\n.govuk-table__header:last-child,\\n.govuk-table__cell:last-child {\\n  padding-right: 0;\\n}\\n\\n.govuk-table__caption {\\n  font-weight: 700;\\n  display: table-caption;\\n  text-align: left;\\n}\\n\\n.govuk-table__caption--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-table__caption--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-table__caption--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-table__caption--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-table__caption--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-warning-text {\\n  position: relative;\\n  margin-bottom: 20px;\\n  padding: 10px 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-warning-text__assistive {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  border: 0 !important;\\n  white-space: nowrap !important;\\n}\\n\\n.govuk-warning-text__icon {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  position: absolute;\\n  left: 0;\\n  min-width: 35px;\\n  min-height: 35px;\\n  margin-top: -7px;\\n  border: 3px solid #0b0c0c;\\n  border-radius: 50%;\\n  color: #ffffff;\\n  background: #0b0c0c;\\n  font-size: 30px;\\n  line-height: 29px;\\n  text-align: center;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n@media print {\\n  .govuk-warning-text__icon {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text__icon {\\n    margin-top: -5px;\\n  }\\n}\\n\\n.govuk-warning-text__text {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  display: block;\\n  padding-left: 45px;\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text__text {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-clearfix:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-visually-hidden {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  border: 0 !important;\\n  white-space: nowrap !important;\\n}\\n\\n.govuk-visually-hidden-focusable {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  white-space: nowrap !important;\\n}\\n.govuk-visually-hidden-focusable:active, .govuk-visually-hidden-focusable:focus {\\n  position: static !important;\\n  width: auto !important;\\n  height: auto !important;\\n  margin: inherit !important;\\n  overflow: visible !important;\\n  clip: auto !important;\\n  -webkit-clip-path: none !important;\\n  clip-path: none !important;\\n  white-space: inherit !important;\\n}\\n\\n.govuk-\\\\!-display-inline {\\n  display: inline !important;\\n}\\n\\n.govuk-\\\\!-display-inline-block {\\n  display: inline-block !important;\\n}\\n\\n.govuk-\\\\!-display-block {\\n  display: block !important;\\n}\\n\\n.govuk-\\\\!-display-none {\\n  display: none !important;\\n}\\n\\n@media print {\\n  .govuk-\\\\!-display-none-print {\\n    display: none !important;\\n  }\\n}\\n.govuk-\\\\!-margin-0 {\\n  margin: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-0 {\\n    margin: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-0 {\\n  margin-top: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-0 {\\n    margin-top: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-0 {\\n  margin-right: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-0 {\\n    margin-right: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-0 {\\n  margin-bottom: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-0 {\\n    margin-bottom: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-0 {\\n  margin-left: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-0 {\\n    margin-left: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-1 {\\n  margin: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-1 {\\n    margin: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-1 {\\n  margin-top: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-1 {\\n    margin-top: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-1 {\\n  margin-right: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-1 {\\n    margin-right: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-1 {\\n  margin-bottom: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-1 {\\n    margin-bottom: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-1 {\\n  margin-left: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-1 {\\n    margin-left: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-2 {\\n  margin: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-2 {\\n    margin: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-2 {\\n  margin-top: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-2 {\\n    margin-top: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-2 {\\n  margin-right: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-2 {\\n    margin-right: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-2 {\\n  margin-bottom: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-2 {\\n    margin-bottom: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-2 {\\n  margin-left: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-2 {\\n    margin-left: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-3 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-3 {\\n    margin: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-3 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-3 {\\n    margin-top: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-3 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-3 {\\n    margin-right: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-3 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-3 {\\n    margin-bottom: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-3 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-3 {\\n    margin-left: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-4 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-4 {\\n    margin: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-4 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-4 {\\n    margin-top: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-4 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-4 {\\n    margin-right: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-4 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-4 {\\n    margin-bottom: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-4 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-4 {\\n    margin-left: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-5 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-5 {\\n    margin: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-5 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-5 {\\n    margin-top: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-5 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-5 {\\n    margin-right: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-5 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-5 {\\n    margin-bottom: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-5 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-5 {\\n    margin-left: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-6 {\\n  margin: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-6 {\\n    margin: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-6 {\\n  margin-top: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-6 {\\n    margin-top: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-6 {\\n  margin-right: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-6 {\\n    margin-right: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-6 {\\n  margin-bottom: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-6 {\\n    margin-bottom: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-6 {\\n  margin-left: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-6 {\\n    margin-left: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-7 {\\n  margin: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-7 {\\n    margin: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-7 {\\n  margin-top: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-7 {\\n    margin-top: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-7 {\\n  margin-right: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-7 {\\n    margin-right: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-7 {\\n  margin-bottom: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-7 {\\n    margin-bottom: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-7 {\\n  margin-left: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-7 {\\n    margin-left: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-8 {\\n  margin: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-8 {\\n    margin: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-8 {\\n  margin-top: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-8 {\\n    margin-top: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-8 {\\n  margin-right: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-8 {\\n    margin-right: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-8 {\\n  margin-bottom: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-8 {\\n    margin-bottom: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-8 {\\n  margin-left: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-8 {\\n    margin-left: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-9 {\\n  margin: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-9 {\\n    margin: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-9 {\\n  margin-top: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-9 {\\n    margin-top: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-9 {\\n  margin-right: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-9 {\\n    margin-right: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-9 {\\n  margin-bottom: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-9 {\\n    margin-bottom: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-9 {\\n  margin-left: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-9 {\\n    margin-left: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-0 {\\n  padding: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-0 {\\n    padding: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-0 {\\n  padding-top: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-0 {\\n    padding-top: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-0 {\\n  padding-right: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-0 {\\n    padding-right: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-0 {\\n  padding-bottom: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-0 {\\n    padding-bottom: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-0 {\\n  padding-left: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-0 {\\n    padding-left: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-1 {\\n  padding: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-1 {\\n    padding: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-1 {\\n  padding-top: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-1 {\\n    padding-top: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-1 {\\n  padding-right: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-1 {\\n    padding-right: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-1 {\\n  padding-bottom: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-1 {\\n    padding-bottom: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-1 {\\n  padding-left: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-1 {\\n    padding-left: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-2 {\\n  padding: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-2 {\\n    padding: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-2 {\\n  padding-top: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-2 {\\n    padding-top: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-2 {\\n  padding-right: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-2 {\\n    padding-right: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-2 {\\n  padding-bottom: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-2 {\\n    padding-bottom: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-2 {\\n  padding-left: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-2 {\\n    padding-left: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-3 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-3 {\\n    padding: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-3 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-3 {\\n    padding-top: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-3 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-3 {\\n    padding-right: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-3 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-3 {\\n    padding-bottom: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-3 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-3 {\\n    padding-left: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-4 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-4 {\\n    padding: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-4 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-4 {\\n    padding-top: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-4 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-4 {\\n    padding-right: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-4 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-4 {\\n    padding-bottom: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-4 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-4 {\\n    padding-left: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-5 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-5 {\\n    padding: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-5 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-5 {\\n    padding-top: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-5 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-5 {\\n    padding-right: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-5 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-5 {\\n    padding-bottom: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-5 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-5 {\\n    padding-left: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-6 {\\n  padding: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-6 {\\n    padding: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-6 {\\n  padding-top: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-6 {\\n    padding-top: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-6 {\\n  padding-right: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-6 {\\n    padding-right: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-6 {\\n  padding-bottom: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-6 {\\n    padding-bottom: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-6 {\\n  padding-left: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-6 {\\n    padding-left: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-7 {\\n  padding: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-7 {\\n    padding: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-7 {\\n  padding-top: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-7 {\\n    padding-top: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-7 {\\n  padding-right: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-7 {\\n    padding-right: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-7 {\\n  padding-bottom: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-7 {\\n    padding-bottom: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-7 {\\n  padding-left: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-7 {\\n    padding-left: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-8 {\\n  padding: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-8 {\\n    padding: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-8 {\\n  padding-top: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-8 {\\n    padding-top: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-8 {\\n  padding-right: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-8 {\\n    padding-right: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-8 {\\n  padding-bottom: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-8 {\\n    padding-bottom: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-8 {\\n  padding-left: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-8 {\\n    padding-left: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-9 {\\n  padding: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-9 {\\n    padding: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-9 {\\n  padding-top: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-9 {\\n    padding-top: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-9 {\\n  padding-right: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-9 {\\n    padding-right: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-9 {\\n  padding-bottom: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-9 {\\n    padding-bottom: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-9 {\\n  padding-left: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-9 {\\n    padding-left: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-80 {\\n  font-size: 53px !important;\\n  font-size: 3.3125rem !important;\\n  line-height: 1.0377358491 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-80 {\\n    font-size: 80px !important;\\n    font-size: 5rem !important;\\n    line-height: 1 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-80 {\\n    font-size: 53pt !important;\\n    line-height: 1.1 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-48 {\\n  font-size: 32px !important;\\n  font-size: 2rem !important;\\n  line-height: 1.09375 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-48 {\\n    font-size: 48px !important;\\n    font-size: 3rem !important;\\n    line-height: 1.0416666667 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-48 {\\n    font-size: 32pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-36 {\\n  font-size: 24px !important;\\n  font-size: 1.5rem !important;\\n  line-height: 1.0416666667 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-36 {\\n    font-size: 36px !important;\\n    font-size: 2.25rem !important;\\n    line-height: 1.1111111111 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-36 {\\n    font-size: 24pt !important;\\n    line-height: 1.05 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-27 {\\n  font-size: 18px !important;\\n  font-size: 1.125rem !important;\\n  line-height: 1.1111111111 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-27 {\\n    font-size: 27px !important;\\n    font-size: 1.6875rem !important;\\n    line-height: 1.1111111111 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-27 {\\n    font-size: 18pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-24 {\\n  font-size: 18px !important;\\n  font-size: 1.125rem !important;\\n  line-height: 1.1111111111 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-24 {\\n    font-size: 24px !important;\\n    font-size: 1.5rem !important;\\n    line-height: 1.25 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-24 {\\n    font-size: 18pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-19 {\\n  font-size: 16px !important;\\n  font-size: 1rem !important;\\n  line-height: 1.25 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-19 {\\n    font-size: 19px !important;\\n    font-size: 1.1875rem !important;\\n    line-height: 1.3157894737 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-19 {\\n    font-size: 14pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-16 {\\n  font-size: 14px !important;\\n  font-size: 0.875rem !important;\\n  line-height: 1.1428571429 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-16 {\\n    font-size: 16px !important;\\n    font-size: 1rem !important;\\n    line-height: 1.25 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-16 {\\n    font-size: 14pt !important;\\n    line-height: 1.2 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-14 {\\n  font-size: 12px !important;\\n  font-size: 0.75rem !important;\\n  line-height: 1.25 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-14 {\\n    font-size: 14px !important;\\n    font-size: 0.875rem !important;\\n    line-height: 1.4285714286 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-14 {\\n    font-size: 12pt !important;\\n    line-height: 1.2 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-weight-regular {\\n  font-weight: 400 !important;\\n}\\n\\n.govuk-\\\\!-font-weight-bold {\\n  font-weight: 700 !important;\\n}\\n\\n.govuk-\\\\!-width-full {\\n  width: 100% !important;\\n}\\n\\n.govuk-\\\\!-width-three-quarters {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-three-quarters {\\n    width: 75% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-two-thirds {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-two-thirds {\\n    width: 66.66% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-half {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-half {\\n    width: 50% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-third {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-third {\\n    width: 33.33% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-quarter {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-quarter {\\n    width: 25% !important;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://all.scss\",\"webpack://core/_links.scss\",\"webpack://helpers/_typography.scss\",\"webpack://settings/_typography-font.scss\",\"webpack://helpers/_font-faces.scss\",\"webpack://vendor/_sass-mq.scss\",\"webpack://helpers/_links.scss\",\"webpack://helpers/_focused.scss\",\"webpack://settings/_colours-applied.scss\",\"webpack://core/_lists.scss\",\"webpack://helpers/_spacing.scss\",\"webpack://core/_template.scss\",\"webpack://core/_typography.scss\",\"webpack://core/_section-break.scss\",\"webpack://objects/_button-group.scss\",\"webpack://objects/_form-group.scss\",\"webpack://helpers/_clearfix.scss\",\"webpack://objects/_grid.scss\",\"webpack://helpers/_grid.scss\",\"webpack://objects/_main-wrapper.scss\",\"webpack://objects/_width-container.scss\",\"webpack://settings/_measurements.scss\",\"webpack://components/accordion/_index.scss\",\"webpack://components/back-link/_index.scss\",\"webpack://components/breadcrumbs/_index.scss\",\"webpack://components/button/_index.scss\",\"webpack://components/error-message/_index.scss\",\"webpack://components/fieldset/_index.scss\",\"webpack://components/hint/_index.scss\",\"webpack://components/label/_index.scss\",\"webpack://components/checkboxes/_index.scss\",\"webpack://components/textarea/_index.scss\",\"webpack://components/character-count/_index.scss\",\"webpack://components/cookie-banner/_index.scss\",\"webpack://components/summary-list/_index.scss\",\"webpack://components/input/_index.scss\",\"webpack://components/date-input/_index.scss\",\"webpack://components/details/_index.scss\",\"webpack://helpers/_shape-arrow.scss\",\"webpack://components/error-summary/_index.scss\",\"webpack://components/file-upload/_index.scss\",\"webpack://components/footer/_index.scss\",\"webpack://helpers/_device-pixels.scss\",\"webpack://components/header/_index.scss\",\"webpack://components/inset-text/_index.scss\",\"webpack://components/notification-banner/_index.scss\",\"webpack://components/panel/_index.scss\",\"webpack://components/tag/_index.scss\",\"webpack://components/phase-banner/_index.scss\",\"webpack://components/tabs/_index.scss\",\"webpack://components/radios/_index.scss\",\"webpack://components/select/_index.scss\",\"webpack://components/skip-link/_index.scss\",\"webpack://helpers/_visually-hidden.scss\",\"webpack://components/table/_index.scss\",\"webpack://components/warning-text/_index.scss\",\"webpack://utilities/_visually-hidden.scss\",\"webpack://overrides/_display.scss\",\"webpack://overrides/_spacing.scss\",\"webpack://overrides/_typography.scss\",\"webpack://overrides/_width.scss\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;ACQd;ECOA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;AFZF;AIYQ,mLAAA;AAAqL,iDAAA;AACrL;EACE,4BAAA;EACA,kBAAA;EACA,mBAAA;EACA,iIACE;EAEF,sBAAA;AJXV;AIcQ;EACE,4BAAA;EACA,kBAAA;EACA,iBAAA;EACA,+HACE;EAEF,sBAAA;AJdV;AK+MQ;EJ5NN;ICsBE,uBC8BsB;EHnCxB;AACF;AMbE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APOF;AMCE;EACE,cEkGgB;ARjGpB;AMEE;EACE,cEqGwB;ARrG5B;AMGE;EACE,cEwGsB;ARzG1B;AMIE;EACE,cE2GuB;AR7G3B;AMOE;EACE,cEwBsB;AR7B1B;AKoLQ;ECkEF;IACE,4BAAA;IACA,cAAA;IAKA,qBAAA;ENvPN;AACF;;AM4HE;EAIE,cE9H0B;ARE9B;AMiIE;EACE,cEhHsB;ARf1B;;AM8JE;EJnLA,cMnBkB;AR4CpB;AKkKQ;ECRN;IJhLE,cMIsB;ERsBxB;AACF;;AM4LE;EACE,cE/HgB;AR1DpB;AM4LE;EACE,cEnIgB;ARvDpB;AM6LE;EACE,cEzHsB;ARlE1B;AM8LE;EACE,cEtHuB;ARtE3B;AMiME;EACE,cEzMsB;ARU1B;;AS/EE;EPOA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;ECXhB,aAAA;EC6EI,mBAAA;ED3EJ,eAAA;EACA,qBAAA;ATwFJ;AK8HQ;EI5NN;IPsBE,uBC8BsB;EH8CxB;AACF;AKyHQ;EI5NN;IPqJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF7BhB;AACF;AKkHQ;EI5NN;IPgJM,eAZQ;IAaR,iBAXU;EFvBhB;AACF;AK4GQ;EI5NN;IPoCE,cMIsB;ER4ExB;AACF;AKuGQ;EI5NN;ICuFQ,mBAAA;EVkCR;AACF;ASjHI;EACE,gBAAA;ATmHN;;AS/GE;EAIE,kBAAA;AT+GJ;;ASxGE;EACE,kBAAA;EACA,qBAAA;AT2GJ;;ASxGE;EACE,kBAAA;EACA,wBAAA;AT2GJ;;ASxGE;;EAEE,gBAAA;AT2GJ;AK4EQ;EIzLN;;IAKI,kBAAA;ET6GJ;AACF;;AS1GE;EACE,mBAAA;AT6GJ;AKkEQ;EIhLN;IAII,mBAAA;ET8GJ;AACF;;AW9JE;EAGE,yBHoB6B;EGf1B,2BAAA;EAEK,sBAAA;AX4JZ;AKqDQ;EM3NN;IAeI,kBAAA;EX2JJ;AACF;;AWvJE;EAGE,SAAA;EAEA,yBHK2B;ARkJ/B;;AY/KE;EV+BA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,oBAPY;EUhId,cAAA;EAEA,aAAA;EFwEI,mBAAA;AV+GR;AK6BQ;EO1NN;IVkCE,cMIsB;ER2JxB;AACF;AKwBQ;EO1NN;IVoBE,uBC8BsB;EHoJxB;AACF;AKmBQ;EO1NN;IVmJM,eAjBQ;IAmBN,eAlBU;IAoBZ,yBAnBU;EFyEhB;AACF;AKYQ;EO1NN;IV8IM,eAZQ;IAaR,iBAXU;EF+EhB;AACF;AKMQ;EO1NN;IFqFQ,mBAAA;EVmIR;AACF;;AY3ME;EViBA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,iBANY;EAQd,yBAPY;EUlHd,cAAA;EAEA,aAAA;EF0DI,mBAAA;AVyJR;AKbQ;EO5MN;IVoBE,cMIsB;ERqMxB;AACF;AKlBQ;EO5MN;IVME,uBC8BsB;EH8LxB;AACF;AKvBQ;EO5MN;IVqIM,eAjBQ;IAmBN,kBAlBU;IAoBZ,yBAnBU;EFmHhB;AACF;AK9BQ;EO5MN;IVgIM,eAZQ;IAaR,iBAXU;EFyHhB;AACF;AKpCQ;EO5MN;IFuEQ,mBAAA;EV6KR;AACF;;AYvOE;EVGA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EUpGd,cAAA;EAEA,aAAA;EF4CI,mBAAA;AVmMR;AKvDQ;EO9LN;IVME,cMIsB;ER+OxB;AACF;AK5DQ;EO9LN;IVRE,uBC8BsB;EHwOxB;AACF;AKjEQ;EO9LN;IVuHM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EF6JhB;AACF;AKxEQ;EO9LN;IVkHM,eAZQ;IAaR,iBAXU;EFmKhB;AACF;AK9EQ;EO9LN;IFyDQ,mBAAA;EVuNR;AACF;;AYnQE;EVXA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;EUtFd,cAAA;EAEA,aAAA;EF8BI,mBAAA;AV6OR;AKjGQ;EOhLN;IVRE,cMIsB;ERyRxB;AACF;AKtGQ;EOhLN;IVtBE,uBC8BsB;EHkRxB;AACF;AK3GQ;EOhLN;IVyGM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFuMhB;AACF;AKlHQ;EOhLN;IVoGM,eAZQ;IAaR,iBAXU;EF6MhB;AACF;AKxHQ;EOhLN;IF2CQ,mBAAA;EViQR;AACF;;AY7RE;EVrDA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EUvEd,cAAA;EAEA,kBAAA;EAEA,cJlB0B;ARqT9B;AK1IQ;EOhKN;IVtCE,uBC8BsB;EHsTxB;AACF;AK/IQ;EOhKN;IVyFM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF2OhB;AACF;AKtJQ;EOhKN;IVoFM,eAZQ;IAaR,iBAXU;EFiPhB;AACF;;AYlTE;EV/DA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EU7Dd,cAAA;EAEA,kBAAA;EACA,cJ3B0B;ARoV9B;AKzKQ;EOtJN;IVhDE,uBC8BsB;EHqVxB;AACF;AK9KQ;EOtJN;IV+EM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EF0QhB;AACF;AKrLQ;EOtJN;IV0EM,eAZQ;IAaR,iBAXU;EFgRhB;AACF;AK3LQ;EOtJN;IASI,gBAAA;EZ4UJ;AACF;;AYzUE;EV5EA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EUhDd,cAAA;EAEA,cJvC0B;ARuX9B;AK5MQ;EOzIN;IV7DE,uBC8BsB;EHwXxB;AACF;AKjNQ;EOzIN;IVkEM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF6ShB;AACF;AKxNQ;EOzIN;IV6DM,eAZQ;IAaR,iBAXU;EFmThB;AACF;;AY7VE;EV5DA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EUrCd,aAAA;EFjBI,mBAAA;AVuXR;AK3OQ;EO/HN;IVzDE,cMIsB;ERmaxB;AACF;AKhPQ;EO/HN;IVvEE,uBC8BsB;EH4ZxB;AACF;AKrPQ;EO/HN;IVwDM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFiVhB;AACF;AK5PQ;EO/HN;IVmDM,eAZQ;IAaR,iBAXU;EFuVhB;AACF;AKlQQ;EO/HN;IFNQ,mBAAA;EV2YR;AACF;;AY1XE;EVxEA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EUzBd,aAAA;EF7BI,mBAAA;AVgaR;AKpRQ;EOnHN;IVrEE,cMIsB;ER4cxB;AACF;AKzRQ;EOnHN;IVnFE,uBC8BsB;EHqcxB;AACF;AK9RQ;EOnHN;IV4CM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF0XhB;AACF;AKrSQ;EOnHN;IVuCM,eAZQ;IAaR,iBAXU;EFgYhB;AACF;AK3SQ;EOnHN;IFlBQ,mBAAA;EVobR;AACF;;AYvZE;EVpFA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EUbd,aAAA;EFzCI,mBAAA;AVycR;AK7TQ;EOvGN;IVjFE,cMIsB;ERqfxB;AACF;AKlUQ;EOvGN;IV/FE,uBC8BsB;EH8exB;AACF;AKvUQ;EOvGN;IVgCM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFmahB;AACF;AK9UQ;EOvGN;IV2BM,eAZQ;IAaR,gBAXU;EFyahB;AACF;AKpVQ;EOvGN;IF9BQ,mBAAA;EV6dR;AACF;;AYpbE;EVhGA,cMnBkB;ENPlB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,kBANY;EAQd,iBAPY;EUDd,aAAA;EFrDI,mBAAA;AVkfR;AKtWQ;EO3FN;IV7FE,cMIsB;ER8hBxB;AACF;AK3WQ;EO3FN;IV3GE,uBC8BsB;EHuhBxB;AACF;AKhXQ;EO3FN;IVoBM,eAjBQ;IAmBN,mBAlBU;IAoBZ,yBAnBU;EF4chB;AACF;AKvXQ;EO3FN;IVeM,eAZQ;IAaR,gBAXU;EFkdhB;AACF;AK7XQ;EO3FN;IF1CQ,mBAAA;EVsgBR;AACF;;AYjcE;EACE,gBAAA;AZocJ;AKtYQ;EO/DN;IAII,iBAAA;EZqcJ;AACF;;AYlcE;;;EFrFM,iBAAA;AV6hBR;AKjZQ;EOvDN;;;IF9EQ,iBAAA;EV4hBR;AACF;;AYzcE;;;;;;;EAME,gBAAA;AZ6cJ;AKlaQ;EOjDN;;;;;;;IASI,iBAAA;EZodJ;AACF;;AazoBE;EACE,SAAA;EACA,SAAA;Ab4oBJ;;Aa7nBE;EH+DM,gBAAA;EAAA,mBAAA;AVmkBR;AKvbQ;EQ3MN;IHsEQ,gBAAA;EVgkBR;AACF;AK5bQ;EQ3MN;IHsEQ,mBAAA;EVqkBR;AACF;;AanoBE;EHsDM,gBAAA;EAAA,mBAAA;AVklBR;AKtcQ;EQlMN;IH6DQ,gBAAA;EV+kBR;AACF;AK3cQ;EQlMN;IH6DQ,mBAAA;EVolBR;AACF;;AazoBE;EH6CM,gBAAA;EAAA,mBAAA;AVimBR;AKrdQ;EQzLN;IHoDQ,gBAAA;EV8lBR;AACF;AK1dQ;EQzLN;IHoDQ,mBAAA;EVmmBR;AACF;;Aa7oBE;EACE,gCAAA;AbgpBJ;;Ac5rBE;EJ6EM,kBAAA;EIvDJ,aAAA;EAIQ,sBAAA;EAGA,mBAAA;Ad6qBZ;AKjfQ;ESzNN;IJoFQ,mBAAA;EV0nBR;AACF;Ac3qBI;EZhCF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,mBAPY;EY7FZ,qBAAA;EAGA,eAAA;EACA,eAlCa;EAmCb,mBAAA;EACA,kBAAA;AdirBN;AKpgBQ;ESrLJ;IZjBA,uBC8BsB;EHgrBxB;AACF;AKzgBQ;ESrLJ;IZ8GI,eAjBQ;IAmBN,oBAlBU;IAoBZ,cAnBU;EFqmBhB;AACF;AKhhBQ;ESrLJ;IZyGI,eAZQ;IAaR,iBAXU;EF2mBhB;AACF;Ac9rBI;EACE,mBAAA;AdgsBN;AKzhBQ;ESzNN;IAyDI,mBAAA;IAQQ,mBAAA;IAEJ,eAAA;IAGI,qBAAA;EdyrBZ;EcvrBI;;IAEE,kBAzEa;EdkwBnB;EctrBI;IACE,gBAAA;EdwrBN;AACF;;Ae/wBE;ELqFM,mBAAA;AV8rBR;AgB7wBE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhB+wBJ;AKvjBQ;EUjON;IL4FQ,mBAAA;EVgsBR;AACF;AezxBI;EACE,gBAAA;Af2xBN;;AevxBE;EACE,kBAAA;EACA,8BAAA;Af0xBJ;AexxBI;EAEE,UAAA;EACA,SAAA;AfyxBN;;AiBzyBE;EAEE,mBAAA;EACA,kBAAA;AjB2yBJ;AgBxyBE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhB0yBJ;;AiB5yBI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlBqwBF;AKxlBQ;EY1NJ;IC+CA,UAAA;IACA,WAR2C;ElB+wB7C;AACF;;AiBxzBI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlBixBF;AKpmBQ;EY1NJ;IC+CA,eAAA;IACA,WAR2C;ElB2xB7C;AACF;;AiBp0BI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlB6xBF;AKhnBQ;EY1NJ;IC+CA,UAAA;IACA,WAR2C;ElBuyB7C;AACF;;AiBh1BI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlByyBF;AK5nBQ;EY1NJ;IC+CA,eAAA;IACA,WAR2C;ElBmzB7C;AACF;;AiB51BI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlBqzBF;AKxoBQ;EY1NJ;IC+CA,UAAA;IACA,WAR2C;ElB+zB7C;AACF;;AiBx2BI;ECyCF,sBAAA;EAEE,WAAA;EAEF,eAAA;AlBi0BF;AKppBQ;EY1NJ;IC+CA,WAAA;IACA,WAR2C;ElB20B7C;AACF;;AiB32BI;ECgCF,sBAAA;EAIA,eAAA;AlB40BF;AK/pBQ;EYjNJ;ICsCA,UAAA;IACA,WAR2C;ElBs1B7C;AACF;;AiBt3BI;ECgCF,sBAAA;EAIA,eAAA;AlBu1BF;AK1qBQ;EYjNJ;ICsCA,eAAA;IACA,WAR2C;ElBi2B7C;AACF;;AiBj4BI;ECgCF,sBAAA;EAIA,eAAA;AlBk2BF;AKrrBQ;EYjNJ;ICsCA,UAAA;IACA,WAR2C;ElB42B7C;AACF;;AiB54BI;ECgCF,sBAAA;EAIA,eAAA;AlB62BF;AKhsBQ;EYjNJ;ICsCA,eAAA;IACA,WAR2C;ElBu3B7C;AACF;;AiBv5BI;ECgCF,sBAAA;EAIA,eAAA;AlBw3BF;AK3sBQ;EYjNJ;ICsCA,UAAA;IACA,WAR2C;ElBk4B7C;AACF;;AiBl6BI;ECgCF,sBAAA;EAIA,eAAA;AlBm4BF;AKttBQ;EYjNJ;ICsCA,WAAA;IACA,WAR2C;ElB64B7C;AACF;;AmB54BE;EAvBA,cAAA;EACA,iBAAA;EACA,oBAAA;AnBu6BF;AKluBQ;EchLN;IAfE,iBAAA;IACA,oBAAA;EnBq6BF;AACF;;AmB74BE;;ETyBM,iBAAA;AVy3BR;AK7uBQ;EcrKN;;ITgCQ,iBAAA;EVu3BR;AACF;;AoBv4BE;EA1DA,gBCTiB;EDYjB,kBCgBkB;EDflB,iBCekB;ArBo7BpB;AoBh8BE;EAmDA;IA7CE,gEAAA;IACA,8DAAA;EpB87BF;AACF;AK/vBQ;EepJN;IAvCE,kBCPW;IDQX,iBCRW;ErBs8Bb;EoB37BE;IAmCF;MA7BI,gEAAA;MACA,8DAAA;IpBy7BF;EACF;AACF;AK3wBQ;EepJN;IArBE,kBAAA;IACA,iBAAA;EpBw7BF;EoBp7BE;IAgBF;MAfI,kBAAA;MACA,iBAAA;IpBu7BF;EACF;AACF;;AsBr/BE;EZkFM,mBAAA;AVu6BR;AK3xBQ;EiB9NN;IZyFQ,mBAAA;EVo6BR;AACF;;AsBz/BE;EACE,iBAAA;AtB4/BJ;;AsBz/BE;EACE,iBAAA;EACA,oBAAA;AtB4/BJ;;AsBz/BE;EpBLA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EoBrHd,aAAA;EACA,gBAAA;AtB+/BJ;AKrzBQ;EiBhNN;IpBUE,uBC8BsB;EHi+BxB;AACF;AK1zBQ;EiBhNN;IpByIM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFs5BhB;AACF;AKj0BQ;EiBhNN;IpBoIM,eAZQ;IAaR,iBAXU;EF45BhB;AACF;;AsB7gCE;EpBfA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EoB9Gd,qBAAA;EACA,gBAAA;EACA,iBAAA;AtBshCJ;AKp1BQ;EiBtMN;IpBAE,uBC8BsB;EHggCxB;AACF;AKz1BQ;EiBtMN;IpB+HM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFq7BhB;AACF;AKh2BQ;EiBtMN;IpB0HM,eAZQ;IAaR,iBAXU;EF27BhB;AACF;;AsBriCE;EACE,gBAAA;EACA,gBAAA;AtBwiCJ;;AsBpiCE;EACE,gBAAA;AtBuiCJ;;AsBliCI;EAEE,gCAAA;AtBoiCN;AsBhiCI;EACE,cAAA;AtBkiCN;AsB9hCI;EACE,aAAA;EZ2BE,iBAAA;EAAA,oBAAA;AVugCR;AK33BQ;EiBxKJ;IZmCM,iBAAA;EVogCR;AACF;AKh4BQ;EiBxKJ;IZmCM,oBAAA;EVygCR;AACF;AsBtiCI;EACE,cAAA;AtBwiCN;AsBpiCI;EpBzDF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EoBpEZ,kBAAA;EACA,UAAA;EACA,SAAA;EACA,UAAA;EACA,eAAA;EACA,cdsDc;EcrDd,gBAAA;EACA,eAAA;EACA,wBAAA;EpBnEJ,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;AFgnCF;AK75BQ;EiB5JJ;IpB1CA,uBC8BsB;EHykCxB;AACF;AKl6BQ;EiB5JJ;IpBqFI,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EF8/BhB;AACF;AKz6BQ;EiB5JJ;IpBgFI,eAZQ;IAaR,gBAXU;EFogChB;AACF;AK/6BQ;EiB5JJ;IpB1CA,uBC8BsB;EH2lCxB;AACF;AM3oCE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APqoCF;AM7nCE;EACE,cEkGgB;AR6hCpB;AM5nCE;EACE,cEqGwB;ARyhC5B;AM3nCE;EACE,cEwGsB;ARqhC1B;AM1nCE;EACE,cE2GuB;ARihC3B;AMvnCE;EACE,cEwBsB;ARimC1B;AsBtlCM;EACE,UAAA;EACA,SAAA;AtBwlCR;AsBnlCI;EACE,kBAAA;EAEA,mBAAA;EACA,6BAAA;EACA,cdiCc;EchCd,eAAA;AtBolCN;AsB/kCI;EACE;IACE,yBdyBY;IcxBZ,mCAAA;EtBilCN;AACF;AsB7kCI;EpBnGF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EoBmGI,aAAA;EACA,gBAAA;EACA,cAAA;EACA,UAAA;EACA,eAAA;EACA,cAAA;EACA,gBAAA;EACA,gBAAA;EACA,eAAA;EACA,wBAAA;AtBilCN;AK1+BQ;EiBlHJ;IpBpFA,uBC8BsB;EHspCxB;AACF;AsBplCM;Ef5GF,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APgsCF;AsBtlCM;EACE,UAAA;EACA,SAAA;AtBwlCR;AsBnlCI;EACE,WAAA;EACA,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;AtBqlCN;AsBllCI;EACE,0BAAA;AtBolCN;AsB/kCI;EACE;IACE,qBAAA;EtBilCN;AACF;AsB9kCI;EACE,iBAAA;AtBglCN;AsB3kCI;EACE,kBAAA;EACA,QAAA;EACA,WAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;AtB6kCN;AsB1kCI;;EAEE,WAAA;EACA,sBAAA;EACA,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,UAAA;EACA,WAAA;EACA,YAAA;EACA,6BAAA;EACA,yBAAA;AtB4kCN;AsBzkCI;EACE,WAAA;AtB2kCN;AsBxkCI;EACE,YAAA;AtB0kCN;AsBtkCI;EACE,YAAA;EACA,aAAA;AtBwkCN;;AuBvwCE;ErBsII,eALU;EAOR,mBANY;EAQd,yBAPY;EA/HhB,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EqBDE,qBAAA;EACA,kBAAA;EAEA,gBAAA;EACA,mBAAA;EAGA,kBAAA;AvBywCJ;AK5jCQ;EkBzNN;IrBkJM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFwpChB;AACF;AKnkCQ;EkBzNN;IrB6IM,eAZQ;IAaR,gBAXU;EF8pChB;AACF;AKzkCQ;EkBzNN;IrBmBE,uBC8BsB;EHqvCxB;AACF;AMryCE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;AP+xCF;AM7lCE;EJnLA,cMnBkB;ARsyCpB;AKxlCQ;ECRN;IJhLE,cMIsB;ERgxCxB;AACF;;AuBtyCE;EACE,0BAAA;AvByyCJ;AuBryCI;EACE,qBAAA;AvBuyCN;AuBryCM;EACE,qBfdY;ARqzCpB;;AuBjyCE;EACE,WAAA;EACA,cAAA;EAGA,kBAAA;EAQE,MAAA;EACA,SAAA;EAGF,SAAA;EAEA,UA1Da;EA2Db,WA3Da;EA6Db,cAAA;EAMQ,yBAAA;EAER,aAAA;EACA,yBAAA;EACA,qBfjB0B;ARoyC9B;;AuBnwCE;EACE,WAAA;EACA,kBAAA;EACA,UAAA;EACA,QAAA;EACA,aAAA;EACA,OAAA;AvBswCJ;;AwBr1CE;EtBFA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EArGhB,cMnBkB;EgBDhB,gBAAA;EACA,mBAAA;AxB61CJ;AK/oCQ;EmBnNN;ItBaE,uBC8BsB;EH2zCxB;AACF;AKppCQ;EmBnNN;ItB4IM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFgvChB;AACF;AK3pCQ;EmBnNN;ItBuIM,eAZQ;IAaR,gBAXU;EFsvChB;AACF;AKjqCQ;EmBnNN;ItB2BE,cMIsB;ERy1CxB;AACF;;AwBj3CE;EAGE,SAAA;EACA,UAAA;EACA,qBAAA;AxBk3CJ;AgBv4CE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhBy4CJ;;AwBp3CE;EAEE,qBAAA;EACA,kBAAA;EAEA,kBAAA;EAIA,iBAAA;EACA,sBAAA;EAEA,WAAA;AxBi3CJ;AwB92CI;EACE,WAAA;EACA,cAAA;EAEA,kBAAA;EAQE,MAAA;EACA,SAAA;EAKF,aAAA;EAEA,UAjEW;EAkEX,WAlEW;EAoEX,cAAA;EAMQ,wBAAA;EAER,aAAA;EACA,yBAAA;EACA,qBhBxBwB;ARs3C9B;AwB90CI;EACE,cAAA;EACA,eAAA;AxBg1CN;AwB90CM;EACE,aAAA;EACA,aAAA;AxBg1CR;;AwB30CE;EtB7FA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;AF46CF;AKztCQ;EmBxHN;ItB9EE,uBC8BsB;EHq4CxB;AACF;AMr7CE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;AP+6CF;AM7uCE;EJnLA,cMnBkB;ARs7CpB;AKxuCQ;ECRN;IJhLE,cMIsB;ERg6CxB;AACF;;AK7uCQ;EmBjHF;IACE,aAAA;ExBk2CN;EwBh2CM;IAEE,qBAAA;ExBi2CR;EwB91CM;IACE,QAAA;IACA,SAAA;ExBg2CR;EwB51CI;IAGE,aAAA;ExB81CN;AACF;;AyB58CE;EvBRA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,mBAPY;EuBpHd,sBAAA;EACA,qBAAA;EACA,kBAAA;EACA,WAAA;EACA,aAAA;EACA,eAAA;EACA,cAAA;EfwDI,mBAAA;EetDJ,qBAAA;EACA,6BAAA;EACA,gBAAA;EACA,cAjCyB;EAkCzB,yBArCoB;EAsCpB,2BAAA;EACA,kBAAA;EACA,mBAAA;EACA,eAAA;EACA,wBAAA;AzBo9CJ;AK3xCQ;EoB7MN;IvBOE,uBC8BsB;EHu8CxB;AACF;AKhyCQ;EoB7MN;IvBsIM,eAjBQ;IAmBN,oBAlBU;IAoBZ,cAnBU;EF43ChB;AACF;AKvyCQ;EoB7MN;IvBiIM,eAZQ;IAaR,iBAXU;EFk4ChB;AACF;AK7yCQ;EoB7MN;IfwEQ,mBAAA;EVs7CR;AACF;AKlzCQ;EoB7MN;IA2BI,WAAA;EzBw+CJ;AACF;AyBr+CI;EAIE,cAtDuB;EAuDvB,qBAAA;AzBo+CN;AyBh+CI;EACE,UAAA;EACA,SAAA;AzBk+CN;AyB/9CI;EACE,yBAnEwB;AzBoiD9B;AyB99CI;EAEE,QJD4B;ArBg+ClC;AyBx9CI;EACE,qBjBfe;EiBqBb,8BAAA;EAOF,mCAAA;AzB+8CN;AyBj8CI;EACE,qBjB3Ce;EiB4Cf,cjBlCoB;EiBmCpB,yBjB7Ce;EiB8Cf,2BAAA;AzBm8CN;AyB37CI;EACE,WAAA;EACA,cAAA;EAEA,kBAAA;EAEA,SAAA;EACA,WAAA;EACA,YAAA;EACA,UAAA;EAEA,uBAAA;AzB07CN;AyB76CI;EACE,SAAA;AzB+6CN;;AyB36CE;;;EAGE,YAAA;AzB86CJ;AyB56CI;;;EACE,yBA3JkB;EA4JlB,eAAA;AzBg7CN;AyB76CI;;;EACE,aAAA;AzBi7CN;AyB96CI;;;EACE,MAAA;EACA,2BAAA;AzBk7CN;;AyB36CE;EACE,yBAvK8B;EAwK9B,2BAAA;AzB86CJ;AyB56CI;EAKE,cA5KiC;AzBslDvC;AyB55CI;EACE,yBA7LkC;AzB2lDxC;AyB55CM;EACE,yBAjM0B;AzB+lDlC;;AyBz5CE;EACE,yBAjM4B;EAkM5B,2BAAA;AzB45CJ;AyB15CI;EAKE,cAtM+B;AzB8lDrC;AyB14CI;EACE,yBAvNgC;AzBmmDtC;AyB14CM;EACE,yBA3NwB;AzBumDhC;;AyBv4CE;EvB5KA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,cAPY;EuBuGd,oBAAA;EACA,gBAAA;EAMQ,uBAAA;AzBs4CZ;AK95CQ;EoBSN;IvBhFM,eAjBQ;IAmBN,iBAlBU;IAoBZ,cAnBU;EF0/ChB;AACF;AKr6CQ;EoBSN;IvBrFM,eAZQ;IAaR,cAXU;EFggDhB;AACF;;AyBh5CE;EACE,gBAAA;EAKA,sBAAA;EAEI,cAAA;EAEA,kBAAA;AzB+4CR;AKp7CQ;EoB2BN;IAII,iBAAA;EzBy5CJ;AACF;;A0B5pDE;ExBcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;EwB1Id,cAAA;EACA,mBAAA;EACA,WAAA;EAEA,clB8EiB;ARqlDrB;AKv8CQ;EqBnON;IxB6BE,uBC8BsB;EHmnDxB;AACF;AK58CQ;EqBnON;IxB4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFwiDhB;AACF;AKn9CQ;EqBnON;IxBuJM,eAZQ;IAaR,iBAXU;EF8iDhB;AACF;;A2B5rDE;EACE,YAAA;EACA,SAAA;EACA,UAAA;EACA,SAAA;A3B+rDJ;AgB3rDE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhB6rDJ;;A2B9rDE;EACE;;IAEE,mBAAA;E3BisDJ;AACF;A2B9rDE;EzBHA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EmBGhB,sBAAA;EACA,cAAA;EACA,eAAA;EACA,mBAAA;EACA,UAAA;EAEA,mBAAA;A3BisDJ;AK5/CQ;EsBlNN;IzBYE,uBC8BsB;EHwqDxB;AACF;AKjgDQ;EsBlNN;IzB2IM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF6lDhB;AACF;AKxgDQ;EsBlNN;IzBsIM,eAZQ;IAaR,iBAXU;EFmmDhB;AACF;AK9gDQ;EsBlNN;IzB0BE,cMIsB;ERssDxB;AACF;;A2BntDE;EzBrBA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,oBAPY;EyBxGd,mBAAA;A3B4tDJ;AK9hDQ;EsBhMN;IzBNE,uBC8BsB;EH0sDxB;AACF;AKniDQ;EsBhMN;IzByHM,eAjBQ;IAmBN,eAlBU;IAoBZ,yBAnBU;EF+nDhB;AACF;AK1iDQ;EsBhMN;IzBoHM,eAZQ;IAaR,iBAXU;EFqoDhB;AACF;;A2B3uDE;EzB1BA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,iBANY;EAQd,yBAPY;EyBnGd,mBAAA;A3BovDJ;AK3jDQ;EsB3LN;IzBXE,uBC8BsB;EHuuDxB;AACF;AKhkDQ;EsB3LN;IzBoHM,eAjBQ;IAmBN,kBAlBU;IAoBZ,yBAnBU;EF4pDhB;AACF;AKvkDQ;EsB3LN;IzB+GM,eAZQ;IAaR,iBAXU;EFkqDhB;AACF;;A2BnwDE;EzB/BA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EyB9Fd,mBAAA;A3B4wDJ;AKxlDQ;EsBtLN;IzBhBE,uBC8BsB;EHowDxB;AACF;AK7lDQ;EsBtLN;IzB+GM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFyrDhB;AACF;AKpmDQ;EsBtLN;IzB0GM,eAZQ;IAaR,iBAXU;EF+rDhB;AACF;;A2B3xDE;EzBpCA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;AF0sDlB;AKpnDQ;EsBjLN;IzBrBE,uBC8BsB;EHgyDxB;AACF;AKznDQ;EsBjLN;IzB0GM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFqtDhB;AACF;AKhoDQ;EsBjLN;IzBqGM,eAZQ;IAaR,iBAXU;EF2tDhB;AACF;;A2BhzDE;EACE,SAAA;EACA,kBAAA;EACA,oBAAA;A3BmzDJ;;A4B/2DE;E1BcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E0B1Id,cAAA;EAEA,mBAAA;EAEA,cpBiD0B;ARo0D9B;AKzpDQ;EuBnON;I1B6BE,uBC8BsB;EHq0DxB;AACF;AK9pDQ;EuBnON;I1B4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF0vDhB;AACF;AKrqDQ;EuBnON;I1BuJM,eAZQ;IAaR,iBAXU;EFgwDhB;AACF;;A4B13DE;EACE,mBAAA;A5B63DJ;;A4Bh3DE;EACE,mBAAA;A5Bm3DJ;;A4B/2DE;EACE,gBAAA;A5Bk3DJ;;A6B15DE;E3BcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EqBjBhB,cAAA;EAEA,kBAAA;A7Bi6DJ;AKpsDQ;EwBnON;I3B6BE,uBC8BsB;EHg3DxB;AACF;AKzsDQ;EwBnON;I3B4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFqyDhB;AACF;AKhtDQ;EwBnON;I3BuJM,eAZQ;IAaR,iBAXU;EF2yDhB;AACF;AKttDQ;EwBnON;I3B2CE,cMIsB;ER84DxB;AACF;;A6Bn7DE;E3BGA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,oBAPY;E2BhId,mBAAA;A7B47DJ;AKtuDQ;EwBxNN;I3BkBE,uBC8BsB;EHk5DxB;AACF;AK3uDQ;EwBxNN;I3BiJM,eAjBQ;IAmBN,eAlBU;IAoBZ,yBAnBU;EFu0DhB;AACF;AKlvDQ;EwBxNN;I3B4IM,eAZQ;IAaR,iBAXU;EF60DhB;AACF;;A6B38DE;E3BFA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,iBANY;EAQd,yBAPY;E2B3Hd,mBAAA;A7Bo9DJ;AKnwDQ;EwBnNN;I3BaE,uBC8BsB;EH+6DxB;AACF;AKxwDQ;EwBnNN;I3B4IM,eAjBQ;IAmBN,kBAlBU;IAoBZ,yBAnBU;EFo2DhB;AACF;AK/wDQ;EwBnNN;I3BuIM,eAZQ;IAaR,iBAXU;EF02DhB;AACF;;A6Bn+DE;E3BPA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;E2BtHd,mBAAA;A7B4+DJ;AKhyDQ;EwB9MN;I3BQE,uBC8BsB;EH48DxB;AACF;AKryDQ;EwB9MN;I3BuIM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFi4DhB;AACF;AK5yDQ;EwB9MN;I3BkIM,eAZQ;IAaR,iBAXU;EFu4DhB;AACF;;A6B3/DE;E3BZA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;AFk5DlB;AK5zDQ;EwBzMN;I3BGE,uBC8BsB;EHw+DxB;AACF;AKj0DQ;EwBzMN;I3BkIM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF65DhB;AACF;AKx0DQ;EwBzMN;I3B6HM,eAZQ;IAaR,iBAXU;EFm6DhB;AACF;;A6B7gEE;EACE,SAAA;A7BghEJ;;A8B1iEE;E5BGA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E4B/Hd,cAAA;EACA,kBAAA;EAEA,gBAVsB;EAYtB,mBAAA;EACA,kBAbsB;EAetB,WAAA;A9B+iEJ;AKl2DQ;EyBxNN;I5BkBE,uBC8BsB;EH8gExB;AACF;AKv2DQ;EyBxNN;I5BiJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFm8DhB;AACF;AK92DQ;EyBxNN;I5B4IM,eAZQ;IAaR,iBAXU;EFy8DhB;AACF;;A8B9jEE;;EAEE,gBAAA;A9BikEJ;;A8B9jEE;EAGE,eAAA;EAKE,kBAAA;EAEA,UAAA;EACA,SAAA;EACA,UAAA;EAEA,WAtCsB;EAuCtB,YAvCsB;EAwCtB,SAAA;EAEA,UAAA;A9BwjEN;;A8BxiEE;EACE,qBAAA;EACA,gBAAA;EACA,qBAAA;EACA,eAAA;EAGI,0BAAA;A9B0iER;;A8BtiEE;EACE,WAAA;EACA,sBAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WA1EsB;EA2EtB,YA3EsB;EA4EtB,8BAAA;EACA,uBAAA;A9ByiEJ;;A8BliEE;EACE,WAAA;EACA,sBAAA;EAEA,kBAAA;EACA,SAAA;EACA,SAAA;EACA,WAAA;EACA,YAAA;EAMQ,yBAAA;EACR,aAAA;EACA,yBAAA;EAGA,6BAAA;EAEA,UAAA;EAEA,uBAAA;A9B6hEJ;;A8B1hEE;EACE,cAAA;EACA,mBA9G0C;EA+G1C,kBA/G0C;A9B4oE9C;;A8BzhEE;EACE,iBAAA;EACA,6BAAA;A9B4hEJ;;A8BxhEE;EACE,UAAA;A9B2hEJ;;A8BvhEE;;EAEE,eAAA;A9B0hEJ;;A8BvhEE;EACE,YAAA;A9B0hEJ;;A8BzgEE;EpBvEM,mBAAA;EoByEJ,iBAR2B;EAS3B,kBALyB;EAMzB,8BAAA;A9B4gEJ;AK38DQ;EyBrEN;IpBhEQ,mBAAA;EVolER;AACF;A8B/gEI;EACE,aAAA;A9BihEN;A8B9gEI;EACE,gBAAA;A9BghEN;;A8BngEI;EAEE,aAAA;EACA,gBAAA;EACA,kBANa;EAOb,WAAA;A9BqgEN;AgBxrEE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhB0rEJ;A8B9/DI;EAEI,WAAA;A9B+/DR;A8Bl/DI;EACE,gBAAA;EACA,2BAAA;EACA,WAAA;A9Bo/DN;AK1+DQ;EyBbJ;IAMI,2BAAA;E9Bq/DN;AACF;A8B9+DI;EACE,QAAA;EACA,WA9N0B;EA+N1B,YA/N0B;A9B+sEhC;A8B1+DI;EACE,SAAA;EACA,SAAA;EACA,WAAA;EACA,aAAA;EACA,yBAAA;A9B4+DN;A8Bj+DI;EACE,UAAA;EACA,WAAA;A9Bm+DN;A8B/9DI;EAEE,iBADc;EAEd,kBAAA;EACA,WAAA;A9Bg+DN;A8Bv9DI;EACE,8BAAA;A9By9DN;A8Bj9DI;EACE,iDACE;A9Bk9DR;A8Bx8DI;EACE;IACE,gBAAA;IAAA,mBAAA;E9B08DN;E8Bv8DI;IACE,6BAAA;E9By8DN;AACF;;A+BjvEE;E7BUA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E6BtId,sBAAA;EACA,cAAA;EACA,WAAA;EACA,gBAAA;ErB6EI,mBAAA;EqB3EJ,YAAA;EAEA,gBAAA;EAEA,yBAAA;EACA,gBAAA;EAEA,wBAAA;A/BsvEJ;AKtiEQ;E0B/NN;I7ByBE,uBC8BsB;EHktExB;AACF;AK3iEQ;E0B/NN;I7BwJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,iBAnBU;EFuoEhB;AACF;AKljEQ;E0B/NN;I7BmJM,eAZQ;IAaR,iBAXU;EF6oEhB;AACF;AKxjEQ;E0B/NN;IrB0FQ,mBAAA;EVisER;AACF;A+B3wEI;EACE,0BAAA;EAEA,iBAAA;EAIA,2BAAA;A/BywEN;;A+B/vEE;EACE,yBAAA;A/BkwEJ;A+BhwEI;EACE,qBvBsEsB;AR4rE5B;;AgCvyEE;EtBkFM,mBAAA;AVytER;AK7kEQ;E2B9NN;ItByFQ,mBAAA;EVstER;AACF;AgC7yEI;;EAEE,kBAAA;AhC+yEN;;AgC3yEE;E9BAA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAwKY,+BAAA;EAlIZ,gBAAA;E8BtCE,aAAA;EACA,gBAAA;AhCmzEJ;AKjmEQ;E2BrNN;I9BeE,uBC8BsB;EH6wExB;AACF;AE/oEM;E8B5KJ;I9B8Kc,qCAAA;IACR,kCAAA;EFkpEN;AACF;;AgC5zEE;EACE,kBAAA;AhC+zEJ;;AiCh1EE;E/BUA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E+BtId,iBAAA;EAMA,qCAAA;EAEA,yBAAA;AjCk1EJ;AK9nEQ;E4B/NN;I/ByBE,uBC8BsB;EH0yExB;AACF;AKnoEQ;E4B/NN;I/BwJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF+tEhB;AACF;AK1oEQ;E4B/NN;I/BmJM,eAZQ;IAaR,iBAXU;EFquEhB;AACF;;AiC/1EE;EACE,aAAA;AjCk2EJ;;AiC/1EE;EAEE,oBAAA;AjCi2EJ;AiC/1EI;EAGE,aAAA;AjC+1EN;AiC51EI;EAYE,aAAA;AjCm1EN;;AkCj4EE;EhCcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;E0BbhB,SAAA;ExB+EI,mBAAA;AVuzER;AK3qEQ;E6BnON;IhC6BE,uBC8BsB;EHu1ExB;AACF;AKhrEQ;E6BnON;IhC4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF4wEhB;AACF;AKvrEQ;E6BnON;IhCuJM,eAZQ;IAaR,iBAXU;EFkxEhB;AACF;AK7rEQ;E6BnON;IhC2CE,cMIsB;ERq3ExB;AACF;AKlsEQ;E6BnON;IAII,cAAA;IACA,WAAA;IACA,mBAAA;ElCq6EJ;AACF;AKzsEQ;E6BnON;IxB8FQ,mBAAA;EVk1ER;AACF;;AK9sEQ;E6BvNN;IAEI,mBAAA;IACA,gCAAA;ElCw6EJ;AACF;AKrtEQ;E6BvNN;IAMI,kBAAA;ElC06EJ;AACF;;AkCv6EE;;;EAGE,SAAA;AlC06EJ;AKhuEQ;E6B7MN;;;IAMI,mBAAA;IACA,iBAAA;IACA,mBAAA;IACA,oBAAA;IACA,gCAAA;ElC66EJ;AACF;;AkC16EE;EACE,mBAAA;AlC66EJ;AK/uEQ;E6B/LN;IAGI,UAAA;IACA,gBAAA;IACA,iBAAA;ElC+6EJ;AACF;;AkC56EE;;EAGE,qBAAA;EACA,yBAAA;AlC86EJ;;AkC36EE;EACE,kBAAA;EhCWF,gBAAA;AFo6EF;AKjwEQ;E6B/KN;IAII,UAAA;ElCg7EJ;AACF;;AKtwEQ;E6BvKN;IAEI,mBAAA;ElCg7EJ;AACF;AK5wEQ;E6BvKN;IAKI,UAAA;ElCk7EJ;AACF;;AKjxEQ;E6B7JN;IAEI,UAAA;ElCi7EJ;AACF;;AkC96EE;EACE,mBAAA;AlCi7EJ;;AkC96EE;EACE,gBAAA;AlCi7EJ;;AkC96EE;EACE,WAAA;EACA,SAAA;EACA,UAAA;AlCi7EJ;;AkC96EE;EACE,eAAA;EACA,kBAAA;EACA,mBAAA;AlCi7EJ;;AkC56EE;EACE,+BAAA;AlC+6EJ;;AkC56EE;EACE,eAAA;EACA,gBAAA;EACA,SAAA;AlC+6EJ;;AKrzEQ;E6BpHF;IACE,SAAA;ElC66EN;AACF;AK3zEQ;E6B9GF;;;IAIE,oBAAA;IACA,SAAA;ElC26EN;AACF;;AKn0EQ;E6BnGN;IAEI,SAAA;ElCy6EJ;AACF;AKz0EQ;E6B7FF;;;IAIE,oBAAA;IACA,SAAA;ElCw6EN;AACF;;AmChjFE;EjCUA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EiCtId,sBAAA;EACA,WAAA;EACA,YAAA;EAEE,cAAA;EAEF,aAAA;EAEA,YAAA;EAGA,yBAAA;EACA,gBAAA;EAGA,wBAAA;EACG,qBAAA;EACK,gBAAA;AnCijFZ;AKt2EQ;E8B/NN;IjCyBE,uBC8BsB;EHkhFxB;AACF;AK32EQ;E8B/NN;IjCwJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFu8EhB;AACF;AKl3EQ;E8B/NN;IjCmJM,eAZQ;IAaR,iBAXU;EF68EhB;AACF;AmCjkFI;EACE,0BAAA;EAEA,iBAAA;EAKA,2BAAA;AnC8jFN;;AmCpjFE;;EAEE,SAAA;EACA,wBAAA;AnCujFJ;;AmCpjFE;EACE,0BAAA;AnCujFJ;;AmCpjFE;EACE,yBAAA;AnCujFJ;AmCrjFI;EACE,qB3BsDsB;ARigF5B;;AmC/iFE;EACE,eAAA;AnCkjFJ;;AmC/iFE;EACE,eAAA;AnCkjFJ;;AmC/iFE;EACE,eAAA;AnCkjFJ;;AmC/iFE;EACE,iBAAA;AnCkjFJ;;AmC/iFE;EACE,cAAA;AnCkjFJ;;AmC/iFE;EACE,gBAAA;AnCkjFJ;;AmC/iFE;EACE,gBAAA;AnCkjFJ;;AmC/iFE;EAGE,aAAA;AnCkjFJ;AmChjFI;EAGU,cAAA;AnCkjFd;AmC/iFI;EAEE,UAAA;AnCgjFN;AKx7EQ;E8BrIN;IAkBI,cAAA;EnC+iFJ;EmC7iFI;IAEE,eAAA;EnC8iFN;AACF;;AmC1iFE;;EjC3GA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EiChBd,sBAAA;EACA,qBAAA;EACA,eAAA;EAEE,iBAAA;EAEF,YAAA;EAEE,cAAA;EAGF,YAAA;EACA,yBAAA;EACA,yBAAA;EAEA,kBAAA;EAIA,mBAAA;EAGA,eAAA;EAMQ,cAAA;AnCoiFZ;AK19EQ;E8B1GN;;IjC5FE,uBC8BsB;EHuoFxB;AACF;AKh+EQ;E8B1GN;;IjCmCM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF6jFhB;AACF;AKx+EQ;E8B1GN;;IjC8BM,eAZQ;IAaR,iBAXU;EFokFhB;AACF;AK/+EQ;E8B1GN;;IAqBI,gBAAA;EnCykFJ;AACF;AKr/EQ;E8B1GN;;IAoCI,cAAA;IACA,YAAA;IACA,mBAAA;EnCgkFJ;AACF;;AK7/EQ;E8BhEN;IAEI,gBAAA;EnCgkFJ;AACF;AKngFQ;E8BhEN;IAMM,eAAA;EnCikFN;AACF;;AKxgFQ;E8BpDN;IAEI,aAAA;EnC+jFJ;AACF;AK9gFQ;E8BpDN;IAMM,cAAA;EnCgkFN;AACF;;AoCjvFE;EAGE,YAAA;ApCkvFJ;AgBlvFE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhBovFJ;;AoCpvFE;EACE,qBAAA;EACA,kBAAA;EACA,gBAAA;ApCuvFJ;;AoCpvFE;EACE,cAAA;ApCuvFJ;;AoCpvFE;EACE,gBAAA;ApCuvFJ;;AqC7wFE;EnCcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EEkEZ,mBAAA;E2BlFJ,cAAA;ArCqxFJ;AKvjFQ;EgCnON;InC6BE,uBC8BsB;EHmuFxB;AACF;AK5jFQ;EgCnON;InC4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFwpFhB;AACF;AKnkFQ;EgCnON;InCuJM,eAZQ;IAaR,iBAXU;EF8pFhB;AACF;AKzkFQ;EgCnON;InC2CE,cMIsB;ERiwFxB;AACF;AK9kFQ;EgCnON;I3B8FQ,mBAAA;EVutFR;AACF;;AqC9yFE;EAEE,qBAAA;EAGA,kBAAA;EAEA,kBAAA;EAGA,kBAAA;EAGA,c7B+GgB;E6B9GhB,eAAA;ArCyyFJ;AqCvyFI;EACE,c7ByHoB;ARgrF1B;AqCtyFI;E9BVA,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APgzFF;;AqCvyFE;EACE,0BAAA;ArC0yFJ;;AqCtyFE;EACE,qBAAA;ArCyyFJ;;AqCpyFE;EACE,aAAA;ArCuyFJ;;AqCnyFE;EACE,WAAA;EACA,kBAAA;EAEA,SAAA;EACA,SAAA;EACA,OAAA;EAEA,YAAA;ECrBF,cADmE;EAGnE,QAAA;EACA,SAAA;EAEA,mBAAA;EACA,yBAAA;EAeE,oDAAA;EACQ,4CAAA;EAER,gCAAA;EACA,0BAAA;AtCyyFJ;AqCzyFI;ECzBF,cADmE;EAGnE,QAAA;EACA,SAAA;EAEA,mBAAA;EACA,yBAAA;EAqBE,oDAAA;EACQ,4CAAA;EAER,gCAAA;EACA,yBAAA;AtC8yFJ;;AqC/yFE;EACE,aAAA;EACA,kBAAA;EACA,8BAAA;ArCkzFJ;;AqC/yFE;EACE,aAAA;EACA,mBAAA;ArCkzFJ;;AqC/yFE;EACE,gBAAA;ArCkzFJ;;AuC/3FE;ErCsCA,cMnBkB;EEgEZ,aAAA;EAEA,mBAAA;E6BhFJ,yBAAA;AvCi4FJ;AKrqFQ;EkCjON;IrCyCE,cMIsB;ER61FxB;AACF;AK1qFQ;EkCjON;I7B0FQ,aAAA;EVqzFR;AACF;AK/qFQ;EkCjON;I7B4FQ,mBAAA;EVwzFR;AACF;AuC94FI;EACE,0BAAA;AvCg5FN;;AuC54FE;ErCAA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EqC5Hd,aAAA;E7BsEI,mBAAA;AV+0FR;AKnsFQ;EkCrNN;IrCeE,uBC8BsB;EH+2FxB;AACF;AKxsFQ;EkCrNN;IrC8IM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFoyFhB;AACF;AK/sFQ;EkCrNN;IrCyIM,eAZQ;IAaR,iBAXU;EF0yFhB;AACF;AKrtFQ;EkCrNN;I7BgFQ,mBAAA;EV81FR;AACF;;AuCx6FE;ErCPA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;AF0zFlB;AKpuFQ;EkC9MN;IrCQE,uBC8BsB;EHg5FxB;AACF;AKzuFQ;EkC9MN;IrCuIM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFq0FhB;AACF;AKhvFQ;EkC9MN;IrCkIM,eAZQ;IAaR,iBAXU;EF20FhB;AACF;AuCj8FI;EACE,aAAA;E7B8DE,mBAAA;AVs4FR;AK1vFQ;EkC3MJ;I7BsEM,mBAAA;EVm4FR;AACF;;AuCn8FE;EACE,aAAA;EACA,gBAAA;AvCs8FJ;;AuCn8FE;ErC4BA,gBAAA;EAlDA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;AF89FF;AK3wFQ;EkC/LN;IrCPE,uBC8BsB;EHu7FxB;AACF;AMv+FE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APi+FF;AMv6FE;EAEE,cAAA;ANw6FJ;AMr6FE;EACE,cAAA;ANu6FJ;AMp6FE;EACE,cERiB;AR86FrB;AMj6FE;EACE,cEvBsB;AR07F1B;;AwChgGE;EtCQA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EgCZhB,gBALkB;EAMlB,mBANkB;AxC+gGtB;AKhzFQ;EmC7NN;ItCuBE,uBC8BsB;EH49FxB;AACF;AKrzFQ;EmC7NN;ItCsJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFi5FhB;AACF;AK5zFQ;EmC7NN;ItCiJM,eAZQ;IAaR,iBAXU;EFu5FhB;AACF;AKl0FQ;EmC7NN;ItCqCE,cMIsB;ER0/FxB;AACF;AwC9hGI;EAGE,kBAAA;EACA,iBAAA;EACA,kBAbgB;EAchB,iBAdgB;EAgBhB,0BAAA;EAIA,mCAAA;AxC0hGN;AwC7gGI;EACE,kBAAA;EACA,iBAAA;EACA,kBApCgB;EAqChB,iBArCgB;EAuChB,0BAAA;EAEA,mCAAA;AxC6gGN;;AyC/hGE;EvCbA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EQtDV,iBAAA;EAAA,oBAAA;E+BvDJ,6BAAA;EACA,cjCZgB;EiCahB,mBjCH6B;AR0iGjC;AKt2FQ;EoCxMN;IvCEE,uBC8BsB;EHkhGxB;AACF;AK32FQ;EoCxMN;IvCiIM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFu8FhB;AACF;AKl3FQ;EoCxMN;IvC4HM,eAZQ;IAaR,gBAXU;EF68FhB;AACF;AKx3FQ;EoCxMN;I/BmEQ,iBAAA;EVigGR;AACF;AK73FQ;EoCxMN;I/BmEQ,oBAAA;EVsgGR;AACF;;AyCpjGM;EAIE,cjChCY;ARolGpB;AyChjGI;ElCvCA,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APulGF;;AyCziGE;EACE,SAAA;E/BeI,mBAAA;E+BbJ,SAAA;EACA,gCAAA;AzC4iGJ;AKp5FQ;EoC5JN;I/BuBQ,mBAAA;EV6hGR;AACF;;AyC9iGE;EAGE,aAAA;EACA,mBAAA;EACA,kBAAA;EAEI,eAAA;EAGI,qBAAA;EAGA,uBAAA;AzCijGZ;;AyC9iGE;EACE,kBpBvDgB;EoBwDhB,mBAAA;EACA,iBpBzDgB;ArB0mGpB;;AyC9iGE;EAGU,SAAA;AzCijGZ;AKr7FQ;EoC/HN;IAMQ,iBAAA;EzCmjGR;AACF;;AyChjGE;EACE,qBAAA;EACA,kBAAA;EAIA,mBAAA;AzCgjGJ;AKj8FQ;EoCrHN;IAII,mBAAA;EzCsjGJ;AACF;;AyCljGE;EACE,qBAAA;AzCqjGJ;;AyCljGE;EACE,qBAAA;EACA,gBArG+B;EAsG/B,kBAAA;EACA,uDAAA;EAIA,4BAAA;EACA,2BAAA;EACA,4BAAA;EACA,kBAAA;EACA,qBAAA;EACA,mBAAA;AzCkjGJ;A0C5pGE;ED6FA;IAMI,0DAAA;EzC6jGJ;AACF;;AyCpjGE;EACE,aAAA;EACA,mBAAA;EACA,UAAA;AzCujGJ;;AyCpjGE;EACE,mBAAA;AzCujGJ;;AyCpjGE;EACE,qBAAA;EACA,kBAAA;EACA,kBAAA;AzCujGJ;;AyCpjGE;E/BpEM,mBAAA;E+BsEJ,oBAAA;EAIA,gCAAA;AzCojGJ;AKl/FQ;EoCxEN;I/B7DQ,mBAAA;EV2nGR;AACF;AKv/FQ;EoCxEN;IAII,oBAAA;EzC+jGJ;AACF;;AyC3jGE;EAGE,aAAA;EACA,mBAAA;EACA,kBAAA;EAEI,eAAA;AzC8jGR;;AyC3jGE;EACE,qBAAA;EACA,kBpBxIgB;EoByIhB,mBpBhJW;EoBiJX,iBpB1IgB;EoB2IhB,mBAAA;EAIQ,YAAA;EAEJ,cAAA;AzC6jGR;AKnhGQ;EoCrDN;IAgBQ,iBAAA;EzC6jGR;AACF;;AKzhGQ;EoC7BJ;IAGU,YAAA;EzC0jGZ;AACF;AyCvjGE;EACE,SAAA;EACA,UAAA;EACA,gBAAA;EACA,wBpBhLW;EoBiLH,qBpBjLG;EoBiLH,gBpBjLG;ArB0uGf;;AKxiGQ;EoCbJ;IAEU,eAAA;EzCyjGZ;;EyCtjGE;IAEU,eAAA;EzCyjGZ;AACF;AyCtjGE;E/B1IM,mBAAA;AVmsGR;AKvjGQ;EoCFN;I/BnIQ,mBAAA;EVgsGR;AACF;;AyC1jGE;EACE,gBAAA;AzC6jGJ;;A2CzxGE;EzCIA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EyChId,iCAAA;EACA,cAVkB;EAWlB,mBAdwB;A3C+yG5B;AK7kGQ;EsCzNN;IzCmBE,uBC8BsB;EHyvGxB;AACF;AKllGQ;EsCzNN;IzCkJM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EF8qGhB;AACF;AKzlGQ;EsCzNN;IzC6IM,eAZQ;IAaR,gBAXU;EForGhB;AACF;;A2ChzGE;EACE,eAAA;EACA,qBnCNiB;ARyzGrB;A2CjzGI;EACE,WAAA;A3CmzGN;;A2C/yGE;EAEE,kBAAA;EACA,oBAAA;EACA,iBAAA;EACA,iCAAA;A3CizGJ;AgBz0GE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhB20GJ;;A2CnzGE;EACE,qBAAA;EACA,iBAAA;A3CszGJ;;A2CnzGE;EACE,kBAAA;EACA,SAAA;EACA,iBAAA;EACA,kBAAA;EACA,mBAAA;A3CszGJ;;A2CnzGE;EACE,WAAA;EACA,YAAA;EACA,SAAA;EACA,sBAAA;A3CszGJ;;A2CnzGE;EzCzCA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,cAPY;EyCpFd,qBAAA;EACA,mBAAA;A3C4zGJ;AKnpGQ;EsC5KN;IzC1BE,uBC8BsB;EH+zGxB;AACF;AKxpGQ;EsC5KN;IzCqGM,eAjBQ;IAmBN,iBAlBU;IAoBZ,cAnBU;EFovGhB;AACF;AK/pGQ;EsC5KN;IzCgGM,eAZQ;IAaR,cAXU;EF0vGhB;AACF;;A2C30GE;EACE,qBAAA;A3C80GJ;A2C50GI;EAEE,cA7DgB;A3C04GtB;A2C10GI;EACE,0BAAA;A3C40GN;A2Cz0GI;EpCvDA,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APg4GF;;A2Cl0GE;EzCzEA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EyC4BE,qBAAA;EACA,eAAA;EACA,cAAA;A3Cq0GJ;AKhsGQ;EsC5IN;IzC1DE,uBC8BsB;EH42GxB;AACF;A2Cx0GI;EAEE,qBAAA;A3Cy0GN;A2Ct0GI;EAGE,mBAAA;EAGA,wBAAA;A3Co0GN;A2Ch0GI;EACE,gBAAA;EACA,gBAAA;A3Ck0GN;;A2C9zGE;EACE,qBAAA;EACA,mBAAA;EzCzGF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;AFkzGlB;AK5tGQ;EsC9GN;IzCxFE,uBC8BsB;EHw4GxB;AACF;AKjuGQ;EsC9GN;IzCuCM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EF6zGhB;AACF;AKxuGQ;EsC9GN;IzCkCM,eAZQ;IAaR,iBAXU;EFm0GhB;AACF;;A2Ct1GE;;EAEE,sBAAA;A3Cy1GJ;;A2Ct1GE;EjCzCM,mBAAA;EiC2CJ,mBAAA;A3Cy1GJ;AKxvGQ;EsCnGN;IjClCQ,mBAAA;EVi4GR;AACF;AK7vGQ;EsCnGN;IAKI,aAAA;IACA,mBtB9Fc;IsB+Fd,WAAA;IACA,mBAAA;E3C+1GJ;AACF;;AKrwGQ;EsCvFN;IAEI,aAAA;IACA,kBtBvGc;IsBwGd,WAAA;E3C+1GJ;AACF;;A2C51GE;EzCtIA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EyCSd,aAAA;EACA,kBAAA;EACA,SAAA;EACA,QAAA;EACA,SAAA;EACA,UAAA;EACA,SAAA;EACA,cAxJkB;EAyJlB,gBAAA;A3Cq2GJ;AKhyGQ;EsC/EN;IzCvHE,uBC8BsB;EH48GxB;AACF;AKryGQ;EsC/EN;IzCQM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFi4GhB;AACF;AK5yGQ;EsC/EN;IzCGM,eAZQ;IAaR,gBAXU;EFu4GhB;AACF;A2Cr3GI;EACE,0BAAA;A3Cu3GN;A2Cp3GI;EpClJA,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APsgHF;A2Cv3GI;ELnIF,qBKoIwE;ELlIxE,QAAA;EACA,SAAA;EAEA,mBAAA;EACA,yBAAA;EAqBE,oDAAA;EACQ,4CAAA;EAER,8BAAA;EACA,yBAAA;EKsGE,WAAA;EACA,gBAAA;A3Ci4GN;AKz0GQ;EsC/EN;IA2BI,SAAA;E3Ci4GJ;AACF;;A2C73GI;EL/IF,qBKgJsE;EL9ItE,QAAA;EACA,SAAA;EAEA,mBAAA;EACA,yBAAA;EASE,sDAAA;EACQ,8CAAA;EAER,8BAAA;EACA,4BAAA;AtCqgHJ;;A2Cp4GE;EjClGM,mBAAA;EiCoGJ,cAAA;EACA,SAAA;EACA,UAAA;EACA,gBAAA;A3Cu4GJ;AKl2GQ;EsC1CN;IjC3FQ,mBAAA;EV2+GR;AACF;;A2Cx4GI;EACE,cAAA;A3C24GN;AK32GQ;EsCjCJ;IAGI,aAAA;E3C64GN;AACF;A2C14GI;EACE,aAAA;A3C44GN;AKn3GQ;EsC1BJ;IAGI,cAAA;E3C84GN;AACF;A2C34GI;EACE,cAAA;A3C64GN;;AK33GQ;EsCdN;IAEI,SAAA;IACA,cAAA;IACA,iBAAA;E3C44GJ;AACF;;A2Cz4GE;EACE,iBAAA;A3C44GJ;;A2Cz4GE;EACE,eAAA;EACA,gCAAA;A3C44GJ;AK54GQ;EsCFN;IAKI,qBAAA;IACA,kBAAA;IACA,cAAA;IACA,SAAA;E3C64GJ;AACF;A2C34GI;EzC9NF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EyCiGZ,mBAAA;A3Cm5GN;AK95GQ;EsCSJ;IzC/MA,uBC8BsB;EH0kHxB;AACF;AKn6GQ;EsCSJ;IzChFI,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EF+/GhB;AACF;AK16GQ;EsCSJ;IzCrFI,eAZQ;IAaR,gBAXU;EFqgHhB;AACF;;A2C/5GM;EAGE,cAhPqB;A3CgpH7B;A2C35GM;EACE,cnCjLkB;AR8kH1B;;A2Cx5GE;EACE,eAAA;A3C25GJ;;AK37GQ;EsCoCJ;IACE,sBAAA;IACA,cAAA;IACA,uBAAA;E3C25GJ;;E2Cv5GE;IACE,aAAA;E3C05GJ;;E2Ct5GI;IAEE,cAAA;E3Cw5GN;E2Cp5GI;IACE,aAAA;E3Cs5GN;AACF;A4CjrHE;E1CcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EoClBhB,aAAA;ElCoFI,gBAAA;EAAA,mBAAA;EkC9EJ,WAAA;EAEA,+BAAA;A5CqrHJ;AK79GQ;EuCnON;I1C6BE,uBC8BsB;EHyoHxB;AACF;AKl+GQ;EuCnON;I1C4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF8jHhB;AACF;AKz+GQ;EuCnON;I1CuJM,eAZQ;IAaR,iBAXU;EFokHhB;AACF;AK/+GQ;EuCnON;I1C2CE,cMIsB;ERuqHxB;AACF;AKp/GQ;EuCnON;IlC8FQ,gBAAA;EV6nHR;AACF;AKz/GQ;EuCnON;IlC8FQ,mBAAA;EVkoHR;AACF;A4CptHI;EACE,aAAA;A5CstHN;A4CntHI;;EAEE,gBAAA;A5CqtHN;;A6CxuHE;E3CcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EQtDV,mBAAA;EmCnFJ,yBAAA;EAEA,yBrCQiB;ARuuHrB;AKlhHQ;EwCnON;I3C6BE,uBC8BsB;EH8rHxB;AACF;AKvhHQ;EwCnON;I3C4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFmnHhB;AACF;AK9hHQ;EwCnON;I3CuJM,eAZQ;IAaR,iBAXU;EFynHhB;AACF;AKpiHQ;EwCnON;InC8FQ,mBAAA;EV6qHR;AACF;A6CpwHI;EACE,0BAAA;A7CswHN;;A6ClwHE;EACE,qBAAA;EAGA,oCAAA;A7CmwHJ;AKjjHQ;EwCtNN;IAOI,qBAAA;E7CowHJ;AACF;;A6CjwHE;E3CVA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;E2ClHd,SAAA;EAEA,UAAA;EAEA,cAAA;A7CuwHJ;AKnkHQ;EwC3MN;I3CKE,uBC8BsB;EH+uHxB;AACF;AKxkHQ;EwC3MN;I3CoIM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFoqHhB;AACF;AK/kHQ;EwC3MN;I3C+HM,eAZQ;IAaR,iBAXU;EF0qHhB;AACF;;A6CtxHE;E3CMA,cMnBkB;EqCgBhB,aAAA;EAEA,yBrCD2B;ARwxH/B;AK3lHQ;EwCjMN;I3CSE,cMIsB;ERmxHxB;AACF;AKhmHQ;EwCjMN;IAQI,aAPe;E7CoyHnB;AACF;A6CzxHI;EAGE,sBAAA;EAOA,gBAAA;A7CmxHN;A6ChxHI;EACE,gBAAA;A7CkxHN;;A6C9wHE;E3CnDA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;E2CzEd,kBAAA;EAEA,UAAA;A7CqxHJ;AKxnHQ;EwClKN;I3CpCE,uBC8BsB;EHoyHxB;AACF;AK7nHQ;EwClKN;I3C2FM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFytHhB;AACF;AKpoHQ;EwClKN;I3CsFM,eAZQ;IAaR,iBAXU;EF+tHhB;AACF;;A6CpyHE;E3C3DA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;AFm2HF;AKhpHQ;EwC1JN;I3C5CE,uBC8BsB;EH4zHxB;AACF;AM52HE;ECME,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APs2HF;AM7nHE;EACE,cE/HgB;AR8vHpB;AM5nHE;EACE,cEnIgB;ARiwHpB;AM3nHE;EACE,cEzHsB;ARsvH1B;AM1nHE;EACE,cEtHuB;ARkvH3B;AMvnHE;EACE,cEzMsB;ARk0H1B;;A6Ch0HE;EACE,qBrCemB;EqCbnB,yBrCamB;ARqzHvB;AMjxHE;EAEE,cEtCmB;ARwzHvB;AM/wHE;EACE,cAAA;ANixHJ;AM9wHE;EACE,cE9CmB;AR8zHvB;AM3wHE;EACE,cEtEsB;ARm1H1B;;A8C/5HE;E5CcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E4C1Id,sBAAA;EAEA,mBAAA;EACA,aAAA;EAEA,6BAAA;EAEA,kBAAA;A9Co6HJ;AK3sHQ;EyCnON;I5C6BE,uBC8BsB;EHu3HxB;AACF;AKhtHQ;EyCnON;I5C4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF4yHhB;AACF;AKvtHQ;EyCnON;I5CuJM,eAZQ;IAaR,iBAXU;EFkzHhB;AACF;AK7tHQ;EyCnON;IAaI,aAAA;E9Cu7HJ;AACF;;A8Cp7HE;EACE,cAAA;EACA,mBAAA;A9Cu7HJ;AKvuHQ;EyClNN;IAKI,0BAAA;IACA,ctCwBoB;IsCvBpB,gBAAA;E9Cw7HJ;AACF;;A8Cr7HE;EACE,aAAA;EACA,mBAAA;E5ChBF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,oBAPY;AFg1HlB;AK1vHQ;EyCvMN;I5CCE,uBC8BsB;EHs6HxB;AACF;AK/vHQ;EyCvMN;I5CgIM,eAjBQ;IAmBN,eAlBU;IAoBZ,yBAnBU;EF21HhB;AACF;AKtwHQ;EyCvMN;I5C2HM,eAZQ;IAaR,iBAXU;EFi2HhB;AACF;;A8C58HE;EACE,gBAAA;A9C+8HJ;;A8C58HE;E5CzBA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,iBANY;EAQd,yBAPY;AFg3HlB;AK1xHQ;EyC5LN;I5CVE,uBC8BsB;EHs8HxB;AACF;AK/xHQ;EyC5LN;I5CqHM,eAjBQ;IAmBN,kBAlBU;IAoBZ,yBAnBU;EF23HhB;AACF;AKtyHQ;EyC5LN;I5CgHM,eAZQ;IAaR,iBAXU;EFi4HhB;AACF;;A+C/gIE;EAEE,qBAAA;EAKA,8BAAA;EACA,oBAAA;EAEA,cAAA;EACA,yBAAA;EACA,mBAAA;EAEA,qBAAA;EACA,yBAAA;E7CDF,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,cAPY;E6CjHZ,gBAAA;EACA,kBAAA;EACA,mBAAA;EACA,iBAAA;A/CsgIN;AKl0HQ;E0CnON;I7C6BE,uBC8BsB;EH8+HxB;AACF;AKv0HQ;E0CnON;I7C4JM,eAjBQ;IAmBN,eAlBU;IAoBZ,cAnBU;EFm6HhB;AACF;AK90HQ;E0CnON;I7CuJM,eAZQ;IAaR,cAXU;EFy6HhB;AACF;;A+CnhIE;EACE,yBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;A+CnhIE;EACE,cAAA;EACA,mBAAA;A/CshIJ;;AgDtmIE;EACE,iBAAA;EACA,oBAAA;EAEA,gCAAA;AhDwmIJ;;AgDrmIE;E9CKA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,mBANY;EAQd,yBAPY;EArGhB,cMnBkB;EwCRhB,cAAA;EACA,SAAA;AhD6mIJ;AKx5HQ;E2C1NN;I9CoBE,uBC8BsB;EHokIxB;AACF;AK75HQ;E2C1NN;I9CmJM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EFy/HhB;AACF;AKp6HQ;E2C1NN;I9C8IM,eAZQ;IAaR,gBAXU;EF+/HhB;AACF;AK16HQ;E2C1NN;I9CkCE,cMIsB;ERkmIxB;AACF;;AgDjoIE;EACE,kBAAA;AhDooIJ;;AgDjoIE;EACE,mBAAA;EACA,wBAAA;AhDooIJ;;AiD3pIE;EvCuFM,eAAA;EAAA,mBAAA;AVykIR;AK77HQ;E4CnON;IvC8FQ,eAAA;EVskIR;AACF;AKl8HQ;E4CnON;IvC8FQ,mBAAA;EV2kIR;AACF;;AiDrqIE;E/CSA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;EyCbhB,mBAAA;AjD8qIJ;AKn9HQ;E4C9NN;I/CwBE,uBC8BsB;EH+nIxB;AACF;AKx9HQ;E4C9NN;I/CuJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFojIhB;AACF;AK/9HQ;E4C9NN;I/CkJM,eAZQ;IAaR,iBAXU;EF0jIhB;AACF;AKr+HQ;E4C9NN;I/CsCE,cMIsB;ER6pIxB;AACF;;AiDlsIE;EACE,SAAA;EACA,UAAA;EACA,gBAAA;EvCyEI,mBAAA;AV6nIR;AKj/HQ;E4CxNN;IvCmFQ,mBAAA;EV0nIR;AACF;;AiDvsIE;E/CJA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;E+CzHd,iBAAA;AjDgtIJ;AKjgIQ;E4CjNN;I/CWE,uBC8BsB;EH6qIxB;AACF;AKtgIQ;E4CjNN;I/C0IM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFkmIhB;AACF;AK7gIQ;E4CjNN;I/CqIM,eAZQ;IAaR,iBAXU;EFwmIhB;AACF;AiDhuII;E/CkBF,cMnBkB;EyCGd,YAAA;EACA,kBAAA;EACA,kBAAA;AjDkuIN;AKzhIQ;E4C7MJ;I/CqBA,cMIsB;ERitIxB;AACF;;AiDnuIE;EAGE,qBAAA;EACA,mBAAA;AjDouIJ;AMruIE;EACE,cEkGgB;ARqoIpB;AMpuIE;EACE,cEqGwB;ARioI5B;AMnuIE;EACE,cEwGsB;AR6nI1B;AMluIE;EACE,cE2GuB;ARynI3B;AM/tIE;EACE,cEwBsB;ARysI1B;AiD/uII;E1CpBA,8BAAA;EAEF,cCwDwB;EDvDxB,yBC6CmB;ED5CnB,yCAAA;EAGA,qBAAA;APmwIF;;AiDjvIE;EvC4CM,mBAAA;AVysIR;AK7jIQ;E4CxLN;IvCmDQ,mBAAA;EVssIR;AACF;;AKlkIQ;E4ChLF;IAEE,gBAAA;IACA,gCAAA;EjDqvIN;EgBnyIA;IACE,WAAA;IACA,cAAA;IACA,WAAA;EhBqyIF;EiDvvII;IACE,aAAA;EjDyvIN;EiDtvII;IACE,kBAAA;IAEA,iBAAA;IACA,gBAAA;IACA,cAAA;IACA,kBAAA;IAEA,WAAA;IACA,yBAAA;IACA,kBAAA;EjDsvIN;EiDpvIM;IACE,aAAA;EjDsvIR;EiDlvII;IAGE,kBAAA;IAEA,gBAAA;IAGA,mBAAA;IACA,iBAAA;IACA,mBAAA;IACA,oBAAA;IACA,kBAAA;IAEA,yBAAA;IACA,gBAAA;IAEA,yBzCzDuB;ERsyI7B;EiD3uIM;IACE,qBAAA;EjD6uIR;EiDzuII;IAGE,gBAAA;EjDyuIN;EMvnIA;IJnLA,cMnBkB;ERg0IlB;AACF;AKnnIQ;ECRN;IJhLE,cMIsB;ER2yIxB;AACF;AKxnIQ;E4CxHA;IACE,WAAA;IACA,kBAAA;IACA,MAAA;IACA,QAAA;IACA,SAAA;IACA,OAAA;EjDmvIR;AACF;AKloIQ;E4C9GF;IvC9BE,gBAAA;IuCgCA,kBAAA;IACA,yBAAA;IACA,aAAA;EjDmvIN;AACF;AK1oIQ;E4C9GF;IvCvBI,gBAAA;EVmxIR;AACF;AK/oIQ;E4CxGA;IACE,gBAAA;EjD0vIR;AACF;AKppIQ;E4CnGF;IACE,aAAA;EjD0vIN;AACF;;AkD92IE;EhDAA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EgD5Hd,cAAA;EACA,kBAAA;EAEA,gBAbkB;EAelB,mBAAA;EACA,kBAhBkB;EAkBlB,WAAA;AlDm3IJ;AKzqIQ;E6CrNN;IhDeE,uBC8BsB;EHq1IxB;AACF;AK9qIQ;E6CrNN;IhD8IM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EF0wIhB;AACF;AKrrIQ;E6CrNN;IhDyIM,eAZQ;IAaR,iBAXU;EFgxIhB;AACF;;AkDl4IE;;EAEE,gBAAA;AlDq4IJ;;AkDl4IE;EAGE,eAAA;EAKE,kBAAA;EAEA,UAAA;EACA,SAAA;EACA,UAAA;EAEA,WAzCsB;EA0CtB,YA1CsB;EA2CtB,SAAA;EAEA,UAAA;AlD43IN;;AkD52IE;EACE,qBAAA;EACA,gBAAA;EACA,qBAAA;EACA,eAAA;EAGI,0BAAA;AlD82IR;;AkD12IE;EACE,WAAA;EACA,sBAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EAEA,WA9EkB;EA+ElB,YA/EkB;EAiFlB,8BAAA;EACA,kBAAA;EACA,uBAAA;AlD22IJ;;AkDp2IE;EACE,WAAA;EAEA,kBAAA;EACA,SAAA;EACA,UAAA;EAEA,QAAA;EACA,SAAA;EAEA,+BAAA;EACA,kBAAA;EACA,UAAA;EACA,wBAAA;AlDo2IJ;;AkDj2IE;EACE,cAAA;EACA,mBA1GsC;EA2GtC,kBA3GsC;AlD+8I1C;;AkDh2IE;EACE,iBAAA;EACA,6BAAA;AlDm2IJ;;AkD/1IE;EACE,UAAA;AlDk2IJ;;AkD91IE;;EAEE,eAAA;AlDi2IJ;;AkD91IE;EACE,YAAA;AlDi2IJ;;AKvwIQ;EW3NN;IACE,WAAA;IACA,cAAA;IACA,WAAA;EhBs+IF;EkD71II;IACE,kBAAA;IACA,WAAA;IACA,WAAA;ElD+1IN;AACF;AkD11IM;EACE,eAAA;EACA,WAAA;AlD41IR;;AkDn1IE;EhD1JA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;E0CuJhB,WArKkB;EAsKlB,mBAAA;EACA,kBAAA;AlD21IJ;AKtyIQ;E6C3DN;IhD3IE,uBC8BsB;EHk9IxB;AACF;AK3yIQ;E6C3DN;IhDZM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFu4IhB;AACF;AKlzIQ;E6C3DN;IhDjBM,eAZQ;IAaR,iBAXU;EF64IhB;AACF;AKxzIQ;E6C3DN;IhD7HE,cMIsB;ERg/IxB;AACF;;AkDj2IE;ExCxGM,mBAAA;EwC0GJ,iBAR2B;EAS3B,kBALyB;EAMzB,8BAAA;AlDo2IJ;AKp0IQ;E6CpCN;IxCjGQ,mBAAA;EV68IR;AACF;AkDv2II;EACE,aAAA;AlDy2IN;AkDt2II;EACE,gBAAA;AlDw2IN;;AkD31II;EAEE,aAAA;EACA,gBAAA;EACA,kBANa;EAOb,WAAA;AlD61IN;AgBjjJE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhBmjJJ;AkDt1II;EAEI,WAAA;AlDu1IR;AkD10II;EACE,gBAAA;EACA,2BAAA;EACA,WAAA;AlD40IN;AKn2IQ;E6CoBJ;IAMI,2BAAA;ElD60IN;AACF;AkDt0II;EACE,QAAA;EACA,WA/PsB;EAgQtB,YAhQsB;AlDwkJ5B;AkDl0II;EACE,SAAA;EACA,SAAA;EACA,iBAAA;AlDo0IN;AkDzzII;EACE,UAAA;EACA,WAAA;EACA,oBAAA;AlD2zIN;AkDvzII;EAEE,iBADc;EAEd,kBAAA;EACA,WAAA;AlDwzIN;AkDrzII;EACE,WAnSsB;EAoStB,kBAAA;AlDuzIN;AkD9yII;EACE,8BAAA;AlDgzIN;AkDxyII;EACE,iDACE;AlDyyIR;AkD/xII;EACE;IACE,gBAAA;IAAA,mBAAA;ElDiyIN;EkD9xII;IACE,6BAAA;ElDgyIN;AACF;;AmD7mJE;EjDUA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EiDtId,sBAAA;EACA,eAAA;EACA,YAAA;EAEE,cAAA;EAEF,YAAA;EACA,yBAAA;AnDmnJJ;AK95IQ;E8C/NN;IjDyBE,uBC8BsB;EH0kJxB;AACF;AKn6IQ;E8C/NN;IjDwJM,eAjBQ;IAmBN,oBAlBU;IAoBZ,iBAnBU;EF+/IhB;AACF;AK16IQ;E8C/NN;IjDmJM,eAZQ;IAaR,iBAXU;EFqgJhB;AACF;AmDnoJI;EACE,0BAAA;EAEA,iBAAA;EAIA,2BAAA;AnDioJN;;AmDvnJE;;;EAGE,cAAA;EACA,yBAAA;AnD0nJJ;;AmDvnJE;EACE,yBAAA;AnD0nJJ;AmDxnJI;EACE,qB3CoEsB;ARsjJ5B;;AoDtqJE;ECiDA,6BAAA;EAEA,qBAAA;EACA,sBAAA;EAGA,oBAAA;EAEA,2BAAA;EACA,8BAAA;EACA,wCAAA;EACQ,gCAAA;EAKR,8BAAA;EnDnDA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgII,eALU;EAOR,mBANY;EAQd,yBAPY;EkDvId,cAAA;EACA,kBAAA;ApDmrJJ;AqDvnJE;EAEE,2BAAA;EAEA,sBAAA;EACA,uBAAA;EACA,0BAAA;EAEA,4BAAA;EACA,qBAAA;EACA,kCAAA;EACQ,0BAAA;EAER,+BAAA;ArDqnJJ;AKl+IQ;E+CnON;IlD6BE,uBC8BsB;EH8oJxB;AACF;AM/+IE;EJnLA,cMnBkB;ARwrJpB;AK1+IQ;ECRN;IJhLE,cMIsB;ERkqJxB;AACF;AK/+IQ;E+CnON;IlD4JM,eAjBQ;IAmBN,eAlBU;IAoBZ,iBAnBU;EF2kJhB;AACF;AKt/IQ;E+CnON;IlDuJM,eAZQ;IAaR,gBAXU;EFilJhB;AACF;AoDrtJI;EAVF;IAgBI,iEAAA;IACA,+DAAA;EpDmtJJ;AACF;AoDjtJI;EACE,0BAAA;EACA,iBAAA;EACA,yB5C2Ce;ARwqJrB;;AsD1uJE;EpDcA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAsCA,gBAAA;EA0FI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;E8ClBhB,WAAA;E5CoFI,mBAAA;E4CjFJ,iBAAA;EACA,yBAAA;AtDkvJJ;AKthJQ;EiDnON;IpD6BE,uBC8BsB;EHksJxB;AACF;AK3hJQ;EiDnON;IpD4JM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFunJhB;AACF;AKliJQ;EiDnON;IpDuJM,eAZQ;IAaR,iBAXU;EF6nJhB;AACF;AKxiJQ;EiDnON;IpD2CE,cMIsB;ERguJxB;AACF;AK7iJQ;EiDnON;I5C8FQ,mBAAA;EVsrJR;AACF;;AsD3wJE;EpDsDA,gBAAA;AFytJF;;AsD3wJE;;EAEE,yBAAA;EACA,gCAAA;EACA,gBAAA;EACA,mBAAA;AtD8wJJ;;AsDrwJE;EpDdA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAwKY,+BAAA;EAlIZ,gBAAA;AFovJF;AKvkJQ;EiDvMN;IpDCE,uBC8BsB;EHmvJxB;AACF;AErnJM;EoD9JJ;IpDgKc,qCAAA;IACR,kCAAA;EFwnJN;AACF;;AsDtxJE;;EAEE,iBAAA;AtDyxJJ;;AsDtxJE;;EAEE,gBAAA;AtDyxJJ;;AsDtxJE;EpDsBA,gBAAA;EoDnBE,sBAAA;EACA,gBAAA;AtDwxJJ;;AsDnxJE;EpDrCA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,oBAPY;EoDxFd,mBAAA;AtD4xJJ;AK9mJQ;EiDhLN;IpDtBE,uBC8BsB;EH0xJxB;AACF;AKnnJQ;EiDhLN;IpDyGM,eAjBQ;IAmBN,eAlBU;IAoBZ,yBAnBU;EF+sJhB;AACF;AK1nJQ;EiDhLN;IpDoGM,eAZQ;IAaR,iBAXU;EFqtJhB;AACF;;AsD3yJE;EpD1CA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,iBANY;EAQd,yBAPY;EoDnFd,mBAAA;AtDozJJ;AK3oJQ;EiD3KN;IpD3BE,uBC8BsB;EHuzJxB;AACF;AKhpJQ;EiD3KN;IpDoGM,eAjBQ;IAmBN,kBAlBU;IAoBZ,yBAnBU;EF4uJhB;AACF;AKvpJQ;EiD3KN;IpD+FM,eAZQ;IAaR,iBAXU;EFkvJhB;AACF;;AsDn0JE;EpD/CA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,mBANY;EAQd,yBAPY;EoD9Ed,mBAAA;AtD40JJ;AKxqJQ;EiDtKN;IpDhCE,uBC8BsB;EHo1JxB;AACF;AK7qJQ;EiDtKN;IpD+FM,eAjBQ;IAmBN,iBAlBU;IAoBZ,iBAnBU;EFywJhB;AACF;AKprJQ;EiDtKN;IpD0FM,eAZQ;IAaR,iBAXU;EF+wJhB;AACF;;AsD31JE;EpDpDA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;AF0xJlB;AKpsJQ;EiDjKN;IpDrCE,uBC8BsB;EHg3JxB;AACF;AKzsJQ;EiDjKN;IpD0FM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFqyJhB;AACF;AKhtJQ;EiDjKN;IpDqFM,eAZQ;IAaR,iBAXU;EF2yJhB;AACF;;AuDz7JE;EACE,kBAAA;E7CsFI,mBAAA;E6CpFJ,eAAA;AvD47JJ;AK5tJQ;EkDnON;I7C8FQ,mBAAA;EVq2JR;AACF;;AuD97JE;EFSA,6BAAA;EAEA,qBAAA;EACA,sBAAA;EAGA,oBAAA;EACA,qBAAA;EAEA,2BAAA;EACA,8BAAA;EACA,wCAAA;EACQ,gCAAA;EAER,oBAAA;EAKA,8BAAA;ArDg7JF;;AuDx8JE;ErDIA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EqDnDE,sBAAA;EAEA,qBAAA;EAEA,kBAAA;EACA,OAAA;EAEA,eAAA;EACA,gBAAA;EACA,gBAAA;EAQA,yBAAA;EACA,kBAAA;EAEA,cAAA;EACA,mBAAA;EAEA,eAAA;EACA,iBAAA;EAEA,kBAAA;EAIA,yBAAA;EAEI,qBAAA;EACI,iBAAA;AvD67JZ;AKxwJQ;EkDzNN;IrDmBE,uBC8BsB;EHo7JxB;AACF;AK7wJQ;EkDzNN;IAeI,gBAAA;EvD29JJ;AACF;;AuDp8JE;ErDnCA,+CCoBkB;EDnBlB,mCAAA;EACA,kCAAA;EAgDA,gBAAA;EAgFI,eALU;EAOR,eANY;EAQd,iBAPY;EArGhB,cMnBkB;E+C+BhB,cAAA;EACA,kBAAA;AvD68JJ;AK/xJQ;EkDlLN;IrDpBE,uBC8BsB;EH28JxB;AACF;AKpyJQ;EkDlLN;IrD2GM,eAjBQ;IAmBN,oBAlBU;IAoBZ,yBAnBU;EFg4JhB;AACF;AK3yJQ;EkDlLN;IrDsGM,eAZQ;IAaR,iBAXU;EFs4JhB;AACF;AKjzJQ;EkDlLN;IrDNE,cMIsB;ERy+JxB;AACF;;AgBjhKE;EACE,WAAA;EACA,cAAA;EACA,WAAA;AhBohKJ;;AwD/hKE;EHeA,6BAAA;EAEA,qBAAA;EACA,sBAAA;EAGA,oBAAA;EACA,qBAAA;EAEA,2BAAA;EACA,8BAAA;EACA,wCAAA;EACQ,gCAAA;EAER,oBAAA;EAKA,8BAAA;ArD2gKF;;AwDziKE;EH6CA,6BAAA;EAEA,qBAAA;EACA,sBAAA;EAGA,oBAAA;EAEA,2BAAA;EACA,8BAAA;EACA,wCAAA;EACQ,gCAAA;EAKR,8BAAA;ArDw/JF;AqDt/JE;EAEE,2BAAA;EAEA,sBAAA;EACA,uBAAA;EACA,0BAAA;EAEA,4BAAA;EACA,qBAAA;EACA,kCAAA;EACQ,0BAAA;EAER,+BAAA;ArDo/JJ;;AyD7jKE;EACE,0BAAA;AzDgkKJ;;AyD7jKE;EACE,gCAAA;AzDgkKJ;;AyD7jKE;EACE,yBAAA;AzDgkKJ;;AyD7jKE;EACE,wBAAA;AzDgkKJ;;AKj3JQ;EoD3MJ;IACE,wBAAA;EzDgkKJ;AACF;A0D9iKI;EhDyCI,oBAAA;AVwgKR;AK13JQ;EqDvLJ;IhDgDM,oBAAA;EVqgKR;AACF;;A0D9iKM;EhDmCE,wBAAA;AV+gKR;AKn4JQ;EqD/KF;IhD0CI,wBAAA;EV4gKR;AACF;;A0DvjKM;EhDmCE,0BAAA;AVwhKR;AK54JQ;EqD/KF;IhD0CI,0BAAA;EVqhKR;AACF;;A0DhkKM;EhDmCE,2BAAA;AViiKR;AKr5JQ;EqD/KF;IhD0CI,2BAAA;EV8hKR;AACF;;A0DzkKM;EhDmCE,yBAAA;AV0iKR;AK95JQ;EqD/KF;IhD0CI,yBAAA;EVuiKR;AACF;;A0D1lKI;EhDyCI,sBAAA;AVqjKR;AKv6JQ;EqDvLJ;IhDgDM,sBAAA;EVkjKR;AACF;;A0D3lKM;EhDmCE,0BAAA;AV4jKR;AKh7JQ;EqD/KF;IhD0CI,0BAAA;EVyjKR;AACF;;A0DpmKM;EhDmCE,4BAAA;AVqkKR;AKz7JQ;EqD/KF;IhD0CI,4BAAA;EVkkKR;AACF;;A0D7mKM;EhDmCE,6BAAA;AV8kKR;AKl8JQ;EqD/KF;IhD0CI,6BAAA;EV2kKR;AACF;;A0DtnKM;EhDmCE,2BAAA;AVulKR;AK38JQ;EqD/KF;IhD0CI,2BAAA;EVolKR;AACF;;A0DvoKI;EhDyCI,uBAAA;AVkmKR;AKp9JQ;EqDvLJ;IhDgDM,uBAAA;EV+lKR;AACF;;A0DxoKM;EhDmCE,2BAAA;AVymKR;AK79JQ;EqD/KF;IhD0CI,2BAAA;EVsmKR;AACF;;A0DjpKM;EhDmCE,6BAAA;AVknKR;AKt+JQ;EqD/KF;IhD0CI,6BAAA;EV+mKR;AACF;;A0D1pKM;EhDmCE,8BAAA;AV2nKR;AK/+JQ;EqD/KF;IhD0CI,8BAAA;EVwnKR;AACF;;A0DnqKM;EhDmCE,4BAAA;AVooKR;AKx/JQ;EqD/KF;IhD0CI,4BAAA;EVioKR;AACF;;A0DprKI;EhDyCI,uBAAA;AV+oKR;AKjgKQ;EqDvLJ;IhDgDM,uBAAA;EV4oKR;AACF;;A0DrrKM;EhDmCE,2BAAA;AVspKR;AK1gKQ;EqD/KF;IhD0CI,2BAAA;EVmpKR;AACF;;A0D9rKM;EhDmCE,6BAAA;AV+pKR;AKnhKQ;EqD/KF;IhD0CI,6BAAA;EV4pKR;AACF;;A0DvsKM;EhDmCE,8BAAA;AVwqKR;AK5hKQ;EqD/KF;IhD0CI,8BAAA;EVqqKR;AACF;;A0DhtKM;EhDmCE,4BAAA;AVirKR;AKriKQ;EqD/KF;IhD0CI,4BAAA;EV8qKR;AACF;;A0DjuKI;EhDyCI,uBAAA;AV4rKR;AK9iKQ;EqDvLJ;IhDgDM,uBAAA;EVyrKR;AACF;;A0DluKM;EhDmCE,2BAAA;AVmsKR;AKvjKQ;EqD/KF;IhD0CI,2BAAA;EVgsKR;AACF;;A0D3uKM;EhDmCE,6BAAA;AV4sKR;AKhkKQ;EqD/KF;IhD0CI,6BAAA;EVysKR;AACF;;A0DpvKM;EhDmCE,8BAAA;AVqtKR;AKzkKQ;EqD/KF;IhD0CI,8BAAA;EVktKR;AACF;;A0D7vKM;EhDmCE,4BAAA;AV8tKR;AKllKQ;EqD/KF;IhD0CI,4BAAA;EV2tKR;AACF;;A0D9wKI;EhDyCI,uBAAA;AVyuKR;AK3lKQ;EqDvLJ;IhDgDM,uBAAA;EVsuKR;AACF;;A0D/wKM;EhDmCE,2BAAA;AVgvKR;AKpmKQ;EqD/KF;IhD0CI,2BAAA;EV6uKR;AACF;;A0DxxKM;EhDmCE,6BAAA;AVyvKR;AK7mKQ;EqD/KF;IhD0CI,6BAAA;EVsvKR;AACF;;A0DjyKM;EhDmCE,8BAAA;AVkwKR;AKtnKQ;EqD/KF;IhD0CI,8BAAA;EV+vKR;AACF;;A0D1yKM;EhDmCE,4BAAA;AV2wKR;AK/nKQ;EqD/KF;IhD0CI,4BAAA;EVwwKR;AACF;;A0D3zKI;EhDyCI,uBAAA;AVsxKR;AKxoKQ;EqDvLJ;IhDgDM,uBAAA;EVmxKR;AACF;;A0D5zKM;EhDmCE,2BAAA;AV6xKR;AKjpKQ;EqD/KF;IhD0CI,2BAAA;EV0xKR;AACF;;A0Dr0KM;EhDmCE,6BAAA;AVsyKR;AK1pKQ;EqD/KF;IhD0CI,6BAAA;EVmyKR;AACF;;A0D90KM;EhDmCE,8BAAA;AV+yKR;AKnqKQ;EqD/KF;IhD0CI,8BAAA;EV4yKR;AACF;;A0Dv1KM;EhDmCE,4BAAA;AVwzKR;AK5qKQ;EqD/KF;IhD0CI,4BAAA;EVqzKR;AACF;;A0Dx2KI;EhDyCI,uBAAA;AVm0KR;AKrrKQ;EqDvLJ;IhDgDM,uBAAA;EVg0KR;AACF;;A0Dz2KM;EhDmCE,2BAAA;AV00KR;AK9rKQ;EqD/KF;IhD0CI,2BAAA;EVu0KR;AACF;;A0Dl3KM;EhDmCE,6BAAA;AVm1KR;AKvsKQ;EqD/KF;IhD0CI,6BAAA;EVg1KR;AACF;;A0D33KM;EhDmCE,8BAAA;AV41KR;AKhtKQ;EqD/KF;IhD0CI,8BAAA;EVy1KR;AACF;;A0Dp4KM;EhDmCE,4BAAA;AVq2KR;AKztKQ;EqD/KF;IhD0CI,4BAAA;EVk2KR;AACF;;A0Dr5KI;EhDyCI,uBAAA;AVg3KR;AKluKQ;EqDvLJ;IhDgDM,uBAAA;EV62KR;AACF;;A0Dt5KM;EhDmCE,2BAAA;AVu3KR;AK3uKQ;EqD/KF;IhD0CI,2BAAA;EVo3KR;AACF;;A0D/5KM;EhDmCE,6BAAA;AVg4KR;AKpvKQ;EqD/KF;IhD0CI,6BAAA;EV63KR;AACF;;A0Dx6KM;EhDmCE,8BAAA;AVy4KR;AK7vKQ;EqD/KF;IhD0CI,8BAAA;EVs4KR;AACF;;A0Dj7KM;EhDmCE,4BAAA;AVk5KR;AKtwKQ;EqD/KF;IhD0CI,4BAAA;EV+4KR;AACF;;A0Dl8KI;EhDyCI,uBAAA;AV65KR;AK/wKQ;EqDvLJ;IhDgDM,uBAAA;EV05KR;AACF;;A0Dn8KM;EhDmCE,2BAAA;AVo6KR;AKxxKQ;EqD/KF;IhD0CI,2BAAA;EVi6KR;AACF;;A0D58KM;EhDmCE,6BAAA;AV66KR;AKjyKQ;EqD/KF;IhD0CI,6BAAA;EV06KR;AACF;;A0Dr9KM;EhDmCE,8BAAA;AVs7KR;AK1yKQ;EqD/KF;IhD0CI,8BAAA;EVm7KR;AACF;;A0D99KM;EhDmCE,4BAAA;AV+7KR;AKnzKQ;EqD/KF;IhD0CI,4BAAA;EV47KR;AACF;;A0D/+KI;EhDyCI,qBAAA;AV08KR;AK5zKQ;EqDvLJ;IhDgDM,qBAAA;EVu8KR;AACF;;A0Dh/KM;EhDmCE,yBAAA;AVi9KR;AKr0KQ;EqD/KF;IhD0CI,yBAAA;EV88KR;AACF;;A0Dz/KM;EhDmCE,2BAAA;AV09KR;AK90KQ;EqD/KF;IhD0CI,2BAAA;EVu9KR;AACF;;A0DlgLM;EhDmCE,4BAAA;AVm+KR;AKv1KQ;EqD/KF;IhD0CI,4BAAA;EVg+KR;AACF;;A0D3gLM;EhDmCE,0BAAA;AV4+KR;AKh2KQ;EqD/KF;IhD0CI,0BAAA;EVy+KR;AACF;;A0D5hLI;EhDyCI,uBAAA;AVu/KR;AKz2KQ;EqDvLJ;IhDgDM,uBAAA;EVo/KR;AACF;;A0D7hLM;EhDmCE,2BAAA;AV8/KR;AKl3KQ;EqD/KF;IhD0CI,2BAAA;EV2/KR;AACF;;A0DtiLM;EhDmCE,6BAAA;AVugLR;AK33KQ;EqD/KF;IhD0CI,6BAAA;EVogLR;AACF;;A0D/iLM;EhDmCE,8BAAA;AVghLR;AKp4KQ;EqD/KF;IhD0CI,8BAAA;EV6gLR;AACF;;A0DxjLM;EhDmCE,4BAAA;AVyhLR;AK74KQ;EqD/KF;IhD0CI,4BAAA;EVshLR;AACF;;A0DzkLI;EhDyCI,wBAAA;AVoiLR;AKt5KQ;EqDvLJ;IhDgDM,wBAAA;EViiLR;AACF;;A0D1kLM;EhDmCE,4BAAA;AV2iLR;AK/5KQ;EqD/KF;IhD0CI,4BAAA;EVwiLR;AACF;;A0DnlLM;EhDmCE,8BAAA;AVojLR;AKx6KQ;EqD/KF;IhD0CI,8BAAA;EVijLR;AACF;;A0D5lLM;EhDmCE,+BAAA;AV6jLR;AKj7KQ;EqD/KF;IhD0CI,+BAAA;EV0jLR;AACF;;A0DrmLM;EhDmCE,6BAAA;AVskLR;AK17KQ;EqD/KF;IhD0CI,6BAAA;EVmkLR;AACF;;A0DtnLI;EhDyCI,wBAAA;AVilLR;AKn8KQ;EqDvLJ;IhDgDM,wBAAA;EV8kLR;AACF;;A0DvnLM;EhDmCE,4BAAA;AVwlLR;AK58KQ;EqD/KF;IhD0CI,4BAAA;EVqlLR;AACF;;A0DhoLM;EhDmCE,8BAAA;AVimLR;AKr9KQ;EqD/KF;IhD0CI,8BAAA;EV8lLR;AACF;;A0DzoLM;EhDmCE,+BAAA;AV0mLR;AK99KQ;EqD/KF;IhD0CI,+BAAA;EVumLR;AACF;;A0DlpLM;EhDmCE,6BAAA;AVmnLR;AKv+KQ;EqD/KF;IhD0CI,6BAAA;EVgnLR;AACF;;A0DnqLI;EhDyCI,wBAAA;AV8nLR;AKh/KQ;EqDvLJ;IhDgDM,wBAAA;EV2nLR;AACF;;A0DpqLM;EhDmCE,4BAAA;AVqoLR;AKz/KQ;EqD/KF;IhD0CI,4BAAA;EVkoLR;AACF;;A0D7qLM;EhDmCE,8BAAA;AV8oLR;AKlgLQ;EqD/KF;IhD0CI,8BAAA;EV2oLR;AACF;;A0DtrLM;EhDmCE,+BAAA;AVupLR;AK3gLQ;EqD/KF;IhD0CI,+BAAA;EVopLR;AACF;;A0D/rLM;EhDmCE,6BAAA;AVgqLR;AKphLQ;EqD/KF;IhD0CI,6BAAA;EV6pLR;AACF;;A0DhtLI;EhDyCI,wBAAA;AV2qLR;AK7hLQ;EqDvLJ;IhDgDM,wBAAA;EVwqLR;AACF;;A0DjtLM;EhDmCE,4BAAA;AVkrLR;AKtiLQ;EqD/KF;IhD0CI,4BAAA;EV+qLR;AACF;;A0D1tLM;EhDmCE,8BAAA;AV2rLR;AK/iLQ;EqD/KF;IhD0CI,8BAAA;EVwrLR;AACF;;A0DnuLM;EhDmCE,+BAAA;AVosLR;AKxjLQ;EqD/KF;IhD0CI,+BAAA;EVisLR;AACF;;A0D5uLM;EhDmCE,6BAAA;AV6sLR;AKjkLQ;EqD/KF;IhD0CI,6BAAA;EV0sLR;AACF;;A0D7vLI;EhDyCI,wBAAA;AVwtLR;AK1kLQ;EqDvLJ;IhDgDM,wBAAA;EVqtLR;AACF;;A0D9vLM;EhDmCE,4BAAA;AV+tLR;AKnlLQ;EqD/KF;IhD0CI,4BAAA;EV4tLR;AACF;;A0DvwLM;EhDmCE,8BAAA;AVwuLR;AK5lLQ;EqD/KF;IhD0CI,8BAAA;EVquLR;AACF;;A0DhxLM;EhDmCE,+BAAA;AVivLR;AKrmLQ;EqD/KF;IhD0CI,+BAAA;EV8uLR;AACF;;A0DzxLM;EhDmCE,6BAAA;AV0vLR;AK9mLQ;EqD/KF;IhD0CI,6BAAA;EVuvLR;AACF;;A0D1yLI;EhDyCI,wBAAA;AVqwLR;AKvnLQ;EqDvLJ;IhDgDM,wBAAA;EVkwLR;AACF;;A0D3yLM;EhDmCE,4BAAA;AV4wLR;AKhoLQ;EqD/KF;IhD0CI,4BAAA;EVywLR;AACF;;A0DpzLM;EhDmCE,8BAAA;AVqxLR;AKzoLQ;EqD/KF;IhD0CI,8BAAA;EVkxLR;AACF;;A0D7zLM;EhDmCE,+BAAA;AV8xLR;AKlpLQ;EqD/KF;IhD0CI,+BAAA;EV2xLR;AACF;;A0Dt0LM;EhDmCE,6BAAA;AVuyLR;AK3pLQ;EqD/KF;IhD0CI,6BAAA;EVoyLR;AACF;;A0Dv1LI;EhDyCI,wBAAA;AVkzLR;AKpqLQ;EqDvLJ;IhDgDM,wBAAA;EV+yLR;AACF;;A0Dx1LM;EhDmCE,4BAAA;AVyzLR;AK7qLQ;EqD/KF;IhD0CI,4BAAA;EVszLR;AACF;;A0Dj2LM;EhDmCE,8BAAA;AVk0LR;AKtrLQ;EqD/KF;IhD0CI,8BAAA;EV+zLR;AACF;;A0D12LM;EhDmCE,+BAAA;AV20LR;AK/rLQ;EqD/KF;IhD0CI,+BAAA;EVw0LR;AACF;;A0Dn3LM;EhDmCE,6BAAA;AVo1LR;AKxsLQ;EqD/KF;IhD0CI,6BAAA;EVi1LR;AACF;;A0Dp4LI;EhDyCI,wBAAA;AV+1LR;AKjtLQ;EqDvLJ;IhDgDM,wBAAA;EV41LR;AACF;;A0Dr4LM;EhDmCE,4BAAA;AVs2LR;AK1tLQ;EqD/KF;IhD0CI,4BAAA;EVm2LR;AACF;;A0D94LM;EhDmCE,8BAAA;AV+2LR;AKnuLQ;EqD/KF;IhD0CI,8BAAA;EV42LR;AACF;;A0Dv5LM;EhDmCE,+BAAA;AVw3LR;AK5uLQ;EqD/KF;IhD0CI,+BAAA;EVq3LR;AACF;;A0Dh6LM;EhDmCE,6BAAA;AVi4LR;AKrvLQ;EqD/KF;IhD0CI,6BAAA;EV83LR;AACF;;A2Dl9LI;EzDqIE,0BALU;EAOR,+BANY;EAQd,oCAPY;AFs1LlB;AKhwLQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,0BAlBU;IAoBZ,yBAnBU;EF41LhB;AACF;AKvwLQ;EsDxNJ;IzD4II,0BAZQ;IAaR,2BAXU;EFk2LhB;AACF;;A2Dr+LI;EzDqIE,0BALU;EAOR,0BANY;EAQd,+BAPY;AFy2LlB;AKnxLQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,0BAlBU;IAoBZ,oCAnBU;EF+2LhB;AACF;AK1xLQ;EsDxNJ;IzD4II,0BAZQ;IAaR,4BAXU;EFq3LhB;AACF;;A2Dx/LI;EzDqIE,0BALU;EAOR,4BANY;EAQd,oCAPY;AF43LlB;AKtyLQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,6BAlBU;IAoBZ,oCAnBU;EFk4LhB;AACF;AK7yLQ;EsDxNJ;IzD4II,0BAZQ;IAaR,4BAXU;EFw4LhB;AACF;;A2D3gMI;EzDqIE,0BALU;EAOR,8BANY;EAQd,oCAPY;AF+4LlB;AKzzLQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,+BAlBU;IAoBZ,oCAnBU;EFq5LhB;AACF;AKh0LQ;EsDxNJ;IzD4II,0BAZQ;IAaR,4BAXU;EF25LhB;AACF;;A2D9hMI;EzDqIE,0BALU;EAOR,8BANY;EAQd,oCAPY;AFk6LlB;AK50LQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,4BAlBU;IAoBZ,4BAnBU;EFw6LhB;AACF;AKn1LQ;EsDxNJ;IzD4II,0BAZQ;IAaR,4BAXU;EF86LhB;AACF;;A2DjjMI;EzDqIE,0BALU;EAOR,0BANY;EAQd,4BAPY;AFq7LlB;AK/1LQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,+BAlBU;IAoBZ,oCAnBU;EF27LhB;AACF;AKt2LQ;EsDxNJ;IzD4II,0BAZQ;IAaR,4BAXU;EFi8LhB;AACF;;A2DpkMI;EzDqIE,0BALU;EAOR,8BANY;EAQd,oCAPY;AFw8LlB;AKl3LQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,0BAlBU;IAoBZ,4BAnBU;EF88LhB;AACF;AKz3LQ;EsDxNJ;IzD4II,0BAZQ;IAaR,2BAXU;EFo9LhB;AACF;;A2DvlMI;EzDqIE,0BALU;EAOR,6BANY;EAQd,4BAPY;AF29LlB;AKr4LQ;EsDxNJ;IzDiJI,0BAjBQ;IAmBN,8BAlBU;IAoBZ,oCAnBU;EFi+LhB;AACF;AK54LQ;EsDxNJ;IzD4II,0BAZQ;IAaR,2BAXU;EFu+LhB;AACF;;A2DnmME;EzDoCA,2BAAA;AFmkMF;;A2DnmME;EzD0CA,2BAAA;AF6jMF;;A4DtnME;EACE,sBAAA;A5DynMJ;;A4DtnME;EACE,sBAAA;A5DynMJ;AKl6LQ;EuDxNN;IAII,qBAAA;E5D0nMJ;AACF;;A4DvnME;EACE,sBAAA;A5D0nMJ;AK36LQ;EuDhNN;IAII,wBAAA;E5D2nMJ;AACF;;A4DxnME;EACE,sBAAA;A5D2nMJ;AKp7LQ;EuDxMN;IAII,qBAAA;E5D4nMJ;AACF;;A4DznME;EACE,sBAAA;A5D4nMJ;AK77LQ;EuDhMN;IAII,wBAAA;E5D6nMJ;AACF;;A4D1nME;EACE,sBAAA;A5D6nMJ;AKt8LQ;EuDxLN;IAII,qBAAA;E5D8nMJ;AACF\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";\\n.govuk-link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n/*! Copyright (c) 2011 by Margaret Calvert & Henrik Kubel. All rights reserved. The font has been customised for exclusive use on gov.uk. This cut is not commercially available. */\\n/* stylelint-disable-line scss/comment-no-loud  */\\n@font-face {\\n  font-family: \\\"GDS Transport\\\";\\n  font-style: normal;\\n  font-weight: normal;\\n  src: url(\\\"/assets/fonts/light-94a07e06a1-v2.woff2\\\") format(\\\"woff2\\\"), url(\\\"/assets/fonts/light-f591b13f7d-v2.woff\\\") format(\\\"woff\\\");\\n  font-display: fallback;\\n}\\n@font-face {\\n  font-family: \\\"GDS Transport\\\";\\n  font-style: normal;\\n  font-weight: bold;\\n  src: url(\\\"/assets/fonts/bold-b542beb274-v2.woff2\\\") format(\\\"woff2\\\"), url(\\\"/assets/fonts/bold-affa96571d-v2.woff\\\") format(\\\"woff\\\");\\n  font-display: fallback;\\n}\\n@media print {\\n  .govuk-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-link:link {\\n  color: #1d70b8;\\n}\\n.govuk-link:visited {\\n  color: #4c2c92;\\n}\\n.govuk-link:hover {\\n  color: #003078;\\n}\\n.govuk-link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  [href^=\\\"/\\\"].govuk-link:after, [href^=\\\"http://\\\"].govuk-link:after, [href^=\\\"https://\\\"].govuk-link:after {\\n    content: \\\" (\\\" attr(href) \\\")\\\";\\n    font-size: 90%;\\n    word-wrap: break-word;\\n  }\\n}\\n\\n.govuk-link--muted:link, .govuk-link--muted:visited, .govuk-link--muted:hover, .govuk-link--muted:active {\\n  color: #505a5f;\\n}\\n.govuk-link--muted:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-link--text-colour:link, .govuk-link--text-colour:visited, .govuk-link--text-colour:hover, .govuk-link--text-colour:active, .govuk-link--text-colour:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-link--text-colour:link, .govuk-link--text-colour:visited, .govuk-link--text-colour:hover, .govuk-link--text-colour:active, .govuk-link--text-colour:focus {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-link--no-visited-state:link {\\n  color: #1d70b8;\\n}\\n.govuk-link--no-visited-state:visited {\\n  color: #1d70b8;\\n}\\n.govuk-link--no-visited-state:hover {\\n  color: #003078;\\n}\\n.govuk-link--no-visited-state:active {\\n  color: #0b0c0c;\\n}\\n.govuk-link--no-visited-state:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-list {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  padding-left: 0;\\n  list-style-type: none;\\n}\\n@media print {\\n  .govuk-list {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-list {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-list {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list {\\n    margin-bottom: 20px;\\n  }\\n}\\n.govuk-list .govuk-list {\\n  margin-top: 10px;\\n}\\n\\n.govuk-list > li {\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-list--bullet {\\n  padding-left: 20px;\\n  list-style-type: disc;\\n}\\n\\n.govuk-list--number {\\n  padding-left: 20px;\\n  list-style-type: decimal;\\n}\\n\\n.govuk-list--bullet > li,\\n.govuk-list--number > li {\\n  margin-bottom: 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list--bullet > li,\\n.govuk-list--number > li {\\n    margin-bottom: 5px;\\n  }\\n}\\n\\n.govuk-list--spaced > li {\\n  margin-bottom: 10px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-list--spaced > li {\\n    margin-bottom: 15px;\\n  }\\n}\\n\\n.govuk-template {\\n  background-color: #f3f2f1;\\n  -webkit-text-size-adjust: 100%;\\n  -moz-text-size-adjust: 100%;\\n  -ms-text-size-adjust: 100%;\\n  text-size-adjust: 100%;\\n}\\n@media screen {\\n  .govuk-template {\\n    overflow-y: scroll;\\n  }\\n}\\n\\n.govuk-template__body {\\n  margin: 0;\\n  background-color: #ffffff;\\n}\\n\\n.govuk-heading-xl {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 30px;\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-heading-xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-xl {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-heading-l {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-heading-l {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-heading-l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-heading-m {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-heading-m {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-heading-m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-heading-s {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-heading-s {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-heading-s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-heading-s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-heading-s {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-caption-xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-bottom: 5px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-xl {\\n    font-size: 27px;\\n    font-size: 1.6875rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-caption-xl {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-caption-l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: block;\\n  margin-bottom: 5px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-l {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-caption-l {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-l {\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.govuk-caption-m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-caption-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-caption-m {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-caption-m {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-body-lead, .govuk-body-l {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-body-lead, .govuk-body-l {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-lead, .govuk-body-l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-body, .govuk-body-m {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body, .govuk-body-m {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-body, .govuk-body-m {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body, .govuk-body-m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-s {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body-s {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-s {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-body-s {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-s {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-xs {\\n  color: #0b0c0c;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.25;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-body-xs {\\n    color: #000000;\\n  }\\n}\\n@media print {\\n  .govuk-body-xs {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-xs {\\n    font-size: 14px;\\n    font-size: 0.875rem;\\n    line-height: 1.4285714286;\\n  }\\n}\\n@media print {\\n  .govuk-body-xs {\\n    font-size: 12pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-xs {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-body-l + .govuk-heading-l, .govuk-body-lead + .govuk-heading-l {\\n  padding-top: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-l + .govuk-heading-l, .govuk-body-lead + .govuk-heading-l {\\n    padding-top: 10px;\\n  }\\n}\\n\\n.govuk-body-m + .govuk-heading-l, .govuk-body + .govuk-heading-l,\\n.govuk-body-s + .govuk-heading-l,\\n.govuk-list + .govuk-heading-l {\\n  padding-top: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-m + .govuk-heading-l, .govuk-body + .govuk-heading-l,\\n.govuk-body-s + .govuk-heading-l,\\n.govuk-list + .govuk-heading-l {\\n    padding-top: 20px;\\n  }\\n}\\n\\n.govuk-body-m + .govuk-heading-m, .govuk-body + .govuk-heading-m,\\n.govuk-body-s + .govuk-heading-m,\\n.govuk-list + .govuk-heading-m,\\n.govuk-body-m + .govuk-heading-s,\\n.govuk-body + .govuk-heading-s,\\n.govuk-body-s + .govuk-heading-s,\\n.govuk-list + .govuk-heading-s {\\n  padding-top: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-body-m + .govuk-heading-m, .govuk-body + .govuk-heading-m,\\n.govuk-body-s + .govuk-heading-m,\\n.govuk-list + .govuk-heading-m,\\n.govuk-body-m + .govuk-heading-s,\\n.govuk-body + .govuk-heading-s,\\n.govuk-body-s + .govuk-heading-s,\\n.govuk-list + .govuk-heading-s {\\n    padding-top: 10px;\\n  }\\n}\\n\\n.govuk-section-break {\\n  margin: 0;\\n  border: 0;\\n}\\n\\n.govuk-section-break--xl {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--xl {\\n    margin-top: 50px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--xl {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-section-break--l {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--l {\\n    margin-top: 30px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--l {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-section-break--m {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--m {\\n    margin-top: 20px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-section-break--m {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-section-break--visible {\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n\\n.govuk-button-group {\\n  margin-bottom: 5px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -ms-flex-direction: column;\\n  flex-direction: column;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group {\\n    margin-bottom: 15px;\\n  }\\n}\\n.govuk-button-group .govuk-link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.1875;\\n  display: inline-block;\\n  max-width: 100%;\\n  margin-top: 5px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-button-group .govuk-link {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group .govuk-link {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button-group .govuk-link {\\n    font-size: 14pt;\\n    line-height: 19px;\\n  }\\n}\\n.govuk-button-group .govuk-button {\\n  margin-bottom: 17px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button-group {\\n    margin-right: -15px;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n    -ms-flex-direction: row;\\n    flex-direction: row;\\n    -ms-flex-wrap: wrap;\\n    flex-wrap: wrap;\\n    -webkit-box-align: baseline;\\n    -ms-flex-align: baseline;\\n    align-items: baseline;\\n  }\\n  .govuk-button-group .govuk-button,\\n.govuk-button-group .govuk-link {\\n    margin-right: 15px;\\n  }\\n  .govuk-button-group .govuk-link {\\n    text-align: left;\\n  }\\n}\\n\\n.govuk-form-group {\\n  margin-bottom: 20px;\\n}\\n.govuk-form-group:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-form-group {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-form-group .govuk-form-group:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-form-group--error {\\n  padding-left: 15px;\\n  border-left: 5px solid #d4351c;\\n}\\n.govuk-form-group--error .govuk-form-group {\\n  padding: 0;\\n  border: 0;\\n}\\n\\n.govuk-grid-row {\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n.govuk-grid-row:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-grid-column-one-quarter {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-quarter {\\n    width: 25%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-third {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-third {\\n    width: 33.3333%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-half {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-one-half {\\n    width: 50%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-two-thirds {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-two-thirds {\\n    width: 66.6666%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-three-quarters {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-three-quarters {\\n    width: 75%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-full {\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-grid-column-full {\\n    width: 100%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-quarter-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-quarter-from-desktop {\\n    width: 25%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-third-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-third-from-desktop {\\n    width: 33.3333%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-one-half-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-one-half-from-desktop {\\n    width: 50%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-two-thirds-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-two-thirds-from-desktop {\\n    width: 66.6666%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-three-quarters-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-three-quarters-from-desktop {\\n    width: 75%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-grid-column-full-from-desktop {\\n  box-sizing: border-box;\\n  padding: 0 15px;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-grid-column-full-from-desktop {\\n    width: 100%;\\n    float: left;\\n  }\\n}\\n\\n.govuk-main-wrapper {\\n  display: block;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-main-wrapper {\\n    padding-top: 40px;\\n    padding-bottom: 40px;\\n  }\\n}\\n\\n.govuk-main-wrapper--auto-spacing:first-child,\\n.govuk-main-wrapper--l {\\n  padding-top: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-main-wrapper--auto-spacing:first-child,\\n.govuk-main-wrapper--l {\\n    padding-top: 50px;\\n  }\\n}\\n\\n.govuk-width-container {\\n  max-width: 960px;\\n  margin-right: 15px;\\n  margin-left: 15px;\\n}\\n@supports (margin: max(calc(0px))) {\\n  .govuk-width-container {\\n    margin-right: max(15px, calc(15px + env(safe-area-inset-right)));\\n    margin-left: max(15px, calc(15px + env(safe-area-inset-left)));\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-width-container {\\n    margin-right: 30px;\\n    margin-left: 30px;\\n  }\\n  @supports (margin: max(calc(0px))) {\\n    .govuk-width-container {\\n      margin-right: max(30px, calc(15px + env(safe-area-inset-right)));\\n      margin-left: max(30px, calc(15px + env(safe-area-inset-left)));\\n    }\\n  }\\n}\\n@media (min-width: 1020px) {\\n  .govuk-width-container {\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n  @supports (margin: max(calc(0px))) {\\n    .govuk-width-container {\\n      margin-right: auto;\\n      margin-left: auto;\\n    }\\n  }\\n}\\n\\n.govuk-accordion {\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-accordion__section {\\n  padding-top: 15px;\\n}\\n\\n.govuk-accordion__section-header {\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n\\n.govuk-accordion__section-heading {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n@media print {\\n  .govuk-accordion__section-heading {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion__section-heading {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-accordion__section-heading {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-accordion__section-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding-top: 15px;\\n}\\n@media print {\\n  .govuk-accordion__section-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-accordion__section-button {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-accordion__section-button {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-accordion__section-summary {\\n  margin-top: 10px;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-accordion__section-content > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.js-enabled .govuk-accordion {\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n.js-enabled .govuk-accordion__section {\\n  padding-top: 0;\\n}\\n.js-enabled .govuk-accordion__section-content {\\n  display: none;\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__section-content {\\n    padding-top: 15px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__section-content {\\n    padding-bottom: 15px;\\n  }\\n}\\n.js-enabled .govuk-accordion__section--expanded .govuk-accordion__section-content {\\n  display: block;\\n}\\n.js-enabled .govuk-accordion__open-all {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  position: relative;\\n  z-index: 1;\\n  margin: 0;\\n  padding: 0;\\n  border-width: 0;\\n  color: #1d70b8;\\n  background: none;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__open-all {\\n    font-family: sans-serif;\\n  }\\n}\\n.js-enabled .govuk-accordion__open-all:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.js-enabled .govuk-accordion__open-all:link {\\n  color: #1d70b8;\\n}\\n.js-enabled .govuk-accordion__open-all:visited {\\n  color: #4c2c92;\\n}\\n.js-enabled .govuk-accordion__open-all:hover {\\n  color: #003078;\\n}\\n.js-enabled .govuk-accordion__open-all:active {\\n  color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__open-all:focus {\\n  color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__open-all::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.js-enabled .govuk-accordion__section-header {\\n  position: relative;\\n  padding-right: 40px;\\n  border-top: 1px solid #b1b4b6;\\n  color: #1d70b8;\\n  cursor: pointer;\\n}\\n@media (hover: none) {\\n  .js-enabled .govuk-accordion__section-header:hover {\\n    border-top-color: #1d70b8;\\n    box-shadow: inset 0 3px 0 0 #1d70b8;\\n  }\\n}\\n.js-enabled .govuk-accordion__section-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  margin-left: 0;\\n  padding: 0;\\n  border-width: 0;\\n  color: inherit;\\n  background: none;\\n  text-align: left;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .js-enabled .govuk-accordion__section-button {\\n    font-family: sans-serif;\\n  }\\n}\\n.js-enabled .govuk-accordion__section-button:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.js-enabled .govuk-accordion__section-button::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.js-enabled .govuk-accordion__section-button:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n.js-enabled .govuk-accordion__section-button:hover:not(:focus) {\\n  text-decoration: underline;\\n}\\n@media (hover: none) {\\n  .js-enabled .govuk-accordion__section-button:hover {\\n    text-decoration: none;\\n  }\\n}\\n.js-enabled .govuk-accordion__controls {\\n  text-align: right;\\n}\\n.js-enabled .govuk-accordion__icon {\\n  position: absolute;\\n  top: 50%;\\n  right: 15px;\\n  width: 16px;\\n  height: 16px;\\n  margin-top: -8px;\\n}\\n.js-enabled .govuk-accordion__icon:after,\\n.js-enabled .govuk-accordion__icon:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 25%;\\n  height: 25%;\\n  margin: auto;\\n  border: 2px solid transparent;\\n  background-color: #0b0c0c;\\n}\\n.js-enabled .govuk-accordion__icon:before {\\n  width: 100%;\\n}\\n.js-enabled .govuk-accordion__icon:after {\\n  height: 100%;\\n}\\n.js-enabled .govuk-accordion__section--expanded .govuk-accordion__icon:after {\\n  content: \\\" \\\";\\n  display: none;\\n}\\n\\n.govuk-back-link {\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  display: inline-block;\\n  position: relative;\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  padding-left: 14px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-back-link {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-back-link {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-back-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-back-link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-back-link:link, .govuk-back-link:visited, .govuk-back-link:hover, .govuk-back-link:active, .govuk-back-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-back-link:link, .govuk-back-link:visited, .govuk-back-link:hover, .govuk-back-link:active, .govuk-back-link:focus {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-back-link[href] {\\n  text-decoration: underline;\\n}\\n.govuk-back-link[href]:focus {\\n  text-decoration: none;\\n}\\n.govuk-back-link[href]:focus:before {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-back-link:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 3px;\\n  width: 7px;\\n  height: 7px;\\n  margin: auto 0;\\n  -webkit-transform: rotate(225deg);\\n  -ms-transform: rotate(225deg);\\n  transform: rotate(225deg);\\n  border: solid;\\n  border-width: 1px 1px 0 0;\\n  border-color: #505a5f;\\n}\\n\\n.govuk-back-link:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: -14px;\\n  right: 0;\\n  bottom: -14px;\\n  left: 0;\\n}\\n\\n.govuk-breadcrumbs {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  color: #0b0c0c;\\n  margin-top: 15px;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-breadcrumbs {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-breadcrumbs {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-breadcrumbs__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none;\\n}\\n.govuk-breadcrumbs__list:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-breadcrumbs__list-item {\\n  display: inline-block;\\n  position: relative;\\n  margin-bottom: 5px;\\n  margin-left: 10px;\\n  padding-left: 15.655px;\\n  float: left;\\n}\\n.govuk-breadcrumbs__list-item:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: -3.31px;\\n  width: 7px;\\n  height: 7px;\\n  margin: auto 0;\\n  -webkit-transform: rotate(45deg);\\n  -ms-transform: rotate(45deg);\\n  transform: rotate(45deg);\\n  border: solid;\\n  border-width: 1px 1px 0 0;\\n  border-color: #505a5f;\\n}\\n.govuk-breadcrumbs__list-item:first-child {\\n  margin-left: 0;\\n  padding-left: 0;\\n}\\n.govuk-breadcrumbs__list-item:first-child:before {\\n  content: none;\\n  display: none;\\n}\\n\\n.govuk-breadcrumbs__link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-breadcrumbs__link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-breadcrumbs__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-breadcrumbs__link:link, .govuk-breadcrumbs__link:visited, .govuk-breadcrumbs__link:hover, .govuk-breadcrumbs__link:active, .govuk-breadcrumbs__link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-breadcrumbs__link:link, .govuk-breadcrumbs__link:visited, .govuk-breadcrumbs__link:hover, .govuk-breadcrumbs__link:active, .govuk-breadcrumbs__link:focus {\\n    color: #000000;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item {\\n    display: none;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:first-child, .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:last-child {\\n    display: inline-block;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list-item:before {\\n    top: 6px;\\n    margin: 0;\\n  }\\n  .govuk-breadcrumbs--collapse-on-mobile .govuk-breadcrumbs__list {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n  }\\n}\\n\\n.govuk-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.1875;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n  margin-top: 0;\\n  margin-right: 0;\\n  margin-left: 0;\\n  margin-bottom: 22px;\\n  padding: 8px 10px 7px;\\n  border: 2px solid transparent;\\n  border-radius: 0;\\n  color: #ffffff;\\n  background-color: #00703c;\\n  box-shadow: 0 2px 0 #002d18;\\n  text-align: center;\\n  vertical-align: top;\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .govuk-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button {\\n    font-size: 14pt;\\n    line-height: 19px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    margin-bottom: 32px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button {\\n    width: auto;\\n  }\\n}\\n.govuk-button:link, .govuk-button:visited, .govuk-button:active, .govuk-button:hover {\\n  color: #ffffff;\\n  text-decoration: none;\\n}\\n.govuk-button::-moz-focus-inner {\\n  padding: 0;\\n  border: 0;\\n}\\n.govuk-button:hover {\\n  background-color: #005a30;\\n}\\n.govuk-button:active {\\n  top: 2px;\\n}\\n.govuk-button:focus {\\n  border-color: #ffdd00;\\n  outline: 3px solid transparent;\\n  box-shadow: inset 0 0 0 1px #ffdd00;\\n}\\n.govuk-button:focus:not(:active):not(:hover) {\\n  border-color: #ffdd00;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 2px 0 #0b0c0c;\\n}\\n.govuk-button:before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: -2px;\\n  right: -2px;\\n  bottom: -4px;\\n  left: -2px;\\n  background: transparent;\\n}\\n.govuk-button:active:before {\\n  top: -4px;\\n}\\n\\n.govuk-button--disabled,\\n.govuk-button[disabled=disabled],\\n.govuk-button[disabled] {\\n  opacity: 0.5;\\n}\\n.govuk-button--disabled:hover,\\n.govuk-button[disabled=disabled]:hover,\\n.govuk-button[disabled]:hover {\\n  background-color: #00703c;\\n  cursor: default;\\n}\\n.govuk-button--disabled:focus,\\n.govuk-button[disabled=disabled]:focus,\\n.govuk-button[disabled]:focus {\\n  outline: none;\\n}\\n.govuk-button--disabled:active,\\n.govuk-button[disabled=disabled]:active,\\n.govuk-button[disabled]:active {\\n  top: 0;\\n  box-shadow: 0 2px 0 #002d18;\\n}\\n\\n.govuk-button--secondary {\\n  background-color: #f3f2f1;\\n  box-shadow: 0 2px 0 #929191;\\n}\\n.govuk-button--secondary, .govuk-button--secondary:link, .govuk-button--secondary:visited, .govuk-button--secondary:active, .govuk-button--secondary:hover {\\n  color: #0b0c0c;\\n}\\n.govuk-button--secondary:hover {\\n  background-color: #dbdad9;\\n}\\n.govuk-button--secondary:hover[disabled] {\\n  background-color: #f3f2f1;\\n}\\n\\n.govuk-button--warning {\\n  background-color: #d4351c;\\n  box-shadow: 0 2px 0 #55150b;\\n}\\n.govuk-button--warning, .govuk-button--warning:link, .govuk-button--warning:visited, .govuk-button--warning:active, .govuk-button--warning:hover {\\n  color: #ffffff;\\n}\\n.govuk-button--warning:hover {\\n  background-color: #aa2a16;\\n}\\n.govuk-button--warning:hover[disabled] {\\n  background-color: #d4351c;\\n}\\n\\n.govuk-button--start {\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1;\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  min-height: auto;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-button--start {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-button--start {\\n    font-size: 18pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-button__start-icon {\\n  margin-left: 5px;\\n  vertical-align: middle;\\n  -ms-flex-negative: 0;\\n  flex-shrink: 0;\\n  -ms-flex-item-align: center;\\n  align-self: center;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-button__start-icon {\\n    margin-left: 10px;\\n  }\\n}\\n\\n.govuk-error-message {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-bottom: 15px;\\n  clear: both;\\n  color: #d4351c;\\n}\\n@media print {\\n  .govuk-error-message {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-message {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-error-message {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset {\\n  min-width: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n}\\n.govuk-fieldset:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n@supports not (caret-color: auto) {\\n  .govuk-fieldset,\\nx:-moz-any-link {\\n    display: table-cell;\\n  }\\n}\\n.govuk-fieldset__legend {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  box-sizing: border-box;\\n  display: table;\\n  max-width: 100%;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  white-space: normal;\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-fieldset__legend--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__legend--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-fieldset__legend--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-fieldset__legend--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__legend--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-fieldset__legend--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-fieldset__legend--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-fieldset__legend--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-fieldset__heading {\\n  margin: 0;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.govuk-hint {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  margin-bottom: 15px;\\n  color: #505a5f;\\n}\\n@media print {\\n  .govuk-hint {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-hint {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-hint {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-fieldset__legend + .govuk-hint {\\n  margin-top: -5px;\\n}\\n\\n.govuk-label {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n@media print {\\n  .govuk-label {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-label {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-label {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-label--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-label--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-label--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-label--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-label--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-label--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-label--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-label--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-label--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-label--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-label--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-label-wrapper {\\n  margin: 0;\\n}\\n\\n.govuk-checkboxes__item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  position: relative;\\n  min-height: 40px;\\n  margin-bottom: 10px;\\n  padding-left: 40px;\\n  clear: left;\\n}\\n@media print {\\n  .govuk-checkboxes__item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes__item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-checkboxes__item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-checkboxes__item:last-child,\\n.govuk-checkboxes__item:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-checkboxes__input {\\n  cursor: pointer;\\n  position: absolute;\\n  z-index: 1;\\n  top: -2px;\\n  left: -2px;\\n  width: 44px;\\n  height: 44px;\\n  margin: 0;\\n  opacity: 0;\\n}\\n\\n.govuk-checkboxes__label {\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding: 8px 15px 5px;\\n  cursor: pointer;\\n  -ms-touch-action: manipulation;\\n  touch-action: manipulation;\\n}\\n\\n.govuk-checkboxes__label:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border: 2px solid currentColor;\\n  background: transparent;\\n}\\n\\n.govuk-checkboxes__label:after {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 11px;\\n  left: 9px;\\n  width: 23px;\\n  height: 12px;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  border: solid;\\n  border-width: 0 0 5px 5px;\\n  border-top-color: transparent;\\n  opacity: 0;\\n  background: transparent;\\n}\\n\\n.govuk-checkboxes__hint {\\n  display: block;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n}\\n\\n.govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n  border-width: 4px;\\n  box-shadow: 0 0 0 3px #ffdd00;\\n}\\n\\n.govuk-checkboxes__input:checked + .govuk-checkboxes__label:after {\\n  opacity: 1;\\n}\\n\\n.govuk-checkboxes__input:disabled,\\n.govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n  cursor: default;\\n}\\n\\n.govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n  opacity: 0.5;\\n}\\n\\n.govuk-checkboxes__conditional {\\n  margin-bottom: 15px;\\n  margin-left: 18px;\\n  padding-left: 33px;\\n  border-left: 4px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes__conditional {\\n    margin-bottom: 20px;\\n  }\\n}\\n.js-enabled .govuk-checkboxes__conditional--hidden {\\n  display: none;\\n}\\n.govuk-checkboxes__conditional > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-checkboxes--small .govuk-checkboxes__item {\\n  min-height: 0;\\n  margin-bottom: 0;\\n  padding-left: 34px;\\n  float: left;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__input {\\n  left: -10px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label {\\n  margin-top: -2px;\\n  padding: 13px 15px 13px 1px;\\n  float: left;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-checkboxes--small .govuk-checkboxes__label {\\n    padding: 11px 15px 10px 1px;\\n  }\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label:before {\\n  top: 8px;\\n  width: 24px;\\n  height: 24px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__label:after {\\n  top: 15px;\\n  left: 6px;\\n  width: 12px;\\n  height: 6.5px;\\n  border-width: 0 0 3px 3px;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__hint {\\n  padding: 0;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__conditional {\\n  margin-left: 10px;\\n  padding-left: 20px;\\n  clear: both;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n  box-shadow: 0 0 0 10px #b1b4b6;\\n}\\n.govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n  box-shadow: 0 0 0 3px #ffdd00, 0 0 0 10px #b1b4b6;\\n}\\n@media (hover: none), (pointer: coarse) {\\n  .govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n    box-shadow: initial;\\n  }\\n  .govuk-checkboxes--small .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n    box-shadow: 0 0 0 3px #ffdd00;\\n  }\\n}\\n\\n.govuk-textarea {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  display: block;\\n  width: 100%;\\n  min-height: 40px;\\n  margin-bottom: 20px;\\n  padding: 5px;\\n  resize: vertical;\\n  border: 2px solid #0b0c0c;\\n  border-radius: 0;\\n  -webkit-appearance: none;\\n}\\n@media print {\\n  .govuk-textarea {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-textarea {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-textarea {\\n    font-size: 14pt;\\n    line-height: 1.25;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-textarea {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-textarea:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-textarea--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-textarea--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-character-count {\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-character-count {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-character-count .govuk-form-group,\\n.govuk-character-count .govuk-textarea {\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-character-count__message {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-feature-settings: \\\"tnum\\\" 1;\\n  font-feature-settings: \\\"tnum\\\" 1;\\n  font-weight: 400;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n@media print {\\n  .govuk-character-count__message {\\n    font-family: sans-serif;\\n  }\\n}\\n@supports (font-variant-numeric: tabular-nums) {\\n  .govuk-character-count__message {\\n    -webkit-font-feature-settings: normal;\\n    font-feature-settings: normal;\\n    font-variant-numeric: tabular-nums;\\n  }\\n}\\n\\n.govuk-character-count__message--disabled {\\n  visibility: hidden;\\n}\\n\\n.govuk-cookie-banner {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  padding-top: 20px;\\n  border-bottom: 10px solid transparent;\\n  background-color: #f3f2f1;\\n}\\n@media print {\\n  .govuk-cookie-banner {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-cookie-banner {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-cookie-banner {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-cookie-banner[hidden] {\\n  display: none;\\n}\\n\\n.govuk-cookie-banner__message {\\n  margin-bottom: -10px;\\n}\\n.govuk-cookie-banner__message[hidden] {\\n  display: none;\\n}\\n.govuk-cookie-banner__message:focus {\\n  outline: none;\\n}\\n\\n.govuk-summary-list {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin: 0;\\n  margin-bottom: 20px;\\n}\\n@media print {\\n  .govuk-summary-list {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-summary-list {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-summary-list {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    display: table;\\n    width: 100%;\\n    table-layout: fixed;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__row {\\n    margin-bottom: 15px;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__row {\\n    display: table-row;\\n  }\\n}\\n\\n.govuk-summary-list__key,\\n.govuk-summary-list__value,\\n.govuk-summary-list__actions {\\n  margin: 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__key,\\n.govuk-summary-list__value,\\n.govuk-summary-list__actions {\\n    display: table-cell;\\n    padding-top: 10px;\\n    padding-right: 20px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n}\\n\\n.govuk-summary-list__actions {\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__actions {\\n    width: 20%;\\n    padding-right: 0;\\n    text-align: right;\\n  }\\n}\\n\\n.govuk-summary-list__key,\\n.govuk-summary-list__value {\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n}\\n\\n.govuk-summary-list__key {\\n  margin-bottom: 5px;\\n  font-weight: 700;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__key {\\n    width: 30%;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__value {\\n    margin-bottom: 15px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__value {\\n    width: 50%;\\n  }\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__value:last-child {\\n    width: 70%;\\n  }\\n}\\n\\n.govuk-summary-list__value > p {\\n  margin-bottom: 10px;\\n}\\n\\n.govuk-summary-list__value > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-summary-list__actions-list {\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.govuk-summary-list__actions-list-item {\\n  display: inline;\\n  margin-right: 10px;\\n  padding-right: 10px;\\n}\\n\\n.govuk-summary-list__actions-list-item:not(:last-child) {\\n  border-right: 1px solid #b1b4b6;\\n}\\n\\n.govuk-summary-list__actions-list-item:last-child {\\n  margin-right: 0;\\n  padding-right: 0;\\n  border: 0;\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list--no-border .govuk-summary-list__row {\\n    border: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list--no-border .govuk-summary-list__key,\\n.govuk-summary-list--no-border .govuk-summary-list__value,\\n.govuk-summary-list--no-border .govuk-summary-list__actions {\\n    padding-bottom: 11px;\\n    border: 0;\\n  }\\n}\\n\\n@media (max-width: 40.0525em) {\\n  .govuk-summary-list__row--no-border {\\n    border: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-summary-list__row--no-border .govuk-summary-list__key,\\n.govuk-summary-list__row--no-border .govuk-summary-list__value,\\n.govuk-summary-list__row--no-border .govuk-summary-list__actions {\\n    padding-bottom: 11px;\\n    border: 0;\\n  }\\n}\\n\\n.govuk-input {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 40px;\\n  height: 2.5rem;\\n  margin-top: 0;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n  border-radius: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n}\\n@media print {\\n  .govuk-input {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-input {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-input {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-input:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-input::-webkit-outer-spin-button,\\n.govuk-input::-webkit-inner-spin-button {\\n  margin: 0;\\n  -webkit-appearance: none;\\n}\\n\\n.govuk-input[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\n.govuk-input--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-input--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-input--width-30 {\\n  max-width: 59ex;\\n}\\n\\n.govuk-input--width-20 {\\n  max-width: 41ex;\\n}\\n\\n.govuk-input--width-10 {\\n  max-width: 23ex;\\n}\\n\\n.govuk-input--width-5 {\\n  max-width: 10.8ex;\\n}\\n\\n.govuk-input--width-4 {\\n  max-width: 9ex;\\n}\\n\\n.govuk-input--width-3 {\\n  max-width: 7.2ex;\\n}\\n\\n.govuk-input--width-2 {\\n  max-width: 5.4ex;\\n}\\n\\n.govuk-input__wrapper {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n.govuk-input__wrapper .govuk-input {\\n  -webkit-box-flex: 0;\\n  -ms-flex: 0 1 auto;\\n  flex: 0 1 auto;\\n}\\n.govuk-input__wrapper .govuk-input:focus {\\n  z-index: 1;\\n}\\n@media (max-width: 19.99em) {\\n  .govuk-input__wrapper {\\n    display: block;\\n  }\\n  .govuk-input__wrapper .govuk-input {\\n    max-width: 100%;\\n  }\\n}\\n\\n.govuk-input__prefix,\\n.govuk-input__suffix {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  min-width: 40px;\\n  min-width: 2.5rem;\\n  height: 40px;\\n  height: 2.5rem;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n  background-color: #f3f2f1;\\n  text-align: center;\\n  white-space: nowrap;\\n  cursor: default;\\n  -webkit-box-flex: 0;\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n}\\n@media print {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    line-height: 1.6;\\n  }\\n}\\n@media (max-width: 19.99em) {\\n  .govuk-input__prefix,\\n.govuk-input__suffix {\\n    display: block;\\n    height: 100%;\\n    white-space: normal;\\n  }\\n}\\n\\n@media (max-width: 19.99em) {\\n  .govuk-input__prefix {\\n    border-bottom: 0;\\n  }\\n}\\n@media (min-width: 20em) {\\n  .govuk-input__prefix {\\n    border-right: 0;\\n  }\\n}\\n\\n@media (max-width: 19.99em) {\\n  .govuk-input__suffix {\\n    border-top: 0;\\n  }\\n}\\n@media (min-width: 20em) {\\n  .govuk-input__suffix {\\n    border-left: 0;\\n  }\\n}\\n\\n.govuk-date-input {\\n  font-size: 0;\\n}\\n.govuk-date-input:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-date-input__item {\\n  display: inline-block;\\n  margin-right: 20px;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-date-input__label {\\n  display: block;\\n}\\n\\n.govuk-date-input__input {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-details {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-bottom: 20px;\\n  display: block;\\n}\\n@media print {\\n  .govuk-details {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-details {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-details {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-details {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-details {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-details__summary {\\n  display: inline-block;\\n  position: relative;\\n  margin-bottom: 5px;\\n  padding-left: 25px;\\n  color: #1d70b8;\\n  cursor: pointer;\\n}\\n.govuk-details__summary:hover {\\n  color: #003078;\\n}\\n.govuk-details__summary:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-details__summary-text {\\n  text-decoration: underline;\\n}\\n\\n.govuk-details__summary:focus .govuk-details__summary-text {\\n  text-decoration: none;\\n}\\n\\n.govuk-details__summary::-webkit-details-marker {\\n  display: none;\\n}\\n\\n.govuk-details__summary:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: -1px;\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\\n  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\\n  border-width: 7px 0 7px 12.124px;\\n  border-left-color: inherit;\\n}\\n.govuk-details[open] > .govuk-details__summary:before {\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  border-width: 12.124px 7px 0 7px;\\n  border-top-color: inherit;\\n}\\n\\n.govuk-details__text {\\n  padding: 15px;\\n  padding-left: 20px;\\n  border-left: 5px solid #b1b4b6;\\n}\\n\\n.govuk-details__text p {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n\\n.govuk-details__text > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-error-summary {\\n  color: #0b0c0c;\\n  padding: 15px;\\n  margin-bottom: 30px;\\n  border: 5px solid #d4351c;\\n}\\n@media print {\\n  .govuk-error-summary {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary {\\n    padding: 20px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary {\\n    margin-bottom: 50px;\\n  }\\n}\\n.govuk-error-summary:focus {\\n  outline: 3px solid #ffdd00;\\n}\\n\\n.govuk-error-summary__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-error-summary__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__title {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-error-summary__title {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__title {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-error-summary__body {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-error-summary__body {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__body {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-error-summary__body {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-error-summary__body p {\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-error-summary__body p {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-error-summary__list {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n\\n.govuk-error-summary__list a {\\n  font-weight: 700;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-error-summary__list a {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-error-summary__list a:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-error-summary__list a:link, .govuk-error-summary__list a:visited {\\n  color: #d4351c;\\n}\\n.govuk-error-summary__list a:hover {\\n  color: #942514;\\n}\\n.govuk-error-summary__list a:active {\\n  color: #d4351c;\\n}\\n.govuk-error-summary__list a:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-file-upload {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n@media print {\\n  .govuk-file-upload {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-file-upload {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-file-upload {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-file-upload {\\n    color: #000000;\\n  }\\n}\\n.govuk-file-upload:focus {\\n  margin-right: -5px;\\n  margin-left: -5px;\\n  padding-right: 5px;\\n  padding-left: 5px;\\n  outline: 3px solid #ffdd00;\\n  box-shadow: inset 0 0 0 4px #0b0c0c;\\n}\\n.govuk-file-upload:focus-within {\\n  margin-right: -5px;\\n  margin-left: -5px;\\n  padding-right: 5px;\\n  padding-left: 5px;\\n  outline: 3px solid #ffdd00;\\n  box-shadow: inset 0 0 0 4px #0b0c0c;\\n}\\n\\n.govuk-footer {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  padding-top: 25px;\\n  padding-bottom: 15px;\\n  border-top: 1px solid #b1b4b6;\\n  color: #0b0c0c;\\n  background: #f3f2f1;\\n}\\n@media print {\\n  .govuk-footer {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-footer {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    padding-top: 40px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer {\\n    padding-bottom: 25px;\\n  }\\n}\\n\\n.govuk-footer__link:link, .govuk-footer__link:visited, .govuk-footer__link:hover, .govuk-footer__link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-footer__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-footer__section-break {\\n  margin: 0;\\n  margin-bottom: 30px;\\n  border: 0;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__section-break {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n.govuk-footer__meta {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  -webkit-box-align: end;\\n  -ms-flex-align: end;\\n  align-items: flex-end;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.govuk-footer__meta-item {\\n  margin-right: 15px;\\n  margin-bottom: 25px;\\n  margin-left: 15px;\\n}\\n\\n.govuk-footer__meta-item--grow {\\n  -webkit-box-flex: 1;\\n  -ms-flex: 1;\\n  flex: 1;\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-footer__meta-item--grow {\\n    -ms-flex-preferred-size: 320px;\\n    flex-basis: 320px;\\n  }\\n}\\n\\n.govuk-footer__licence-logo {\\n  display: inline-block;\\n  margin-right: 10px;\\n  vertical-align: top;\\n}\\n@media (max-width: 48.0525em) {\\n  .govuk-footer__licence-logo {\\n    margin-bottom: 15px;\\n  }\\n}\\n\\n.govuk-footer__licence-description {\\n  display: inline-block;\\n}\\n\\n.govuk-footer__copyright-logo {\\n  display: inline-block;\\n  min-width: 125px;\\n  padding-top: 112px;\\n  background-image: url(\\\"/assets/images/govuk-crest.png\\\");\\n  background-repeat: no-repeat;\\n  background-position: 50% 0%;\\n  background-size: 125px 102px;\\n  text-align: center;\\n  text-decoration: none;\\n  white-space: nowrap;\\n}\\n@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\\n  .govuk-footer__copyright-logo {\\n    background-image: url(\\\"/assets/images/govuk-crest-2x.png\\\");\\n  }\\n}\\n\\n.govuk-footer__inline-list {\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  padding: 0;\\n}\\n\\n.govuk-footer__meta-custom {\\n  margin-bottom: 20px;\\n}\\n\\n.govuk-footer__inline-list-item {\\n  display: inline-block;\\n  margin-right: 15px;\\n  margin-bottom: 5px;\\n}\\n\\n.govuk-footer__heading {\\n  margin-bottom: 25px;\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__heading {\\n    margin-bottom: 40px;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-footer__heading {\\n    padding-bottom: 10px;\\n  }\\n}\\n\\n.govuk-footer__navigation {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.govuk-footer__section {\\n  display: inline-block;\\n  margin-right: 15px;\\n  margin-bottom: 30px;\\n  margin-left: 15px;\\n  vertical-align: top;\\n  -webkit-box-flex: 1;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  -ms-flex-negative: 1;\\n  flex-shrink: 1;\\n}\\n@media (max-width: 48.0525em) {\\n  .govuk-footer__section {\\n    -ms-flex-preferred-size: 200px;\\n    flex-basis: 200px;\\n  }\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-footer__section:first-child:nth-last-child(2) {\\n    -webkit-box-flex: 2;\\n    -ms-flex-positive: 2;\\n    flex-grow: 2;\\n  }\\n}\\n.govuk-footer__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  -webkit-column-gap: 30px;\\n  column-gap: 30px;\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-footer__list--columns-2 {\\n    -webkit-column-count: 2;\\n    column-count: 2;\\n  }\\n\\n  .govuk-footer__list--columns-3 {\\n    -webkit-column-count: 3;\\n    column-count: 3;\\n  }\\n}\\n.govuk-footer__list-item {\\n  margin-bottom: 15px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-footer__list-item {\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n.govuk-footer__list-item:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-header {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  border-bottom: 10px solid #ffffff;\\n  color: #ffffff;\\n  background: #0b0c0c;\\n}\\n@media print {\\n  .govuk-header {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n\\n.govuk-header__container--full-width {\\n  padding: 0 15px;\\n  border-color: #1d70b8;\\n}\\n.govuk-header__container--full-width .govuk-header__menu-button {\\n  right: 15px;\\n}\\n\\n.govuk-header__container {\\n  position: relative;\\n  margin-bottom: -10px;\\n  padding-top: 10px;\\n  border-bottom: 10px solid #1d70b8;\\n}\\n.govuk-header__container:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-header__logotype {\\n  display: inline-block;\\n  margin-right: 5px;\\n}\\n\\n.govuk-header__logotype-crown {\\n  position: relative;\\n  top: -1px;\\n  margin-right: 1px;\\n  fill: currentColor;\\n  vertical-align: top;\\n}\\n\\n.govuk-header__logotype-crown-fallback-image {\\n  width: 36px;\\n  height: 32px;\\n  border: 0;\\n  vertical-align: middle;\\n}\\n\\n.govuk-header__product-name {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1;\\n  display: inline-table;\\n  padding-right: 10px;\\n}\\n@media print {\\n  .govuk-header__product-name {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__product-name {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-header__product-name {\\n    font-size: 18pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-header__link {\\n  text-decoration: none;\\n}\\n.govuk-header__link:link, .govuk-header__link:visited {\\n  color: #ffffff;\\n}\\n.govuk-header__link:hover {\\n  text-decoration: underline;\\n}\\n.govuk-header__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-header__link--homepage {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  display: inline-block;\\n  font-size: 30px;\\n  line-height: 1;\\n}\\n@media print {\\n  .govuk-header__link--homepage {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-header__link--homepage:link, .govuk-header__link--homepage:visited {\\n  text-decoration: none;\\n}\\n.govuk-header__link--homepage:hover, .govuk-header__link--homepage:active {\\n  margin-bottom: -1px;\\n  border-bottom: 1px solid;\\n}\\n.govuk-header__link--homepage:focus {\\n  margin-bottom: 0;\\n  border-bottom: 0;\\n}\\n\\n.govuk-header__link--service-name {\\n  display: inline-block;\\n  margin-bottom: 10px;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n}\\n@media print {\\n  .govuk-header__link--service-name {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__link--service-name {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__link--service-name {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-header__logo,\\n.govuk-header__content {\\n  box-sizing: border-box;\\n}\\n\\n.govuk-header__logo {\\n  margin-bottom: 10px;\\n  padding-right: 50px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__logo {\\n    margin-bottom: 10px;\\n  }\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-header__logo {\\n    width: 33.33%;\\n    padding-right: 15px;\\n    float: left;\\n    vertical-align: top;\\n  }\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-header__content {\\n    width: 66.66%;\\n    padding-left: 15px;\\n    float: left;\\n  }\\n}\\n\\n.govuk-header__menu-button {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  display: none;\\n  position: absolute;\\n  top: 20px;\\n  right: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  color: #ffffff;\\n  background: none;\\n}\\n@media print {\\n  .govuk-header__menu-button {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__menu-button {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__menu-button {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n.govuk-header__menu-button:hover {\\n  text-decoration: underline;\\n}\\n.govuk-header__menu-button:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-header__menu-button:after {\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n  border-width: 8.66px 5px 0 5px;\\n  border-top-color: inherit;\\n  content: \\\"\\\";\\n  margin-left: 5px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__menu-button {\\n    top: 15px;\\n  }\\n}\\n\\n.govuk-header__menu-button--open:after {\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\n  border-width: 0 5px 8.66px 5px;\\n  border-bottom-color: inherit;\\n}\\n\\n.govuk-header__navigation {\\n  margin-bottom: 10px;\\n  display: block;\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__navigation {\\n    margin-bottom: 10px;\\n  }\\n}\\n\\n.js-enabled .govuk-header__menu-button {\\n  display: block;\\n}\\n@media (min-width: 48.0625em) {\\n  .js-enabled .govuk-header__menu-button {\\n    display: none;\\n  }\\n}\\n.js-enabled .govuk-header__navigation {\\n  display: none;\\n}\\n@media (min-width: 48.0625em) {\\n  .js-enabled .govuk-header__navigation {\\n    display: block;\\n  }\\n}\\n.js-enabled .govuk-header__navigation--open {\\n  display: block;\\n}\\n\\n@media (min-width: 48.0625em) {\\n  .govuk-header__navigation--end {\\n    margin: 0;\\n    padding: 5px 0;\\n    text-align: right;\\n  }\\n}\\n\\n.govuk-header__navigation--no-service-name {\\n  padding-top: 40px;\\n}\\n\\n.govuk-header__navigation-item {\\n  padding: 10px 0;\\n  border-bottom: 1px solid #2e3133;\\n}\\n@media (min-width: 48.0625em) {\\n  .govuk-header__navigation-item {\\n    display: inline-block;\\n    margin-right: 15px;\\n    padding: 5px 0;\\n    border: 0;\\n  }\\n}\\n.govuk-header__navigation-item a {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  white-space: nowrap;\\n}\\n@media print {\\n  .govuk-header__navigation-item a {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-header__navigation-item a {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-header__navigation-item a {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n\\n.govuk-header__navigation-item--active a:link, .govuk-header__navigation-item--active a:hover, .govuk-header__navigation-item--active a:visited {\\n  color: #1d8feb;\\n}\\n.govuk-header__navigation-item--active a:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-header__navigation-item:last-child {\\n  margin-right: 0;\\n}\\n\\n@media print {\\n  .govuk-header {\\n    border-bottom-width: 0;\\n    color: #0b0c0c;\\n    background: transparent;\\n  }\\n\\n  .govuk-header__logotype-crown-fallback-image {\\n    display: none;\\n  }\\n\\n  .govuk-header__link:link, .govuk-header__link:visited {\\n    color: #0b0c0c;\\n  }\\n  .govuk-header__link:after {\\n    display: none;\\n  }\\n}\\n.govuk-inset-text {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  padding: 15px;\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  clear: both;\\n  border-left: 10px solid #b1b4b6;\\n}\\n@media print {\\n  .govuk-inset-text {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-inset-text {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-inset-text {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    margin-top: 30px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-inset-text {\\n    margin-bottom: 30px;\\n  }\\n}\\n.govuk-inset-text > :first-child {\\n  margin-top: 0;\\n}\\n.govuk-inset-text > :only-child,\\n.govuk-inset-text > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-notification-banner {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-bottom: 30px;\\n  border: 5px solid #1d70b8;\\n  background-color: #1d70b8;\\n}\\n@media print {\\n  .govuk-notification-banner {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner {\\n    margin-bottom: 50px;\\n  }\\n}\\n.govuk-notification-banner:focus {\\n  outline: 3px solid #ffdd00;\\n}\\n\\n.govuk-notification-banner__header {\\n  padding: 2px 15px 5px;\\n  border-bottom: 1px solid transparent;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__header {\\n    padding: 2px 20px 5px;\\n  }\\n}\\n\\n.govuk-notification-banner__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin: 0;\\n  padding: 0;\\n  color: #ffffff;\\n}\\n@media print {\\n  .govuk-notification-banner__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__title {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner__title {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-notification-banner__content {\\n  color: #0b0c0c;\\n  padding: 15px;\\n  background-color: #ffffff;\\n}\\n@media print {\\n  .govuk-notification-banner__content {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__content {\\n    padding: 20px;\\n  }\\n}\\n.govuk-notification-banner__content > * {\\n  box-sizing: border-box;\\n  max-width: 605px;\\n}\\n.govuk-notification-banner__content > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-notification-banner__heading {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin: 0 0 15px 0;\\n  padding: 0;\\n}\\n@media print {\\n  .govuk-notification-banner__heading {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-notification-banner__heading {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-notification-banner__heading {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-notification-banner__link {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n@media print {\\n  .govuk-notification-banner__link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-notification-banner__link:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n.govuk-notification-banner__link:link {\\n  color: #1d70b8;\\n}\\n.govuk-notification-banner__link:visited {\\n  color: #1d70b8;\\n}\\n.govuk-notification-banner__link:hover {\\n  color: #003078;\\n}\\n.govuk-notification-banner__link:active {\\n  color: #0b0c0c;\\n}\\n.govuk-notification-banner__link:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-notification-banner--success {\\n  border-color: #00703c;\\n  background-color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:link, .govuk-notification-banner--success .govuk-notification-banner__link:visited {\\n  color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:hover {\\n  color: #004e2a;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:active {\\n  color: #00703c;\\n}\\n.govuk-notification-banner--success .govuk-notification-banner__link:focus {\\n  color: #0b0c0c;\\n}\\n\\n.govuk-panel {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  margin-bottom: 15px;\\n  padding: 35px;\\n  border: 5px solid transparent;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-panel {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-panel {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media (max-width: 40.0525em) {\\n  .govuk-panel {\\n    padding: 25px;\\n  }\\n}\\n\\n.govuk-panel--confirmation {\\n  color: #ffffff;\\n  background: #00703c;\\n}\\n@media print {\\n  .govuk-panel--confirmation {\\n    border-color: currentColor;\\n    color: #000000;\\n    background: none;\\n  }\\n}\\n\\n.govuk-panel__title {\\n  margin-top: 0;\\n  margin-bottom: 30px;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n}\\n@media print {\\n  .govuk-panel__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel__title {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-panel__title {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-panel__title:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-panel__body {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n}\\n@media print {\\n  .govuk-panel__body {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-panel__body {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-panel__body {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-tag {\\n  display: inline-block;\\n  outline: 2px solid transparent;\\n  outline-offset: -2px;\\n  color: #ffffff;\\n  background-color: #1d70b8;\\n  letter-spacing: 1px;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1;\\n  padding-top: 5px;\\n  padding-right: 8px;\\n  padding-bottom: 4px;\\n  padding-left: 8px;\\n}\\n@media print {\\n  .govuk-tag {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tag {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1;\\n  }\\n}\\n@media print {\\n  .govuk-tag {\\n    font-size: 14pt;\\n    line-height: 1;\\n  }\\n}\\n\\n.govuk-tag--inactive {\\n  background-color: #505a5f;\\n}\\n\\n.govuk-tag--grey {\\n  color: #383f43;\\n  background: #eeefef;\\n}\\n\\n.govuk-tag--purple {\\n  color: #3d2375;\\n  background: #dbd5e9;\\n}\\n\\n.govuk-tag--turquoise {\\n  color: #10403c;\\n  background: #bfe3e0;\\n}\\n\\n.govuk-tag--blue {\\n  color: #144e81;\\n  background: #d2e2f1;\\n}\\n\\n.govuk-tag--yellow {\\n  color: #594d00;\\n  background: #fff7bf;\\n}\\n\\n.govuk-tag--orange {\\n  color: #6e3619;\\n  background: #fcd6c3;\\n}\\n\\n.govuk-tag--red {\\n  color: #942514;\\n  background: #f6d7d2;\\n}\\n\\n.govuk-tag--pink {\\n  color: #80224d;\\n  background: #f7d7e6;\\n}\\n\\n.govuk-tag--green {\\n  color: #005a30;\\n  background: #cce2d8;\\n}\\n\\n.govuk-phase-banner {\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #b1b4b6;\\n}\\n\\n.govuk-phase-banner__content {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  color: #0b0c0c;\\n  display: table;\\n  margin: 0;\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-phase-banner__content {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@media print {\\n  .govuk-phase-banner__content {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-phase-banner__content__tag {\\n  margin-right: 10px;\\n}\\n\\n.govuk-phase-banner__text {\\n  display: table-cell;\\n  vertical-align: baseline;\\n}\\n\\n.govuk-tabs {\\n  margin-top: 5px;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs {\\n    margin-top: 5px;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-tabs__title {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  margin-bottom: 10px;\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__title {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__title {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-tabs__list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  margin-bottom: 20px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__list {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-tabs__list-item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  margin-left: 25px;\\n}\\n@media print {\\n  .govuk-tabs__list-item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__list-item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-tabs__list-item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n.govuk-tabs__list-item:before {\\n  color: #0b0c0c;\\n  content: \\\"—\\\";\\n  margin-left: -25px;\\n  padding-right: 5px;\\n}\\n@media print {\\n  .govuk-tabs__list-item:before {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-tabs__tab {\\n  display: inline-block;\\n  margin-bottom: 10px;\\n}\\n.govuk-tabs__tab:link {\\n  color: #1d70b8;\\n}\\n.govuk-tabs__tab:visited {\\n  color: #4c2c92;\\n}\\n.govuk-tabs__tab:hover {\\n  color: #003078;\\n}\\n.govuk-tabs__tab:active {\\n  color: #0b0c0c;\\n}\\n.govuk-tabs__tab:focus {\\n  color: #0b0c0c;\\n}\\n.govuk-tabs__tab:focus {\\n  outline: 3px solid transparent;\\n  color: #0b0c0c;\\n  background-color: #ffdd00;\\n  box-shadow: 0 -2px #ffdd00, 0 4px #0b0c0c;\\n  text-decoration: none;\\n}\\n\\n.govuk-tabs__panel {\\n  margin-bottom: 30px;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-tabs__panel {\\n    margin-bottom: 50px;\\n  }\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__list {\\n    margin-bottom: 0;\\n    border-bottom: 1px solid #b1b4b6;\\n  }\\n  .js-enabled .govuk-tabs__list:after {\\n    content: \\\"\\\";\\n    display: block;\\n    clear: both;\\n  }\\n  .js-enabled .govuk-tabs__title {\\n    display: none;\\n  }\\n  .js-enabled .govuk-tabs__list-item {\\n    position: relative;\\n    margin-right: 5px;\\n    margin-bottom: 0;\\n    margin-left: 0;\\n    padding: 10px 20px;\\n    float: left;\\n    background-color: #f3f2f1;\\n    text-align: center;\\n  }\\n  .js-enabled .govuk-tabs__list-item:before {\\n    content: none;\\n  }\\n  .js-enabled .govuk-tabs__list-item--selected {\\n    position: relative;\\n    margin-top: -5px;\\n    margin-bottom: -1px;\\n    padding-top: 14px;\\n    padding-right: 19px;\\n    padding-bottom: 16px;\\n    padding-left: 19px;\\n    border: 1px solid #b1b4b6;\\n    border-bottom: 0;\\n    background-color: #ffffff;\\n  }\\n  .js-enabled .govuk-tabs__list-item--selected .govuk-tabs__tab {\\n    text-decoration: none;\\n  }\\n  .js-enabled .govuk-tabs__tab {\\n    margin-bottom: 0;\\n  }\\n  .js-enabled .govuk-tabs__tab:link, .js-enabled .govuk-tabs__tab:visited, .js-enabled .govuk-tabs__tab:hover, .js-enabled .govuk-tabs__tab:active, .js-enabled .govuk-tabs__tab:focus {\\n    color: #0b0c0c;\\n  }\\n}\\n@media print and (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__tab:link, .js-enabled .govuk-tabs__tab:visited, .js-enabled .govuk-tabs__tab:hover, .js-enabled .govuk-tabs__tab:active, .js-enabled .govuk-tabs__tab:focus {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__tab:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel {\\n    margin-bottom: 0;\\n    padding: 30px 20px;\\n    border: 1px solid #b1b4b6;\\n    border-top: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) and (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel {\\n    margin-bottom: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel > :last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .js-enabled .govuk-tabs__panel--hidden {\\n    display: none;\\n  }\\n}\\n\\n.govuk-radios__item {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  display: block;\\n  position: relative;\\n  min-height: 40px;\\n  margin-bottom: 10px;\\n  padding-left: 40px;\\n  clear: left;\\n}\\n@media print {\\n  .govuk-radios__item {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__item {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-radios__item {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-radios__item:last-child,\\n.govuk-radios__item:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-radios__input {\\n  cursor: pointer;\\n  position: absolute;\\n  z-index: 1;\\n  top: -2px;\\n  left: -2px;\\n  width: 44px;\\n  height: 44px;\\n  margin: 0;\\n  opacity: 0;\\n}\\n\\n.govuk-radios__label {\\n  display: inline-block;\\n  margin-bottom: 0;\\n  padding: 8px 15px 5px;\\n  cursor: pointer;\\n  -ms-touch-action: manipulation;\\n  touch-action: manipulation;\\n}\\n\\n.govuk-radios__label:before {\\n  content: \\\"\\\";\\n  box-sizing: border-box;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border: 2px solid currentColor;\\n  border-radius: 50%;\\n  background: transparent;\\n}\\n\\n.govuk-radios__label:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 10px;\\n  left: 10px;\\n  width: 0;\\n  height: 0;\\n  border: 10px solid currentColor;\\n  border-radius: 50%;\\n  opacity: 0;\\n  background: currentColor;\\n}\\n\\n.govuk-radios__hint {\\n  display: block;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n}\\n\\n.govuk-radios__input:focus + .govuk-radios__label:before {\\n  border-width: 4px;\\n  box-shadow: 0 0 0 4px #ffdd00;\\n}\\n\\n.govuk-radios__input:checked + .govuk-radios__label:after {\\n  opacity: 1;\\n}\\n\\n.govuk-radios__input:disabled,\\n.govuk-radios__input:disabled + .govuk-radios__label {\\n  cursor: default;\\n}\\n\\n.govuk-radios__input:disabled + .govuk-radios__label {\\n  opacity: 0.5;\\n}\\n\\n@media (min-width: 40.0625em) {\\n  .govuk-radios--inline:after {\\n    content: \\\"\\\";\\n    display: block;\\n    clear: both;\\n  }\\n  .govuk-radios--inline .govuk-radios__item {\\n    margin-right: 20px;\\n    float: left;\\n    clear: none;\\n  }\\n}\\n.govuk-radios--inline.govuk-radios--conditional .govuk-radios__item {\\n  margin-right: 0;\\n  float: none;\\n}\\n\\n.govuk-radios__divider {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  width: 40px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__divider {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-radios__divider {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-radios__conditional {\\n  margin-bottom: 15px;\\n  margin-left: 18px;\\n  padding-left: 33px;\\n  border-left: 4px solid #b1b4b6;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios__conditional {\\n    margin-bottom: 20px;\\n  }\\n}\\n.js-enabled .govuk-radios__conditional--hidden {\\n  display: none;\\n}\\n.govuk-radios__conditional > :last-child {\\n  margin-bottom: 0;\\n}\\n\\n.govuk-radios--small .govuk-radios__item {\\n  min-height: 0;\\n  margin-bottom: 0;\\n  padding-left: 34px;\\n  float: left;\\n}\\n.govuk-radios--small .govuk-radios__item:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.govuk-radios--small .govuk-radios__input {\\n  left: -10px;\\n}\\n.govuk-radios--small .govuk-radios__label {\\n  margin-top: -2px;\\n  padding: 13px 15px 13px 1px;\\n  float: left;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-radios--small .govuk-radios__label {\\n    padding: 11px 15px 10px 1px;\\n  }\\n}\\n.govuk-radios--small .govuk-radios__label:before {\\n  top: 8px;\\n  width: 24px;\\n  height: 24px;\\n}\\n.govuk-radios--small .govuk-radios__label:after {\\n  top: 15px;\\n  left: 7px;\\n  border-width: 5px;\\n}\\n.govuk-radios--small .govuk-radios__hint {\\n  padding: 0;\\n  clear: both;\\n  pointer-events: none;\\n}\\n.govuk-radios--small .govuk-radios__conditional {\\n  margin-left: 10px;\\n  padding-left: 20px;\\n  clear: both;\\n}\\n.govuk-radios--small .govuk-radios__divider {\\n  width: 24px;\\n  margin-bottom: 5px;\\n}\\n.govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n  box-shadow: 0 0 0 10px #b1b4b6;\\n}\\n.govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n  box-shadow: 0 0 0 4px #ffdd00, 0 0 0 10px #b1b4b6;\\n}\\n@media (hover: none), (pointer: coarse) {\\n  .govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n    box-shadow: initial;\\n  }\\n  .govuk-radios--small .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n    box-shadow: 0 0 0 4px #ffdd00;\\n  }\\n}\\n\\n.govuk-select {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  box-sizing: border-box;\\n  max-width: 100%;\\n  height: 40px;\\n  height: 2.5rem;\\n  padding: 5px;\\n  border: 2px solid #0b0c0c;\\n}\\n@media print {\\n  .govuk-select {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-select {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-select {\\n    font-size: 14pt;\\n    line-height: 1.25;\\n  }\\n}\\n.govuk-select:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  box-shadow: inset 0 0 0 2px;\\n}\\n\\n.govuk-select option:active,\\n.govuk-select option:checked,\\n.govuk-select:focus::-ms-value {\\n  color: #ffffff;\\n  background-color: #1d70b8;\\n}\\n\\n.govuk-select--error {\\n  border: 2px solid #d4351c;\\n}\\n.govuk-select--error:focus {\\n  border-color: #0b0c0c;\\n}\\n\\n.govuk-skip-link {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  white-space: nowrap !important;\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-size: 14px;\\n  font-size: 0.875rem;\\n  line-height: 1.1428571429;\\n  display: block;\\n  padding: 10px 15px;\\n}\\n.govuk-skip-link:active, .govuk-skip-link:focus {\\n  position: static !important;\\n  width: auto !important;\\n  height: auto !important;\\n  margin: inherit !important;\\n  overflow: visible !important;\\n  clip: auto !important;\\n  -webkit-clip-path: none !important;\\n  clip-path: none !important;\\n  white-space: inherit !important;\\n}\\n@media print {\\n  .govuk-skip-link {\\n    font-family: sans-serif;\\n  }\\n}\\n.govuk-skip-link:link, .govuk-skip-link:visited, .govuk-skip-link:hover, .govuk-skip-link:active, .govuk-skip-link:focus {\\n  color: #0b0c0c;\\n}\\n@media print {\\n  .govuk-skip-link:link, .govuk-skip-link:visited, .govuk-skip-link:hover, .govuk-skip-link:active, .govuk-skip-link:focus {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-skip-link {\\n    font-size: 16px;\\n    font-size: 1rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-skip-link {\\n    font-size: 14pt;\\n    line-height: 1.2;\\n  }\\n}\\n@supports (padding: max(calc(0px))) {\\n  .govuk-skip-link {\\n    padding-right: max(15px, calc(15px + env(safe-area-inset-right)));\\n    padding-left: max(15px, calc(15px + env(safe-area-inset-left)));\\n  }\\n}\\n.govuk-skip-link:focus {\\n  outline: 3px solid #ffdd00;\\n  outline-offset: 0;\\n  background-color: #ffdd00;\\n}\\n\\n.govuk-table {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 400;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  width: 100%;\\n  margin-bottom: 20px;\\n  border-spacing: 0;\\n  border-collapse: collapse;\\n}\\n@media print {\\n  .govuk-table {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-table {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-table {\\n    color: #000000;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-table__header {\\n  font-weight: 700;\\n}\\n\\n.govuk-table__header,\\n.govuk-table__cell {\\n  padding: 10px 20px 10px 0;\\n  border-bottom: 1px solid #b1b4b6;\\n  text-align: left;\\n  vertical-align: top;\\n}\\n\\n.govuk-table__cell--numeric {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-feature-settings: \\\"tnum\\\" 1;\\n  font-feature-settings: \\\"tnum\\\" 1;\\n  font-weight: 400;\\n}\\n@media print {\\n  .govuk-table__cell--numeric {\\n    font-family: sans-serif;\\n  }\\n}\\n@supports (font-variant-numeric: tabular-nums) {\\n  .govuk-table__cell--numeric {\\n    -webkit-font-feature-settings: normal;\\n    font-feature-settings: normal;\\n    font-variant-numeric: tabular-nums;\\n  }\\n}\\n\\n.govuk-table__header--numeric,\\n.govuk-table__cell--numeric {\\n  text-align: right;\\n}\\n\\n.govuk-table__header:last-child,\\n.govuk-table__cell:last-child {\\n  padding-right: 0;\\n}\\n\\n.govuk-table__caption {\\n  font-weight: 700;\\n  display: table-caption;\\n  text-align: left;\\n}\\n\\n.govuk-table__caption--xl {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 32px;\\n  font-size: 2rem;\\n  line-height: 1.09375;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--xl {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--xl {\\n    font-size: 48px;\\n    font-size: 3rem;\\n    line-height: 1.0416666667;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--xl {\\n    font-size: 32pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-table__caption--l {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 24px;\\n  font-size: 1.5rem;\\n  line-height: 1.0416666667;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--l {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--l {\\n    font-size: 36px;\\n    font-size: 2.25rem;\\n    line-height: 1.1111111111;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--l {\\n    font-size: 24pt;\\n    line-height: 1.05;\\n  }\\n}\\n\\n.govuk-table__caption--m {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 18px;\\n  font-size: 1.125rem;\\n  line-height: 1.1111111111;\\n  margin-bottom: 15px;\\n}\\n@media print {\\n  .govuk-table__caption--m {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--m {\\n    font-size: 24px;\\n    font-size: 1.5rem;\\n    line-height: 1.25;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--m {\\n    font-size: 18pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-table__caption--s {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n}\\n@media print {\\n  .govuk-table__caption--s {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-table__caption--s {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-table__caption--s {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n\\n.govuk-warning-text {\\n  position: relative;\\n  margin-bottom: 20px;\\n  padding: 10px 0;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.govuk-warning-text__assistive {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  border: 0 !important;\\n  white-space: nowrap !important;\\n}\\n\\n.govuk-warning-text__icon {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  position: absolute;\\n  left: 0;\\n  min-width: 35px;\\n  min-height: 35px;\\n  margin-top: -7px;\\n  border: 3px solid #0b0c0c;\\n  border-radius: 50%;\\n  color: #ffffff;\\n  background: #0b0c0c;\\n  font-size: 30px;\\n  line-height: 29px;\\n  text-align: center;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n@media print {\\n  .govuk-warning-text__icon {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text__icon {\\n    margin-top: -5px;\\n  }\\n}\\n\\n.govuk-warning-text__text {\\n  font-family: \\\"GDS Transport\\\", arial, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 700;\\n  font-size: 16px;\\n  font-size: 1rem;\\n  line-height: 1.25;\\n  color: #0b0c0c;\\n  display: block;\\n  padding-left: 45px;\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    font-family: sans-serif;\\n  }\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-warning-text__text {\\n    font-size: 19px;\\n    font-size: 1.1875rem;\\n    line-height: 1.3157894737;\\n  }\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    font-size: 14pt;\\n    line-height: 1.15;\\n  }\\n}\\n@media print {\\n  .govuk-warning-text__text {\\n    color: #000000;\\n  }\\n}\\n\\n.govuk-clearfix:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n\\n.govuk-visually-hidden {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  border: 0 !important;\\n  white-space: nowrap !important;\\n}\\n\\n.govuk-visually-hidden-focusable {\\n  position: absolute !important;\\n  width: 1px !important;\\n  height: 1px !important;\\n  margin: 0 !important;\\n  overflow: hidden !important;\\n  clip: rect(0 0 0 0) !important;\\n  -webkit-clip-path: inset(50%) !important;\\n  clip-path: inset(50%) !important;\\n  white-space: nowrap !important;\\n}\\n.govuk-visually-hidden-focusable:active, .govuk-visually-hidden-focusable:focus {\\n  position: static !important;\\n  width: auto !important;\\n  height: auto !important;\\n  margin: inherit !important;\\n  overflow: visible !important;\\n  clip: auto !important;\\n  -webkit-clip-path: none !important;\\n  clip-path: none !important;\\n  white-space: inherit !important;\\n}\\n\\n.govuk-\\\\!-display-inline {\\n  display: inline !important;\\n}\\n\\n.govuk-\\\\!-display-inline-block {\\n  display: inline-block !important;\\n}\\n\\n.govuk-\\\\!-display-block {\\n  display: block !important;\\n}\\n\\n.govuk-\\\\!-display-none {\\n  display: none !important;\\n}\\n\\n@media print {\\n  .govuk-\\\\!-display-none-print {\\n    display: none !important;\\n  }\\n}\\n.govuk-\\\\!-margin-0 {\\n  margin: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-0 {\\n    margin: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-0 {\\n  margin-top: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-0 {\\n    margin-top: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-0 {\\n  margin-right: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-0 {\\n    margin-right: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-0 {\\n  margin-bottom: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-0 {\\n    margin-bottom: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-0 {\\n  margin-left: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-0 {\\n    margin-left: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-1 {\\n  margin: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-1 {\\n    margin: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-1 {\\n  margin-top: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-1 {\\n    margin-top: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-1 {\\n  margin-right: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-1 {\\n    margin-right: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-1 {\\n  margin-bottom: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-1 {\\n    margin-bottom: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-1 {\\n  margin-left: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-1 {\\n    margin-left: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-2 {\\n  margin: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-2 {\\n    margin: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-2 {\\n  margin-top: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-2 {\\n    margin-top: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-2 {\\n  margin-right: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-2 {\\n    margin-right: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-2 {\\n  margin-bottom: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-2 {\\n    margin-bottom: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-2 {\\n  margin-left: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-2 {\\n    margin-left: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-3 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-3 {\\n    margin: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-3 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-3 {\\n    margin-top: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-3 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-3 {\\n    margin-right: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-3 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-3 {\\n    margin-bottom: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-3 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-3 {\\n    margin-left: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-4 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-4 {\\n    margin: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-4 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-4 {\\n    margin-top: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-4 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-4 {\\n    margin-right: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-4 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-4 {\\n    margin-bottom: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-4 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-4 {\\n    margin-left: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-5 {\\n  margin: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-5 {\\n    margin: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-5 {\\n  margin-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-5 {\\n    margin-top: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-5 {\\n  margin-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-5 {\\n    margin-right: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-5 {\\n  margin-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-5 {\\n    margin-bottom: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-5 {\\n  margin-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-5 {\\n    margin-left: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-6 {\\n  margin: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-6 {\\n    margin: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-6 {\\n  margin-top: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-6 {\\n    margin-top: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-6 {\\n  margin-right: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-6 {\\n    margin-right: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-6 {\\n  margin-bottom: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-6 {\\n    margin-bottom: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-6 {\\n  margin-left: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-6 {\\n    margin-left: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-7 {\\n  margin: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-7 {\\n    margin: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-7 {\\n  margin-top: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-7 {\\n    margin-top: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-7 {\\n  margin-right: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-7 {\\n    margin-right: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-7 {\\n  margin-bottom: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-7 {\\n    margin-bottom: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-7 {\\n  margin-left: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-7 {\\n    margin-left: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-8 {\\n  margin: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-8 {\\n    margin: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-8 {\\n  margin-top: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-8 {\\n    margin-top: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-8 {\\n  margin-right: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-8 {\\n    margin-right: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-8 {\\n  margin-bottom: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-8 {\\n    margin-bottom: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-8 {\\n  margin-left: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-8 {\\n    margin-left: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-9 {\\n  margin: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-9 {\\n    margin: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-top-9 {\\n  margin-top: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-top-9 {\\n    margin-top: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-right-9 {\\n  margin-right: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-right-9 {\\n    margin-right: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-bottom-9 {\\n  margin-bottom: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-bottom-9 {\\n    margin-bottom: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-margin-left-9 {\\n  margin-left: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-margin-left-9 {\\n    margin-left: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-0 {\\n  padding: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-0 {\\n    padding: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-0 {\\n  padding-top: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-0 {\\n    padding-top: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-0 {\\n  padding-right: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-0 {\\n    padding-right: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-0 {\\n  padding-bottom: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-0 {\\n    padding-bottom: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-0 {\\n  padding-left: 0 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-0 {\\n    padding-left: 0 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-1 {\\n  padding: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-1 {\\n    padding: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-1 {\\n  padding-top: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-1 {\\n    padding-top: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-1 {\\n  padding-right: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-1 {\\n    padding-right: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-1 {\\n  padding-bottom: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-1 {\\n    padding-bottom: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-1 {\\n  padding-left: 5px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-1 {\\n    padding-left: 5px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-2 {\\n  padding: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-2 {\\n    padding: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-2 {\\n  padding-top: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-2 {\\n    padding-top: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-2 {\\n  padding-right: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-2 {\\n    padding-right: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-2 {\\n  padding-bottom: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-2 {\\n    padding-bottom: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-2 {\\n  padding-left: 10px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-2 {\\n    padding-left: 10px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-3 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-3 {\\n    padding: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-3 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-3 {\\n    padding-top: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-3 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-3 {\\n    padding-right: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-3 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-3 {\\n    padding-bottom: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-3 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-3 {\\n    padding-left: 15px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-4 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-4 {\\n    padding: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-4 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-4 {\\n    padding-top: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-4 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-4 {\\n    padding-right: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-4 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-4 {\\n    padding-bottom: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-4 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-4 {\\n    padding-left: 20px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-5 {\\n  padding: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-5 {\\n    padding: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-5 {\\n  padding-top: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-5 {\\n    padding-top: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-5 {\\n  padding-right: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-5 {\\n    padding-right: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-5 {\\n  padding-bottom: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-5 {\\n    padding-bottom: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-5 {\\n  padding-left: 15px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-5 {\\n    padding-left: 25px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-6 {\\n  padding: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-6 {\\n    padding: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-6 {\\n  padding-top: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-6 {\\n    padding-top: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-6 {\\n  padding-right: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-6 {\\n    padding-right: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-6 {\\n  padding-bottom: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-6 {\\n    padding-bottom: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-6 {\\n  padding-left: 20px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-6 {\\n    padding-left: 30px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-7 {\\n  padding: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-7 {\\n    padding: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-7 {\\n  padding-top: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-7 {\\n    padding-top: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-7 {\\n  padding-right: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-7 {\\n    padding-right: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-7 {\\n  padding-bottom: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-7 {\\n    padding-bottom: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-7 {\\n  padding-left: 25px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-7 {\\n    padding-left: 40px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-8 {\\n  padding: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-8 {\\n    padding: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-8 {\\n  padding-top: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-8 {\\n    padding-top: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-8 {\\n  padding-right: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-8 {\\n    padding-right: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-8 {\\n  padding-bottom: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-8 {\\n    padding-bottom: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-8 {\\n  padding-left: 30px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-8 {\\n    padding-left: 50px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-9 {\\n  padding: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-9 {\\n    padding: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-top-9 {\\n  padding-top: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-top-9 {\\n    padding-top: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-right-9 {\\n  padding-right: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-right-9 {\\n    padding-right: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-bottom-9 {\\n  padding-bottom: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-bottom-9 {\\n    padding-bottom: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-padding-left-9 {\\n  padding-left: 40px !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-padding-left-9 {\\n    padding-left: 60px !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-80 {\\n  font-size: 53px !important;\\n  font-size: 3.3125rem !important;\\n  line-height: 1.0377358491 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-80 {\\n    font-size: 80px !important;\\n    font-size: 5rem !important;\\n    line-height: 1 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-80 {\\n    font-size: 53pt !important;\\n    line-height: 1.1 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-48 {\\n  font-size: 32px !important;\\n  font-size: 2rem !important;\\n  line-height: 1.09375 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-48 {\\n    font-size: 48px !important;\\n    font-size: 3rem !important;\\n    line-height: 1.0416666667 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-48 {\\n    font-size: 32pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-36 {\\n  font-size: 24px !important;\\n  font-size: 1.5rem !important;\\n  line-height: 1.0416666667 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-36 {\\n    font-size: 36px !important;\\n    font-size: 2.25rem !important;\\n    line-height: 1.1111111111 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-36 {\\n    font-size: 24pt !important;\\n    line-height: 1.05 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-27 {\\n  font-size: 18px !important;\\n  font-size: 1.125rem !important;\\n  line-height: 1.1111111111 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-27 {\\n    font-size: 27px !important;\\n    font-size: 1.6875rem !important;\\n    line-height: 1.1111111111 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-27 {\\n    font-size: 18pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-24 {\\n  font-size: 18px !important;\\n  font-size: 1.125rem !important;\\n  line-height: 1.1111111111 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-24 {\\n    font-size: 24px !important;\\n    font-size: 1.5rem !important;\\n    line-height: 1.25 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-24 {\\n    font-size: 18pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-19 {\\n  font-size: 16px !important;\\n  font-size: 1rem !important;\\n  line-height: 1.25 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-19 {\\n    font-size: 19px !important;\\n    font-size: 1.1875rem !important;\\n    line-height: 1.3157894737 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-19 {\\n    font-size: 14pt !important;\\n    line-height: 1.15 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-16 {\\n  font-size: 14px !important;\\n  font-size: 0.875rem !important;\\n  line-height: 1.1428571429 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-16 {\\n    font-size: 16px !important;\\n    font-size: 1rem !important;\\n    line-height: 1.25 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-16 {\\n    font-size: 14pt !important;\\n    line-height: 1.2 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-size-14 {\\n  font-size: 12px !important;\\n  font-size: 0.75rem !important;\\n  line-height: 1.25 !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-font-size-14 {\\n    font-size: 14px !important;\\n    font-size: 0.875rem !important;\\n    line-height: 1.4285714286 !important;\\n  }\\n}\\n@media print {\\n  .govuk-\\\\!-font-size-14 {\\n    font-size: 12pt !important;\\n    line-height: 1.2 !important;\\n  }\\n}\\n\\n.govuk-\\\\!-font-weight-regular {\\n  font-weight: 400 !important;\\n}\\n\\n.govuk-\\\\!-font-weight-bold {\\n  font-weight: 700 !important;\\n}\\n\\n.govuk-\\\\!-width-full {\\n  width: 100% !important;\\n}\\n\\n.govuk-\\\\!-width-three-quarters {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-three-quarters {\\n    width: 75% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-two-thirds {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-two-thirds {\\n    width: 66.66% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-half {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-half {\\n    width: 50% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-third {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-third {\\n    width: 33.33% !important;\\n  }\\n}\\n\\n.govuk-\\\\!-width-one-quarter {\\n  width: 100% !important;\\n}\\n@media (min-width: 40.0625em) {\\n  .govuk-\\\\!-width-one-quarter {\\n    width: 25% !important;\\n  }\\n}\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/core/links\\\") {\\n\\n  %govuk-link {\\n    @include govuk-link-common;\\n    @include govuk-link-style-default;\\n    @include govuk-link-print-friendly;\\n  }\\n\\n  .govuk-link {\\n    @extend %govuk-link;\\n  }\\n\\n  // Variant classes should always be used in conjunction with the .govuk-link\\n  // class, so we do not need the common link styles as they will be inherited.\\n\\n  .govuk-link--muted {\\n    @include govuk-link-style-muted;\\n  }\\n\\n  .govuk-link--text-colour {\\n    @include govuk-link-style-text;\\n  }\\n\\n  .govuk-link--no-visited-state {\\n    @include govuk-link-style-no-visited-state;\\n  }\\n}\\n\",\"////\\n/// @group helpers/typography\\n////\\n\\n@import \\\"../tools/px-to-rem\\\";\\n\\n/// 'Common typography' helper\\n///\\n/// Sets the font family and associated properties, such as font smoothing. Also\\n/// overrides the font for print.\\n///\\n/// @param {List} $font-family [$govuk-font-family] Font family to use\\n/// @access public\\n\\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\\n  font-family: $font-family;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n\\n  // If the user is using the default GDS Transport font we need to include\\n  // the font-face declarations.\\n  //\\n  // We do not need to include the GDS Transport font-face declarations if\\n  // alphagov/govuk_template is being used since nta will already be included by\\n  // default.\\n  @if ($govuk-include-default-font-face) {\\n    @include _govuk-font-face-gds-transport;\\n  }\\n\\n  @include govuk-media-query($media-type: print) {\\n    font-family: $govuk-font-family-print;\\n  }\\n}\\n\\n/// Text colour helper\\n///\\n/// Sets the text colour, including a suitable override for print.\\n///\\n/// @access public\\n\\n@mixin govuk-text-colour {\\n  color: $govuk-text-colour;\\n\\n  @include govuk-media-query($media-type: print) {\\n    color: $govuk-print-text-colour;\\n  }\\n}\\n\\n/// Regular font weight helper\\n///\\n/// @param {Boolean} $important [false] - Whether to mark declarations as\\n///   `!important`. Generally Used to create override classes.\\n/// @access public\\n\\n@mixin govuk-typography-weight-regular($important: false) {\\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\\n}\\n\\n/// Bold font weight helper\\n///\\n/// @param {Boolean} $important [false] - Whether to mark declarations as\\n///   `!important`. Generally Used to create override classes.\\n/// @access public\\n\\n@mixin govuk-typography-weight-bold($important: false) {\\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\\n}\\n\\n/// Convert line-heights specified in pixels into a relative value, unless\\n/// they are already unit-less (and thus already treated as relative values)\\n/// or the units do not match the units used for the font size.\\n///\\n/// @param {Number} $line-height Line height\\n/// @param {Number} $font-size Font size\\n/// @return {Number} The line height as either a relative value or unmodified\\n///\\n/// @access private\\n\\n@function _govuk-line-height($line-height, $font-size) {\\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\\n    $line-height: $line-height / $font-size;\\n  }\\n\\n  @return $line-height;\\n}\\n\\n/// Responsive typography helper\\n///\\n/// Takes a 'font map' as an argument and uses it to create font-size and\\n/// line-height declarations for different breakpoints, and for print.\\n///\\n/// Example font map:\\n///\\n/// $my-font-map: (\\n///   null: (\\n///     font-size: 16px,\\n///     line-height: 20px\\n///   ),\\n///   tablet: (\\n///     font-size: 19px,\\n///     line-height: 25px\\n///   ),\\n///   print: (\\n///     font-size: 14pt,\\n///     line-height: 1.15\\n///   )\\n/// );\\n///\\n/// @param {Map} $font-map - Font map\\n/// @param {Number} $override-line-height [false] - Non responsive custom line\\n///   height. Omit to use the line height from the font map.\\n/// @param {Boolean} $important [false] - Whether to mark declarations as\\n///   `!important`.\\n///\\n/// @access public\\n\\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\\n\\n  @if not map-has-key($govuk-typography-scale, $size) {\\n    @error \\\"Unknown font size `#{$size}` - expected a point from the typography scale.\\\";\\n  }\\n\\n  $font-map: map-get($govuk-typography-scale, $size);\\n\\n  @each $breakpoint, $breakpoint-map in $font-map {\\n    $font-size: map-get($breakpoint-map, \\\"font-size\\\");\\n    $font-size-rem: govuk-px-to-rem($font-size);\\n\\n    $line-height: _govuk-line-height(\\n      $line-height: if(\\n        $override-line-height,\\n        $override-line-height,\\n        map-get($breakpoint-map, \\\"line-height\\\")\\n      ),\\n      $font-size: $font-size\\n    );\\n\\n    // Mark rules as !important if $important is true - this will result in\\n    // these variables becoming strings, so this needs to happen *after* they\\n    // are used in calculations\\n    $font-size: $font-size if($important, !important, null);\\n    $font-size-rem: $font-size-rem if($important, !important, null);\\n    $line-height: $line-height if($important, !important, null);\\n\\n    @if $breakpoint == null {\\n      font-size: $font-size;\\n      @if $govuk-typography-use-rem {\\n        font-size: $font-size-rem;\\n      }\\n      line-height: $line-height;\\n    } @else if $breakpoint == \\\"print\\\" {\\n      @include govuk-media-query($media-type: print) {\\n        font-size: $font-size;\\n        line-height: $line-height;\\n      }\\n    } @else {\\n      @include govuk-media-query($from: $breakpoint) {\\n        font-size: $font-size;\\n        @if $govuk-typography-use-rem {\\n          font-size: $font-size-rem;\\n        }\\n        line-height: $line-height;\\n      }\\n    }\\n  }\\n}\\n\\n/// Font helper\\n///\\n/// @param {Number} $size - Size of the font as it would appear on desktop -\\n///   uses the responsive font size map\\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\\n///\\n/// @access public\\n\\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\\n  @if $tabular {\\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\\n    @if $govuk-font-family-tabular {\\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\\n    } @else {\\n      @include govuk-typography-common;\\n      -webkit-font-feature-settings: \\\"tnum\\\" 1;\\n              font-feature-settings: \\\"tnum\\\" 1;\\n\\n      @supports (font-variant-numeric: tabular-nums) {\\n        -webkit-font-feature-settings: normal;\\n                font-feature-settings: normal;\\n        font-variant-numeric: tabular-nums;\\n      }\\n    }\\n  } @else {\\n    @include govuk-typography-common;\\n  }\\n\\n  @if $weight == regular {\\n    @include govuk-typography-weight-regular;\\n  } @else if $weight == bold {\\n    @include govuk-typography-weight-bold;\\n  }\\n\\n  @if $size {\\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\\n  }\\n}\\n\",\"@import \\\"compatibility\\\";\\n@import \\\"typography-font-families\\\";\\n\\n////\\n/// @group settings/typography\\n////\\n\\n/// Use 'legacy' fonts\\n///\\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\\n/// components from both places in a single application.\\n///\\n/// @type Boolean\\n/// @access public\\n\\n$govuk-use-legacy-font: if(\\n  (\\n    $govuk-compatibility-govukfrontendtoolkit or\\n    $govuk-compatibility-govuktemplate or\\n    $govuk-compatibility-govukelements\\n  ),\\n  true,\\n  false\\n) !default;\\n\\n// =========================================================\\n// Font families\\n// =========================================================\\n\\n/// Font families to use for all typography on screen media\\n///\\n/// @type List\\n/// @access public\\n\\n$govuk-font-family: if(\\n  $govuk-use-legacy-font,\\n  $govuk-font-family-nta,\\n  $govuk-font-family-gds-transport\\n) !default;\\n\\n/// Font families to use when displaying tabular numbers\\n///\\n/// @type List\\n/// @access public\\n\\n$govuk-font-family-tabular: if(\\n  $govuk-use-legacy-font,\\n  $govuk-font-family-nta-tabular,\\n  false\\n) !default;\\n\\n/// Font families to use for print media\\n///\\n/// We recommend that you use system fonts when printing. This will avoid issues\\n/// with some printer drivers and operating systems.\\n///\\n/// @type List\\n/// @access public\\n\\n$govuk-font-family-print: sans-serif !default;\\n\\n/// Include the default @font-face declarations\\n///\\n/// If you have set $govuk-font-family to something other than\\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\\n///\\n/// @type Boolean\\n/// @access public\\n\\n$govuk-include-default-font-face: (\\n  $govuk-font-family == $govuk-font-family-gds-transport\\n) !default;\\n\\n// =========================================================\\n// Font weights\\n// =========================================================\\n\\n/// Font weight for regular typography\\n///\\n/// @type Number\\n/// @access public\\n$govuk-font-weight-regular: 400 !default;\\n\\n/// Font weight for bold typography\\n///\\n/// @type Number\\n/// @access public\\n$govuk-font-weight-bold: 700 !default;\\n\",\"////\\n/// @group helpers\\n////\\n\\n@import \\\"../tools/exports\\\";\\n\\n/// Font Face - GDS Transport\\n///\\n/// Outputs the font-face declaration for GDS Transport at the root of the CSS document\\n/// the first time it is called.\\n///\\n/// @access private\\n\\n@mixin _govuk-font-face-gds-transport {\\n  @include govuk-not-ie8 { // In IE8, which cannot render WOFF format, we fall back to system fonts\\n    @include govuk-exports(\\\"govuk/helpers/font-faces\\\") {\\n      @at-root {\\n        /*! Copyright (c) 2011 by Margaret Calvert & Henrik Kubel. All rights reserved. The font has been customised for exclusive use on gov.uk. This cut is not commercially available. */ /* stylelint-disable-line scss/comment-no-loud  */\\n        @font-face {\\n          font-family: \\\"GDS Transport\\\";\\n          font-style: normal;\\n          font-weight: normal;\\n          src:\\n            govuk-font-url(\\\"light-94a07e06a1-v2.woff2\\\") format(\\\"woff2\\\"),\\n            govuk-font-url(\\\"light-f591b13f7d-v2.woff\\\") format(\\\"woff\\\");\\n          font-display: fallback;\\n        }\\n\\n        @font-face {\\n          font-family: \\\"GDS Transport\\\";\\n          font-style: normal;\\n          font-weight: bold;\\n          src:\\n            govuk-font-url(\\\"bold-b542beb274-v2.woff2\\\") format(\\\"woff2\\\"),\\n            govuk-font-url(\\\"bold-affa96571d-v2.woff\\\") format(\\\"woff\\\");\\n          font-display: fallback;\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"// mq() v4.0.2\\n// sass-mq/sass-mq\\n\\n@charset \\\"UTF-8\\\"; // Fixes an issue where Ruby locale is not set properly\\n                  // See https://github.com/sass-mq/sass-mq/pull/10\\n\\n/// Base font size on the `<body>` element\\n/// @type Number (unit)\\n$mq-base-font-size: 16px !default;\\n\\n/// Responsive mode\\n///\\n/// Set to `false` to enable support for browsers that do not support @media queries,\\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\\n///\\n/// You could create a stylesheet served exclusively to older browsers,\\n/// where @media queries are rasterized\\n///\\n/// @example scss\\n///  // old-ie.scss\\n///  $mq-responsive: false;\\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\\n///                   // larger breakpoints will be ignored\\n///\\n/// @type Boolean\\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\\n$mq-responsive: true !default;\\n\\n/// Breakpoint list\\n///\\n/// Name your breakpoints in a way that creates a ubiquitous language\\n/// across team members. It will improve communication between\\n/// stakeholders, designers, developers, and testers.\\n///\\n/// @type Map\\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\\n$mq-breakpoints: (\\n    mobile:  320px,\\n    tablet:  740px,\\n    desktop: 980px,\\n    wide:    1300px\\n) !default;\\n\\n/// Static breakpoint (for fixed-width layouts)\\n///\\n/// Define the breakpoint from $mq-breakpoints that should\\n/// be used as the target width for the fixed-width layout\\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\\n///\\n/// @example scss\\n///  // tablet-only.scss\\n///  //\\n///  // Ignore all styles above tablet breakpoint,\\n///  // and fix the styles (e.g. layout) at tablet width\\n///  $mq-responsive: false;\\n///  $mq-static-breakpoint: tablet;\\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\\n///                   // larger breakpoints will be ignored\\n///\\n/// @type String\\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\\n$mq-static-breakpoint: desktop !default;\\n\\n/// Show breakpoints in the top right corner\\n///\\n/// If you want to display the currently active breakpoint in the top\\n/// right corner of your site during development, add the breakpoints\\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\\n///\\n/// @type map\\n$mq-show-breakpoints: () !default;\\n\\n/// Customize the media type (e.g. `@media screen` or `@media print`)\\n/// By default sass-mq uses an \\\"all\\\" media type (`@media all and …`)\\n///\\n/// @type String\\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\\n$mq-media-type: all !default;\\n\\n/// Convert pixels to ems\\n///\\n/// @param {Number} $px - value to convert\\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\\n///\\n/// @example scss\\n///  $font-size-in-ems: mq-px2em(16px);\\n///  p { font-size: mq-px2em(16px); }\\n///\\n/// @requires $mq-base-font-size\\n/// @returns {Number}\\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\\n    @if unitless($px) {\\n        @warn \\\"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\\\";\\n        @return mq-px2em($px * 1px, $base-font-size);\\n    } @else if unit($px) == em {\\n        @return $px;\\n    }\\n    @return ($px / $base-font-size) * 1em;\\n}\\n\\n/// Get a breakpoint's width\\n///\\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\\n///\\n/// @example scss\\n///  $tablet-width: mq-get-breakpoint-width(tablet);\\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\\n///\\n/// @requires {Variable} $mq-breakpoints\\n///\\n/// @returns {Number} Value in pixels\\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\\n    @if map-has-key($breakpoints, $name) {\\n        @return map-get($breakpoints, $name);\\n    } @else {\\n        @warn \\\"Breakpoint #{$name} wasn't found in $breakpoints.\\\";\\n    }\\n}\\n\\n/// Media Query mixin\\n///\\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\\n/// @param {String | Boolean} $and (false) - Additional media query parameters\\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\\n///\\n/// @ignore Undocumented API, for advanced use only:\\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\\n///\\n/// @content styling rules, wrapped into a @media query when $responsive is true\\n///\\n/// @requires {Variable} $mq-media-type\\n/// @requires {Variable} $mq-breakpoints\\n/// @requires {Variable} $mq-static-breakpoint\\n/// @requires {function} mq-px2em\\n/// @requires {function} mq-get-breakpoint-width\\n///\\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\\n///\\n/// @example scss\\n///  .element {\\n///    @include mq($from: mobile) {\\n///      color: red;\\n///    }\\n///    @include mq($until: tablet) {\\n///      color: blue;\\n///    }\\n///    @include mq(mobile, tablet) {\\n///      color: green;\\n///    }\\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\\n///      color: teal;\\n///    }\\n///    @include mq(950px) {\\n///      color: hotpink;\\n///    }\\n///    @include mq(tablet, $media-type: screen) {\\n///      color: hotpink;\\n///    }\\n///    // Advanced use:\\n///    $my-breakpoints: (L: 900px, XL: 1200px);\\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\\n///      color: hotpink;\\n///    }\\n///  }\\n@mixin mq(\\n    $from: false,\\n    $until: false,\\n    $and: false,\\n    $media-type: $mq-media-type,\\n    $breakpoints: $mq-breakpoints,\\n    $responsive: $mq-responsive,\\n    $static-breakpoint: $mq-static-breakpoint\\n) {\\n    $min-width: 0;\\n    $max-width: 0;\\n    $media-query: '';\\n\\n    // From: this breakpoint (inclusive)\\n    @if $from {\\n        @if type-of($from) == number {\\n            $min-width: mq-px2em($from);\\n        } @else {\\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\\n        }\\n    }\\n\\n    // Until: that breakpoint (exclusive)\\n    @if $until {\\n        @if type-of($until) == number {\\n            $max-width: mq-px2em($until);\\n        } @else {\\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\\n        }\\n    }\\n\\n    // Responsive support is disabled, rasterize the output outside @media blocks\\n    // The browser will rely on the cascade itself.\\n    @if $responsive == false {\\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\\n        $target-width: mq-px2em($static-breakpoint-width);\\n\\n        // Output only rules that start at or span our target width\\n        @if (\\n            $and == false\\n            and $min-width <= $target-width\\n            and (\\n                $until == false or $max-width >= $target-width\\n            )\\n            and $media-type != 'print'\\n        ) {\\n            @content;\\n        }\\n    }\\n\\n    // Responsive support is enabled, output rules inside @media queries\\n    @else {\\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\\n\\n        // Remove unnecessary media query prefix 'all and '\\n        @if ($media-type == 'all' and $media-query != '') {\\n            $media-type: '';\\n            $media-query: str-slice(unquote($media-query), 6);\\n        }\\n\\n        @media #{$media-type + $media-query} {\\n            @content;\\n        }\\n    }\\n}\\n\\n/// Quick sort\\n///\\n/// @author Sam Richards\\n/// @access private\\n/// @param {List} $list - List to sort\\n/// @returns {List} Sorted List\\n@function _mq-quick-sort($list) {\\n    $less:  ();\\n    $equal: ();\\n    $large: ();\\n\\n    @if length($list) > 1 {\\n        $seed: nth($list, ceil(length($list) / 2));\\n\\n        @each $item in $list {\\n            @if ($item == $seed) {\\n                $equal: append($equal, $item);\\n            } @else if ($item < $seed) {\\n                $less: append($less, $item);\\n            } @else if ($item > $seed) {\\n                $large: append($large, $item);\\n            }\\n        }\\n\\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\\n    }\\n\\n    @return $list;\\n}\\n\\n/// Sort a map by values (works with numbers only)\\n///\\n/// @access private\\n/// @param {Map} $map - Map to sort\\n/// @returns {Map} Map sorted by value\\n@function _mq-map-sort-by-value($map) {\\n    $map-sorted: ();\\n    $map-keys: map-keys($map);\\n    $map-values: map-values($map);\\n    $map-values-sorted: _mq-quick-sort($map-values);\\n\\n    // Reorder key/value pairs based on key values\\n    @each $value in $map-values-sorted {\\n        $index: index($map-values, $value);\\n        $key: nth($map-keys, $index);\\n        $map-sorted: map-merge($map-sorted, ($key: $value));\\n\\n        // Unset the value in $map-values to prevent the loop\\n        // from finding the same index twice\\n        $map-values: set-nth($map-values, $index, 0);\\n    }\\n\\n    @return $map-sorted;\\n}\\n\\n/// Add a breakpoint\\n///\\n/// @param {String} $name - Name of the breakpoint\\n/// @param {Number} $width - Width of the breakpoint\\n///\\n/// @requires {Variable} $mq-breakpoints\\n///\\n/// @example scss\\n///  @include mq-add-breakpoint(tvscreen, 1920px);\\n///  @include mq(tvscreen) {}\\n@mixin mq-add-breakpoint($name, $width) {\\n    $new-breakpoint: ($name: $width);\\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\\n}\\n\\n/// Show the active breakpoint in the top right corner of the viewport\\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\\n///\\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\\n///\\n/// @requires {Variable} $mq-breakpoints\\n/// @requires {Variable} $mq-show-breakpoints\\n///\\n/// @example scss\\n///  // Show breakpoints using global settings\\n///  @include mq-show-breakpoints;\\n///\\n///  // Show breakpoints using custom settings\\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\\n    body:before {\\n        background-color: #FCF8E3;\\n        border-bottom: 1px solid #FBEED5;\\n        border-left: 1px solid #FBEED5;\\n        color: #C09853;\\n        font: small-caption;\\n        padding: 3px 6px;\\n        pointer-events: none;\\n        position: fixed;\\n        right: 0;\\n        top: 0;\\n        z-index: 100;\\n\\n        // Loop through the breakpoints that should be shown\\n        @each $show-breakpoint in $show-breakpoints {\\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\\n                content: \\\"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\\\";\\n            }\\n        }\\n    }\\n}\\n\\n@if length($mq-show-breakpoints) > 0 {\\n    @include mq-show-breakpoints;\\n}\\n\",\"////\\n/// @group helpers/links\\n////\\n\\n/// Common link mixin\\n///\\n/// Provides the typography and focus state, regardless of link style.\\n///\\n/// @access public\\n\\n@mixin govuk-link-common {\\n  @include govuk-typography-common;\\n\\n  &:focus {\\n    @include govuk-focused-text;\\n  }\\n}\\n\\n/// Default link style mixin\\n///\\n/// Provides the default unvisited, visited, hover and active states for links.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-default;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-default {\\n  &:link {\\n    color: $govuk-link-colour;\\n  }\\n\\n  &:visited {\\n    color: $govuk-link-visited-colour;\\n  }\\n\\n  &:hover {\\n    color: $govuk-link-hover-colour;\\n  }\\n\\n  &:active {\\n    color: $govuk-link-active-colour;\\n  }\\n\\n  // When focussed, the text colour needs to be darker to ensure that colour\\n  // contrast is still acceptable\\n  &:focus {\\n    color: $govuk-focus-text-colour;\\n  }\\n\\n  // alphagov/govuk_template includes a specific a:link:focus selector\\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\\n  // we need to override the text colour for that combination of selectors so\\n  // so that unvisited links styled as buttons do not end up with dark blue\\n  // text when focussed.\\n  @include govuk-compatibility(govuk_template) {\\n    &:link:focus {\\n      color: $govuk-focus-text-colour;\\n    }\\n  }\\n}\\n\\n/// Error link style mixin\\n///\\n/// Provides the error unvisited, visited, hover and active states for links.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-error;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-error {\\n  &:link,\\n  &:visited {\\n    color: $govuk-error-colour;\\n  }\\n\\n  &:hover {\\n    color: scale-color($govuk-error-colour, $lightness: -30%);\\n  }\\n\\n  &:active {\\n    color: $govuk-error-colour;\\n  }\\n\\n  // When focussed, the text colour needs to be darker to ensure that colour\\n  // contrast is still acceptable\\n  &:focus {\\n    color: $govuk-focus-text-colour;\\n  }\\n\\n  // alphagov/govuk_template includes a specific a:link:focus selector\\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\\n  // we need to override the text colour for that combination of selectors so\\n  // so that unvisited links styled as buttons do not end up with dark blue\\n  // text when focussed.\\n  @include govuk-compatibility(govuk_template) {\\n    &:link:focus {\\n      color: $govuk-focus-text-colour;\\n    }\\n  }\\n}\\n\\n/// Success link style mixin\\n///\\n/// Provides the success unvisited, visited, hover and active states for links.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-success;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-success {\\n  &:link,\\n  &:visited {\\n    color: $govuk-success-colour;\\n  }\\n\\n  &:hover {\\n    color: scale-color($govuk-success-colour, $lightness: -30%);\\n  }\\n\\n  &:active {\\n    color: $govuk-success-colour;\\n  }\\n\\n  // When focussed, the text colour needs to be darker to ensure that colour\\n  // contrast is still acceptable\\n  &:focus {\\n    color: $govuk-focus-text-colour;\\n  }\\n\\n  // alphagov/govuk_template includes a specific a:link:focus selector\\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\\n  // we need to override the text colour for that combination of selectors so\\n  // so that unvisited links styled as buttons do not end up with dark blue\\n  // text when focussed.\\n  @include govuk-compatibility(govuk_template) {\\n    &:link:focus {\\n      color: $govuk-focus-text-colour;\\n    }\\n  }\\n}\\n\\n/// Muted style link mixin\\n///\\n/// Used for secondary links on a page - the link will appear in muted colours\\n/// regardless of visited state.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-muted;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-muted {\\n  &:link,\\n  &:visited,\\n  &:hover,\\n  &:active {\\n    color: $govuk-secondary-text-colour;\\n  }\\n\\n  // When focussed, the text colour needs to be darker to ensure that colour\\n  // contrast is still acceptable\\n  &:focus {\\n    color: $govuk-focus-text-colour;\\n  }\\n\\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\\n  // to make unvisited links a slightly darker blue when focussed, so we need to\\n  // override the text colour for that combination of selectors.\\n  @include govuk-compatibility(govuk_template) {\\n    &:link:focus {\\n      @include govuk-text-colour;\\n    }\\n  }\\n}\\n\\n/// Text style link mixin\\n///\\n/// Overrides the colour of links to match the text colour. Generally used by\\n/// navigation components, such as breadcrumbs or the back link.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-text;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-text {\\n  // Override link colour to use text colour\\n  &:link,\\n  &:visited,\\n  &:hover,\\n  &:active,\\n  &:focus {\\n    @include govuk-text-colour;\\n  }\\n\\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\\n  // to make unvisited links a slightly darker blue when focussed, so we need to\\n  // override the text colour for that combination of selectors.\\n  @include govuk-compatibility(govuk_template) {\\n    &:link:focus {\\n      @include govuk-text-colour;\\n    }\\n  }\\n}\\n\\n/// No visited state link mixin\\n///\\n/// Used in cases where it is not helpful to distinguish between visited and\\n/// non-visited links.\\n///\\n/// For example, navigation links to pages with dynamic content like admin\\n/// dashboards. The content on the page is changing all the time, so the fact\\n/// that you’ve visited it before is not important.\\n///\\n/// If you use this mixin in a component you must also include the\\n/// govuk-link-common mixin in order to get the focus state.\\n///\\n/// @example scss\\n///   .govuk-component__link {\\n///     @include govuk-link-common;\\n///     @include govuk-link-style-no-visited-state;\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-link-style-no-visited-state {\\n  &:link {\\n    color: $govuk-link-colour;\\n  }\\n\\n  &:visited {\\n    color: $govuk-link-colour;\\n  }\\n\\n  &:hover {\\n    color: $govuk-link-hover-colour;\\n  }\\n\\n  &:active {\\n    color: $govuk-link-active-colour;\\n  }\\n\\n  // When focussed, the text colour needs to be darker to ensure that colour\\n  // contrast is still acceptable\\n  &:focus {\\n    color: $govuk-focus-text-colour;\\n  }\\n}\\n\\n/// Print friendly link mixin\\n///\\n/// When printing, append the the destination URL to the link text, as long\\n/// as the URL starts with either `/`, `http://` or `https://`.\\n///\\n/// @access public\\n\\n@mixin govuk-link-print-friendly {\\n  @include govuk-media-query($media-type: print) {\\n    &[href^=\\\"/\\\"],\\n    &[href^=\\\"http://\\\"],\\n    &[href^=\\\"https://\\\"] {\\n      &:after {\\n        content: \\\" (\\\" attr(href) \\\")\\\";\\n        font-size: 90%;\\n\\n        // Because the URLs may be very long, ensure that they may be broken\\n        // at arbitrary points if there are no otherwise acceptable break\\n        // points in the line\\n        word-wrap: break-word;\\n      }\\n    }\\n  }\\n}\\n\",\"////\\n/// @group helpers/accessibility\\n////\\n\\n/// Focused text\\n///\\n/// Provides an outline to clearly indicate when the target element is focused.\\n/// Used for interactive text-based elements.\\n///\\n/// @access public\\n\\n@mixin govuk-focused-text {\\n  // When colours are overridden, for example when users have a dark mode,\\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\\n  // transparent outline which will be set to a visible colour.\\n\\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\\n  // user-agent outlines\\n  @include govuk-not-ie8 {\\n    outline: $govuk-focus-width solid transparent;\\n  }\\n  color: $govuk-focus-text-colour;\\n  background-color: $govuk-focus-colour;\\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\\n  // When link is focussed, hide the default underline since the\\n  // box shadow adds the \\\"underline\\\"\\n  text-decoration: none;\\n}\\n\",\"////\\n/// @group settings/colours\\n////\\n\\n@import \\\"../helpers/colour\\\";\\n\\n// =========================================================\\n// Generic\\n// =========================================================\\n\\n/// Brand colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-brand-colour: govuk-colour(\\\"blue\\\") !default;\\n\\n/// Text colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-text-colour: govuk-colour(\\\"black\\\") !default;\\n\\n/// Canvas background colour\\n///\\n/// Used by the footer component and template to give the illusion of a long\\n/// footer.\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-canvas-background-colour: govuk-colour(\\\"light-grey\\\", $legacy: \\\"grey-3\\\") !default;\\n\\n/// Body background colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-body-background-colour: govuk-colour(\\\"white\\\") !default;\\n\\n/// Text colour for print media\\n///\\n/// Use 'true black' to avoid printers using colour ink to print body text\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-print-text-colour: #000000 !default;\\n\\n/// Secondary text colour\\n///\\n/// Used in for example 'muted' text and help text.\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-secondary-text-colour: govuk-colour(\\\"dark-grey\\\", $legacy: \\\"grey-1\\\") !default;\\n\\n/// Focus colour\\n///\\n/// Used for outline (and background, where appropriate) when interactive\\n/// elements (links, form controls) have keyboard focus.\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-focus-colour: govuk-colour(\\\"yellow\\\") !default;\\n\\n/// Focused text colour\\n///\\n/// Ensure that the contrast between the text and background colour passes\\n/// WCAG Level AA contrast requirements.\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-focus-text-colour: govuk-colour(\\\"black\\\") !default;\\n\\n/// Error colour\\n///\\n/// Used to highlight error messages and form controls in an error state\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-error-colour: govuk-colour(\\\"red\\\") !default;\\n\\n/// Success colour\\n///\\n/// Used to highlight success messages and banners\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-success-colour: govuk-colour(\\\"green\\\") !default;\\n\\n/// Border colour\\n///\\n/// Used in for example borders, separators, rules and keylines.\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-border-colour: govuk-colour(\\\"mid-grey\\\", $legacy: \\\"grey-2\\\");\\n\\n/// Input border colour\\n///\\n/// Used for form inputs and controls\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-input-border-colour: govuk-colour(\\\"black\\\") !default;\\n\\n/// Input hover colour\\n///\\n/// Used for hover states on form controls\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-hover-colour: govuk-colour(\\\"mid-grey\\\", $legacy: \\\"grey-3\\\");\\n\\n// =============================================================================\\n// Links\\n// =============================================================================\\n\\n/// Link colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-link-colour: govuk-colour(\\\"blue\\\") !default;\\n\\n/// Visited link colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-link-visited-colour: govuk-colour(\\\"purple\\\", $legacy: #4c2c92) !default;\\n\\n/// Link hover colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-link-hover-colour: govuk-colour(\\\"dark-blue\\\", $legacy: \\\"light-blue\\\") !default;\\n\\n/// Active link colour\\n///\\n/// @type Colour\\n/// @access public\\n\\n$govuk-link-active-colour: govuk-colour(\\\"black\\\", $legacy: \\\"light-blue\\\") !default;\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/core/lists\\\") {\\n\\n  %govuk-list {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n    padding-left: 0;\\n    list-style-type: none;\\n\\n    // Add a top margin for nested lists\\n    %govuk-list {\\n      margin-top: govuk-spacing(2);\\n    }\\n  }\\n\\n  %govuk-list > li {\\n    // Lists without numbers or bullets should always have extra space between\\n    // list items. Lists with numbers or bullets only have this extra space on\\n    // tablet and above\\n    margin-bottom: govuk-spacing(1);\\n  }\\n\\n  .govuk-list {\\n    @extend %govuk-list;\\n  }\\n\\n  %govuk-list--bullet {\\n    padding-left: govuk-spacing(4);\\n    list-style-type: disc;\\n  }\\n\\n  %govuk-list--number {\\n    padding-left: govuk-spacing(4);\\n    list-style-type: decimal;\\n  }\\n\\n  %govuk-list--bullet > li,\\n  %govuk-list--number > li {\\n    margin-bottom: 0;\\n\\n    @include govuk-media-query($from: tablet) {\\n      margin-bottom: govuk-spacing(1);\\n    }\\n  }\\n\\n  %govuk-list--spaced > li {\\n    margin-bottom: govuk-spacing(2);\\n\\n    @include govuk-media-query($from: tablet) {\\n      margin-bottom: govuk-spacing(3);\\n    }\\n  }\\n\\n  .govuk-list--bullet {\\n    @extend %govuk-list--bullet;\\n  }\\n\\n  .govuk-list--number {\\n    @extend %govuk-list--number;\\n  }\\n\\n  .govuk-list--spaced {\\n    @extend %govuk-list--spaced;\\n  }\\n}\\n\",\"////\\n/// @group helpers/spacing\\n////\\n\\n// stylelint-disable indentation\\n\\n/// Single point spacing\\n///\\n/// Returns measurement corresponding to the spacing point requested.\\n///\\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\\n///\\n/// @returns {String} Spacing Measurement eg. 10px\\n///\\n/// @example scss\\n///   .element {\\n///     padding: govuk-spacing(5);\\n///     top: govuk-spacing(2) !important; // if `!important` is required\\n///   }\\n/// @access public\\n\\n@function govuk-spacing($spacing-point) {\\n\\n  $actual-input-type: type-of($spacing-point);\\n  @if $actual-input-type != \\\"number\\\" {\\n    @error \\\"Expected a number (integer), but got a \\\"\\n    + \\\"#{$actual-input-type}.\\\";\\n  }\\n\\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\\n    @error \\\"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\\\";\\n  }\\n\\n  @return map-get($govuk-spacing-points, $spacing-point);\\n}\\n\\n/// Responsive spacing\\n///\\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\\n/// by fetching a 'spacing map' from the responsive spacing scale, which defines\\n/// different spacing values at different breakpoints.\\n///\\n/// To generate responsive spacing, use 'govuk-responsive-margin' or\\n/// 'govuk-responsive-padding' mixins\\n///\\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\\n///   scale, corresponds to a map of breakpoints and spacing values\\n/// @param {String} $property - Property to add spacing to (e.g. 'margin')\\n/// @param {String} $direction [all] - Direction to add spacing to\\n///   (`top`, `right`, `bottom`, `left`, `all`)\\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\\n///\\n/// @access private\\n\\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: \\\"all\\\", $important: false, $adjustment: false) {\\n\\n  $actual-input-type: type-of($responsive-spacing-point);\\n  @if $actual-input-type != \\\"number\\\" {\\n    @error \\\"Expected a number (integer), but got a \\\" + \\\"#{$actual-input-type}.\\\";\\n  }\\n\\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\\n    @error \\\"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \\\"\\n    + \\\"responsive spacing scale in `_settings/spacing.scss`.\\\";\\n  }\\n\\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\\n  $actual-map-type: type-of($scale-map);\\n  @if $actual-map-type != \\\"map\\\" {\\n    @error \\\"Expected a number (integer), but got a \\\"\\n    + \\\"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\\\";\\n  }\\n\\n  // Loop through each breakpoint in the map\\n  @each $breakpoint, $breakpoint-value in $scale-map {\\n\\n    @if ($adjustment) {\\n      $breakpoint-value: $breakpoint-value + $adjustment;\\n    }\\n\\n    // The 'null' breakpoint is for mobile.\\n    @if $breakpoint == null {\\n\\n      @if $direction == all {\\n        #{$property}: $breakpoint-value if($important, !important, null);\\n      } @else {\\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\\n      }\\n    } @else {\\n      @include govuk-media-query($from: $breakpoint) {\\n        @if $direction == all {\\n          #{$property}: $breakpoint-value if($important, !important, null);\\n        } @else {\\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n/// Responsive margin\\n///\\n/// Adds responsive margin by fetching a 'spacing map' from the responsive\\n/// spacing scale, which defines different spacing values at different\\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\\n///\\n/// @see {mixin} _govuk-responsive-spacing\\n///\\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\\n/// scale, corresponds to a map of breakpoints and spacing values\\n/// @param {String} $direction [all] - Direction to add spacing to\\n///   (`top`, `right`, `bottom`, `left`, `all`)\\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\\n///\\n/// @example scss\\n///   .element {\\n///      @include govuk-responsive-margin(6, \\\"left\\\", $adjustment: 1px);\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: \\\"all\\\", $important: false, $adjustment: false) {\\n  @include _govuk-responsive-spacing($responsive-spacing-point, \\\"margin\\\", $direction, $important, $adjustment);\\n}\\n\\n/// Responsive padding\\n///\\n/// Adds responsive padding by fetching a 'spacing map' from the responsive\\n/// spacing scale, which defines different spacing values at different\\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\\n///\\n/// @see {mixin} _govuk-responsive-spacing\\n///\\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\\n///   scale, corresponds to a map of breakpoints and spacing values\\n/// @param {String} $direction [all] - Direction to add spacing to\\n///   (`top`, `right`, `bottom`, `left`, `all`)\\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\\n///\\n/// @example scss\\n///   .element {\\n///      @include govuk-responsive-padding(6, \\\"left\\\", $adjustment: 1px);\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: \\\"all\\\", $important: false, $adjustment: false) {\\n  @include _govuk-responsive-spacing($responsive-spacing-point, \\\"padding\\\", $direction, $important, $adjustment);\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/core/template\\\") {\\n\\n  // Applied to the <html> element\\n  .govuk-template {\\n    // Set the overall page background colour to the same colour as used by the\\n    // footer to give the illusion of a long footer.\\n    background-color: $govuk-canvas-background-colour;\\n\\n    // Prevent automatic text sizing, as we already cater for small devices and\\n    // would like the browser to stay on 100% text zoom by default.\\n    -webkit-text-size-adjust: 100%;\\n       -moz-text-size-adjust: 100%;\\n        -ms-text-size-adjust: 100%;\\n            text-size-adjust: 100%;\\n\\n    // Force the scrollbar to always display in IE, to prevent horizontal page\\n    // jumps as content height changes (e.g. autocomplete results open).\\n    @include govuk-media-query($media-type: screen) {\\n      overflow-y: scroll;\\n    }\\n  }\\n\\n  // Applied to the <body> element\\n  .govuk-template__body {\\n    // The default margins set by user-agents are not required since we have our\\n    // own containers.\\n    margin: 0;\\n    // Set the overall body of the page back to the typical background colour.\\n    background-color: $govuk-body-background-colour;\\n  }\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/core/typography\\\") {\\n\\n  // Headings\\n\\n  %govuk-heading-xl {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 48, $weight: bold);\\n\\n    display: block;\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n  }\\n\\n  .govuk-heading-xl {\\n    @extend %govuk-heading-xl;\\n  }\\n\\n  %govuk-heading-l {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 36, $weight: bold);\\n\\n    display: block;\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-heading-l {\\n    @extend %govuk-heading-l;\\n  }\\n\\n  %govuk-heading-m {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 24, $weight: bold);\\n\\n    display: block;\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-heading-m {\\n    @extend %govuk-heading-m;\\n  }\\n\\n  %govuk-heading-s {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 19, $weight: bold);\\n\\n    display: block;\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-heading-s {\\n    @extend %govuk-heading-s;\\n  }\\n\\n  // Captions to be used inside headings\\n\\n  .govuk-caption-xl {\\n    @include govuk-font($size: 27);\\n\\n    display: block;\\n\\n    margin-bottom: govuk-spacing(1);\\n\\n    color: $govuk-secondary-text-colour;\\n  }\\n\\n  .govuk-caption-l {\\n    @include govuk-font($size: 24);\\n\\n    display: block;\\n\\n    margin-bottom: govuk-spacing(1);\\n    color: $govuk-secondary-text-colour;\\n\\n    @include govuk-media-query($from: tablet) {\\n      margin-bottom: 0;\\n    }\\n  }\\n\\n  .govuk-caption-m {\\n    @include govuk-font($size: 19);\\n\\n    display: block;\\n\\n    color: $govuk-secondary-text-colour;\\n  }\\n\\n  // Body (paragraphs)\\n\\n  %govuk-body-l {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 24);\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-body-l {\\n    @extend %govuk-body-l;\\n  }\\n\\n  %govuk-body-m {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 19);\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-body-m {\\n    @extend %govuk-body-m;\\n  }\\n\\n  %govuk-body-s {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 16);\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-body-s {\\n    @extend %govuk-body-s;\\n  }\\n\\n  %govuk-body-xs {\\n    @include govuk-text-colour;\\n    @include govuk-font($size: 14);\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-body-xs {\\n    @extend %govuk-body-xs;\\n  }\\n\\n  // Usage aliases\\n\\n  // Using extend to alias means we also inherit any contextual adjustments that\\n  // refer to the 'original' class name\\n\\n  .govuk-body-lead {\\n    @extend %govuk-body-l;\\n  }\\n\\n  .govuk-body {\\n    @extend %govuk-body-m;\\n  }\\n\\n  // Contextual adjustments\\n  // Add top padding to headings that appear directly after paragraphs.\\n\\n  %govuk-body-l  + %govuk-heading-l {\\n    padding-top: govuk-spacing(1);\\n\\n    @include govuk-media-query($from: tablet) {\\n      padding-top: govuk-spacing(2);\\n    }\\n  }\\n\\n  %govuk-body-m  + %govuk-heading-l,\\n  %govuk-body-s  + %govuk-heading-l,\\n  %govuk-list + %govuk-heading-l {\\n    @include govuk-responsive-padding(4, \\\"top\\\");\\n  }\\n\\n  %govuk-body-m + %govuk-heading-m,\\n  %govuk-body-s + %govuk-heading-m,\\n  %govuk-list + %govuk-heading-m,\\n  %govuk-body-m + %govuk-heading-s,\\n  %govuk-body-s + %govuk-heading-s,\\n  %govuk-list + %govuk-heading-s {\\n    padding-top: govuk-spacing(1);\\n\\n    @include govuk-media-query($from: tablet) {\\n      padding-top: govuk-spacing(2);\\n    }\\n  }\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/core/section-break\\\") {\\n\\n  %govuk-section-break {\\n    margin: 0;\\n    border: 0;\\n\\n    // fix double-width section break and forced visible section break\\n    // when combined with styles from alphagov/elements\\n    @include govuk-compatibility(govuk_elements) {\\n      height: 0;\\n    }\\n  }\\n\\n  .govuk-section-break {\\n    @extend %govuk-section-break;\\n  }\\n\\n  // Sizes\\n\\n  %govuk-section-break--xl {\\n    @include govuk-responsive-margin(8, \\\"top\\\");\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n  }\\n\\n  .govuk-section-break--xl {\\n    @extend %govuk-section-break--xl;\\n  }\\n\\n  %govuk-section-break--l {\\n    @include govuk-responsive-margin(6, \\\"top\\\");\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-section-break--l {\\n    @extend %govuk-section-break--l;\\n  }\\n\\n  %govuk-section-break--m {\\n    @include govuk-responsive-margin(4, \\\"top\\\");\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-section-break--m {\\n    @extend %govuk-section-break--m;\\n  }\\n\\n  // Visible variant\\n\\n  %govuk-section-break--visible {\\n    border-bottom: 1px solid $govuk-border-colour;\\n  }\\n\\n  .govuk-section-break--visible {\\n    @extend %govuk-section-break--visible;\\n  }\\n}\\n\",\"@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/objects/button-group\\\") {\\n  // Button groups can be used to group buttons and links together as a group.\\n  //\\n  // Within a button group:\\n  //\\n  // - links are styled to line up visually with the buttons, including being\\n  //   centre-aligned on mobile\\n  // - spacing between the buttons and links is handled automatically, including\\n  //   when they wrap across multiple lines\\n  .govuk-button-group {\\n    $horizontal-gap: govuk-spacing(3);\\n    $vertical-gap: govuk-spacing(3);\\n\\n    // These need to be kept in sync with the button component's styles\\n    $button-padding: govuk-spacing(2);\\n    $button-shadow-size: $govuk-border-width-form-element;\\n\\n    $link-spacing: govuk-spacing(1);\\n\\n    @include govuk-responsive-margin(6, \\\"bottom\\\", $adjustment: $vertical-gap * -1);\\n\\n    // Flexbox is used to center-align links on mobile, align everything along\\n    // the baseline on tablet and above, and to removes extra whitespace that\\n    // we'd get between the buttons and links because they're inline-blocks.\\n    //\\n    // Ideally we'd use `gap` with flexbox rather than having to do it all with\\n    // margins, but unfortunately the support isn't there (yet) and @supports\\n    // doesn't play nicely with it\\n    // (https://github.com/w3c/csswg-drafts/issues/3559)\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n\\n    // Give links within the button group the same font-size and line-height\\n    // as buttons.\\n    //\\n    // Because we want the focus state to be tight around the link text, we use\\n    // margins where the buttons would use padding.\\n    .govuk-link {\\n      @include govuk-font($size: 19, $line-height: 19px);\\n      display: inline-block;\\n      // Prevent links overflowing their container in IE10/11 because of bug\\n      // with align-items: center\\n      max-width: 100%;\\n      margin-top: $link-spacing;\\n      margin-bottom: $link-spacing + $vertical-gap;\\n      text-align: center;\\n    }\\n\\n    // Reduce the bottom margin to the size of the vertical gap (accommodating\\n    // the button shadow) – the 'lost' margin is moved to the button-group.\\n    .govuk-button {\\n      margin-bottom: $vertical-gap + $button-shadow-size;\\n    }\\n\\n    // On tablet and above, we also introduce a 'column gap' between the\\n    // buttons and links in each row and left align links\\n    @include govuk-media-query($from: tablet) {\\n      // Cancel out the column gap for the last item in each row\\n      margin-right: ($horizontal-gap * -1);\\n\\n      -webkit-box-orient: horizontal;\\n\\n      -webkit-box-direction: normal;\\n\\n          -ms-flex-direction: row;\\n\\n              flex-direction: row;\\n      -ms-flex-wrap: wrap;\\n          flex-wrap: wrap;\\n      -webkit-box-align: baseline;\\n          -ms-flex-align: baseline;\\n              align-items: baseline;\\n\\n      .govuk-button,\\n      .govuk-link {\\n        margin-right: $horizontal-gap;\\n      }\\n\\n      .govuk-link {\\n        text-align: left;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/objects/form-group\\\") {\\n  .govuk-form-group {\\n    @include govuk-clearfix;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n\\n    .govuk-form-group:last-of-type {\\n      margin-bottom: 0; // Remove margin from last item in nested groups\\n    }\\n  }\\n\\n  .govuk-form-group--error {\\n    padding-left: govuk-spacing(3);\\n    border-left: $govuk-border-width-form-group-error solid $govuk-error-colour;\\n\\n    .govuk-form-group {\\n      // Reset error styles in nested form groups that might have error class\\n      padding: 0;\\n      border: 0;\\n    }\\n  }\\n}\\n\",\"////\\n/// @group helpers/layout\\n////\\n\\n/// Clear floated content within a container using a pseudo element\\n///\\n/// @access public\\n\\n@mixin govuk-clearfix {\\n  &:after {\\n    content: \\\"\\\";\\n    display: block;\\n    clear: both;\\n  }\\n}\\n\",\"@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/objects/grid\\\") {\\n  .govuk-grid-row {\\n    @include govuk-clearfix;\\n    margin-right: - ($govuk-gutter-half);\\n    margin-left: - ($govuk-gutter-half);\\n  }\\n\\n  @each $width in map-keys($govuk-grid-widths) {\\n    .govuk-grid-column-#{$width} {\\n      @include govuk-grid-column($width);\\n    }\\n  }\\n\\n  // These *must* be defined in a separate loop as they have the same\\n  // specificity as the non-breakpoint specific classes, so need to appear after\\n  // them in the outputted CSS\\n  @each $width in map-keys($govuk-grid-widths) {\\n    .govuk-grid-column-#{$width}-from-desktop {\\n      @include govuk-grid-column($width, $at: desktop);\\n    }\\n  }\\n}\\n\",\"////\\n/// @group helpers/layout\\n////\\n\\n/// Grid width percentage\\n///\\n/// @param {String} $key - Name of grid width (e.g. two-thirds)\\n/// @return {Number} Percentage width\\n/// @throw if `$key` is not a valid grid width\\n/// @access public\\n\\n@function govuk-grid-width($key) {\\n  @if map-has-key($govuk-grid-widths, $key) {\\n    @return map-get($govuk-grid-widths, $key);\\n  }\\n\\n  @error \\\"Unknown grid width `#{$key}`\\\";\\n}\\n\\n/// Generate grid column styles\\n///\\n/// Creates a grid column with standard gutter between the columns.\\n///\\n/// Grid widths are defined in the `$govuk-grid-widths` map.\\n///\\n/// By default the column width changes from 100% to specified width at the\\n/// 'tablet' breakpoint, but other breakpoints can be specified using the `$at`\\n/// parameter.\\n///\\n/// @param {String} $width [full] name of a grid width from $govuk-grid-widths\\n/// @param {String} $float [left] left | right\\n/// @param {String} $at [tablet] - mobile | tablet | desktop | any custom breakpoint\\n///\\n/// @example scss - Default\\n///   .govuk-grid-column-two-thirds {\\n///     @include govuk-grid-column(two-thirds)\\n///   }\\n///\\n/// @example scss - Customising the breakpoint where width percentage is applied\\n///   .govuk-grid-column-one-half-at-desktop {\\n///     @include govuk-grid-column(one-half, $at: desktop);\\n///   }\\n///\\n/// @example scss - Customising the float direction\\n///   .govuk-grid-column-one-half-right {\\n///     @include govuk-grid-column(two-thirds, $float: right);\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-grid-column($width: full, $float: left, $at: tablet) {\\n  box-sizing: border-box;\\n  @if $at != desktop {\\n    width: 100%;\\n  }\\n  padding: 0 $govuk-gutter-half;\\n  @include govuk-media-query($from: $at) {\\n    width: govuk-grid-width($width);\\n    float: $float;\\n  }\\n}\\n\",\"@import \\\"../base\\\";\\n\\n////\\n/// @group objects/layout\\n////\\n\\n// Example usage with Breadcrumbs, phase banners, back links:\\n// <div class=\\\"govuk-width-container\\\">\\n//   <!-- Breadcrumbs, phase banners, back links are placed in here. -->\\n//   <div class=\\\"govuk-main-wrapper\\\">\\n//       <!-- Wrapper for the main content of your page which applies padding\\n//            to the top / bottom -->\\n//   </div>\\n// </div>\\n//\\n// Example usage without Breadcrumbs, phase banners, back links:\\n// <div class=\\\"govuk-width-container\\\">\\n//   <div class=\\\"govuk-main-wrapper govuk-main-wrapper--l\\\">\\n//       <!-- Wrapper for the main content of your page which applies padding\\n//            to the top / bottom -->\\n//   </div>\\n// </div>\\n\\n/// @deprecated Replace this mixin with more direct references to the [spacing\\n/// mixins](https://design-system.service.gov.uk/styles/spacing/#spacing-on-custom-components).\\n@mixin govuk-main-wrapper {\\n  // In IE11 the `main` element can be used, but is not recognized  –\\n  // meaning it's not defined in IE's default style sheet,\\n  // so it uses CSS initial value, which is inline.\\n  display: block;\\n  padding-top: govuk-spacing(4);\\n  padding-bottom: govuk-spacing(4);\\n\\n  @include govuk-media-query($from: tablet) {\\n    // This spacing is manually adjusted to replicate the margin of\\n    // govuk-heading-xl (50px) minus the spacing of back link and\\n    // breadcrumbs (10px)\\n    padding-top: govuk-spacing(7);\\n    padding-bottom: govuk-spacing(7);\\n  }\\n}\\n\\n/// Use govuk-main-wrapper--l when you page does not have Breadcrumbs, phase\\n/// banners or back links.\\n///\\n/// @deprecated Replace this mixin with more direct references to the [spacing\\n/// mixins](https://design-system.service.gov.uk/styles/spacing/#spacing-on-custom-components).\\n@mixin govuk-main-wrapper--l {\\n  @include govuk-responsive-padding(8, \\\"top\\\");\\n}\\n\\n@include govuk-exports(\\\"govuk/objects/main-wrapper\\\") {\\n  .govuk-main-wrapper {\\n    @include govuk-main-wrapper;\\n  }\\n\\n  // Using the `.govuk-main-wrapper--auto-spacing` modifier should apply the\\n  // correct spacing depending on whether there are any elements\\n  // (such the back link, breadcrumbs or phase banner components) before the\\n  // `.govuk-main-wrapper` in the `govuk-width-container`.\\n  //\\n  // If you need to control the spacing manually, use the\\n  // `govuk-main-wrapper--l` modifier instead.\\n  .govuk-main-wrapper--auto-spacing:first-child,\\n  .govuk-main-wrapper--l {\\n    @include govuk-main-wrapper--l;\\n  }\\n}\\n\",\"@import \\\"../base\\\";\\n\\n////\\n/// @group objects/layout\\n////\\n\\n/// Width container mixin\\n///\\n/// Used to create page width and custom width container classes.\\n///\\n/// @param {String} $width [$govuk-page-width] - Width in pixels\\n///\\n/// @example scss - Creating a 1200px wide container class\\n///  .app-width-container--wide {\\n///    @include govuk-width-container(1200px);\\n///  }\\n///\\n/// @access public\\n\\n@mixin govuk-width-container($width: $govuk-page-width) {\\n\\n  // By default, limit the width of the container to the page width\\n  max-width: $width;\\n\\n  // On mobile, add half width gutters\\n  margin-right: $govuk-gutter-half;\\n  margin-left: $govuk-gutter-half;\\n\\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\\n  @supports (margin: unquote(\\\"max(calc(0px))\\\")) {\\n    $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\\n    $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\\n\\n    // Use max() to pick largest margin, default or with safe area\\n    // Escaped due to Sass max() vs. CSS native max()\\n    margin-right: unquote(\\\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-right})\\\");\\n    margin-left: unquote(\\\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-left})\\\");\\n  }\\n\\n  // On tablet, add full width gutters\\n  @include govuk-media-query($from: tablet) {\\n    margin-right: $govuk-gutter;\\n    margin-left: $govuk-gutter;\\n\\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\\n    @supports (margin: unquote(\\\"max(calc(0px))\\\")) {\\n      $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\\n      $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\\n\\n      // Use max() to pick largest margin, default or with safe area\\n      // Escaped due to Sass max() vs. CSS native max()\\n      margin-right: unquote(\\\"max(#{$govuk-gutter}, #{$gutter-safe-area-right})\\\");\\n      margin-left: unquote(\\\"max(#{$govuk-gutter}, #{$gutter-safe-area-left})\\\");\\n    }\\n  }\\n\\n  // As soon as the viewport is greater than the width of the page plus the\\n  // gutters, just centre the content instead of adding gutters.\\n  @include govuk-media-query($and: \\\"(min-width: #{($width + $govuk-gutter * 2)})\\\") {\\n    margin-right: auto;\\n    margin-left: auto;\\n\\n    // Since a safe area may have previously been set above,\\n    // we need to duplicate this margin that centers the page.\\n    @supports (margin: unquote(\\\"max(calc(0px))\\\")) {\\n      margin-right: auto;\\n      margin-left: auto;\\n    }\\n  }\\n\\n  @include govuk-if-ie8 {\\n    width: $width;\\n    // Since media queries are not supported in IE8,\\n    // we need to duplicate this margin that centers the page.\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n}\\n\\n@include govuk-exports(\\\"govuk/objects/width-container\\\") {\\n  .govuk-width-container {\\n    @include govuk-width-container;\\n  }\\n}\\n\",\"////\\n/// @group settings/measurements\\n////\\n\\n// =========================================================\\n// Page layout\\n// =========================================================\\n\\n/// Width of main container\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-page-width: 960px !default;\\n\\n/// Map of grid column widths\\n///\\n/// @type Map\\n/// @access public\\n\\n$govuk-grid-widths: (\\n  one-quarter: 25%,\\n  one-third: 33.3333%,\\n  one-half: 50%,\\n  two-thirds: 66.6666%,\\n  three-quarters: 75%,\\n  full: 100%\\n) !default;\\n\\n/// Width of gutter between grid columns\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-gutter: 30px !default;\\n\\n/// Width of half the gutter between grid columns\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-gutter-half: $govuk-gutter / 2;\\n\\n// =========================================================\\n// Borders\\n// =========================================================\\n\\n/// Standard border width\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-border-width: 5px !default;\\n\\n/// Wide border width\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-border-width-wide: 10px !default;\\n\\n/// Narrow border width\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-border-width-narrow: 4px !default;\\n\\n/// Form control border width\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-border-width-form-element: 2px !default;\\n\\n/// Form control border width when in error state\\n///\\n/// @type Number\\n/// @access public\\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\\n///   difference in thickness for inputs in the error state, in order to\\n///   maintain a distinct focus state.\\n\\n$govuk-border-width-form-element-error: 2px !default;\\n\\n/// Form group border width when in error state\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-border-width-form-group-error: $govuk-border-width !default;\\n\\n/// Border width of focus outline\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-focus-width: 3px !default;\\n\\n/// Hover width for form controls with a hover state\\n///\\n/// @type Number\\n/// @access public\\n\\n$govuk-hover-width: 10px !default;\\n\",\"@include govuk-exports(\\\"govuk/component/accordion\\\") {\\n\\n  $govuk-accordion-link-colour: $govuk-link-colour;\\n  $govuk-accordion-link-hover-colour: govuk-colour(\\\"light-blue\\\");\\n  $govuk-accordion-border-width: 3px;\\n\\n  .govuk-accordion {\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  // Borders between accordion sections\\n  .govuk-accordion__section {\\n    padding-top: govuk-spacing(3);\\n  }\\n\\n  .govuk-accordion__section-header {\\n    padding-top: govuk-spacing(3);\\n    padding-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-accordion__section-heading {\\n    // Override browser defaults to ensure consistent element height\\n    // Font size is set in .govuk-accordion__section-button\\n    @include govuk-font(24);\\n\\n    margin-top: 0; // Override browser default\\n    margin-bottom: 0; // Override browser default\\n  }\\n\\n  // Buttons within the sections don’t need default styling\\n  .govuk-accordion__section-button {\\n    @include govuk-font($size: 24, $weight: bold);\\n    display: inline-block;\\n    margin-bottom: 0;\\n    padding-top: govuk-spacing(3);\\n  }\\n\\n  .govuk-accordion__section-summary {\\n    margin-top: govuk-spacing(2);\\n    margin-bottom: 0;\\n  }\\n\\n  // Remove the bottom margin from the last item inside the content\\n  .govuk-accordion__section-content > :last-child {\\n    margin-bottom: 0;\\n  }\\n\\n  // JavaScript enabled\\n  .js-enabled {\\n    .govuk-accordion {\\n      // Border at the bottom of the whole accordion\\n      border-bottom: 1px solid $govuk-border-colour;\\n    }\\n\\n    // Borders between accordion sections\\n    .govuk-accordion__section {\\n      padding-top: 0;\\n    }\\n\\n    // Hide the body of collapsed sections\\n    .govuk-accordion__section-content {\\n      display: none;\\n      @include govuk-responsive-padding(3, \\\"top\\\");\\n      @include govuk-responsive-padding(3, \\\"bottom\\\");\\n    }\\n\\n    // Show the body of expanded sections\\n    .govuk-accordion__section--expanded .govuk-accordion__section-content {\\n      display: block;\\n    }\\n\\n    // This is styled to look like a link not a button\\n    .govuk-accordion__open-all {\\n      @include govuk-font($size: 16);\\n      position: relative;\\n      z-index: 1;\\n      margin: 0;\\n      padding: 0;\\n      border-width: 0;\\n      color: $govuk-link-colour;\\n      background: none;\\n      cursor: pointer;\\n      -webkit-appearance: none;\\n\\n      @include govuk-link-common;\\n      @include govuk-link-style-default;\\n\\n      // Remove default button focus outline in Firefox\\n      &::-moz-focus-inner {\\n        padding: 0;\\n        border: 0;\\n      }\\n    }\\n\\n    // Section headers have a pointer cursor as an additional affordance\\n    .govuk-accordion__section-header {\\n      position: relative;\\n      // Safe area on the right to avoid clashing with icon\\n      padding-right: 40px;\\n      border-top: 1px solid $govuk-border-colour;\\n      color: $govuk-accordion-link-colour;\\n      cursor: pointer;\\n    }\\n\\n    // For devices that can't hover such as touch devices,\\n    // remove hover state as it can be stuck in that state (iOS).\\n    @media (hover: none) {\\n      .govuk-accordion__section-header:hover {\\n        border-top-color: $govuk-accordion-link-colour;\\n        box-shadow: inset 0 $govuk-accordion-border-width 0 0 $govuk-accordion-link-colour;\\n      }\\n    }\\n\\n    // Buttons within the headers don’t need default styling\\n    .govuk-accordion__section-button {\\n      @include govuk-typography-common;\\n      margin-top: 0;\\n      margin-bottom: 0;\\n      margin-left: 0;\\n      padding: 0;\\n      border-width: 0;\\n      color: inherit;\\n      background: none;\\n      text-align: left;\\n      cursor: pointer;\\n      -webkit-appearance: none;\\n\\n      &:focus {\\n        @include govuk-focused-text;\\n      }\\n\\n      // Remove default button focus outline in Firefox\\n      &::-moz-focus-inner {\\n        padding: 0;\\n        border: 0;\\n      }\\n    }\\n\\n    // Extend the touch area of the button to span the section header\\n    .govuk-accordion__section-button:after {\\n      content: \\\"\\\";\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n    }\\n\\n    .govuk-accordion__section-button:hover:not(:focus) {\\n      text-decoration: underline;\\n    }\\n\\n    // For devices that can't hover such as touch devices,\\n    // remove hover state as it can be stuck in that state (iOS).\\n    @media (hover: none) {\\n      .govuk-accordion__section-button:hover {\\n        text-decoration: none;\\n      }\\n    }\\n\\n    .govuk-accordion__controls {\\n      text-align: right;\\n    }\\n\\n    // Display an icon to the right of each header to indicate open/closed status,\\n    // and as an additional affordance.\\n    .govuk-accordion__icon {\\n      position: absolute;\\n      top: 50%;\\n      right: 15px;\\n      width: 16px;\\n      height: 16px;\\n      margin-top: -8px;\\n    }\\n\\n    .govuk-accordion__icon:after,\\n    .govuk-accordion__icon:before {\\n      content: \\\"\\\";\\n      box-sizing: border-box;\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n      width: 25%;\\n      height: 25%;\\n      margin: auto;\\n      border: 2px solid transparent;\\n      background-color: govuk-colour(\\\"black\\\");\\n    }\\n\\n    .govuk-accordion__icon:before {\\n      width: 100%;\\n    }\\n\\n    .govuk-accordion__icon:after {\\n      height: 100%;\\n    }\\n\\n    // Vertical bar should be hidden when section is open, to display a '-' icon\\n    .govuk-accordion__section--expanded .govuk-accordion__icon:after {\\n      content: \\\" \\\";\\n      display: none;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/back-link\\\") {\\n\\n  // Size of chevron (excluding border)\\n  $chevron-size: 7px;\\n\\n  // Size of chevron border\\n  $chevron-border-width: 1px;\\n\\n  // Colour of chevron\\n  $chevron-border-colour: $govuk-secondary-text-colour;\\n\\n  .govuk-back-link {\\n    @include govuk-typography-responsive($size: 16);\\n    @include govuk-link-common;\\n    @include govuk-link-style-text;\\n\\n    display: inline-block;\\n    position: relative;\\n\\n    margin-top: govuk-spacing(3);\\n    margin-bottom: govuk-spacing(3);\\n\\n    // Allow space for the arrow\\n    padding-left: 14px;\\n  }\\n\\n  // Only underline if the component is linkable\\n  .govuk-back-link[href] {\\n    text-decoration: underline;\\n\\n    // When the back link is focused, hide the bottom link border as the\\n    // focus styles has a bottom border.\\n    &:focus {\\n      text-decoration: none;\\n\\n      &:before {\\n        border-color: $govuk-text-colour;\\n      }\\n    }\\n  }\\n\\n  // Prepend left pointing chevron\\n  .govuk-back-link:before {\\n    content: \\\"\\\";\\n    display: block;\\n\\n    // Vertically align with the parent element\\n    position: absolute;\\n\\n    @if $govuk-use-legacy-font {\\n      // Begin adjustments for font baseline offset\\n      // These should be removed when legacy font support is dropped\\n      top: -1px;\\n      bottom: 1px;\\n    } @else {\\n      top: 0;\\n      bottom: 0;\\n    }\\n\\n    left: 3px;\\n\\n    width: $chevron-size;\\n    height: $chevron-size;\\n\\n    margin: auto 0;\\n\\n    -webkit-transform: rotate(225deg);\\n\\n        -ms-transform: rotate(225deg);\\n\\n            transform: rotate(225deg);\\n\\n    border: solid;\\n    border-width: $chevron-border-width $chevron-border-width 0 0;\\n    border-color: $chevron-border-colour;\\n\\n    // Fall back to a less than sign for IE8\\n    @include govuk-if-ie8 {\\n      content: \\\"\\\\003c\\\"; // Less than sign (<)\\n      width: auto;\\n      height: auto;\\n      border: 0;\\n      color: $chevron-border-colour;\\n\\n      // IE8 doesn't seem to like rendering pseudo-elements using @font-faces,\\n      // so fall back to using another sans-serif font to render the chevron.\\n      font-family: Arial, sans-serif;\\n    }\\n  }\\n\\n  .govuk-back-link:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: -14px;\\n    right: 0;\\n    bottom: -14px;\\n    left: 0;\\n  }\\n\\n  @if $govuk-use-legacy-font {\\n    // Begin adjustments for font baseline offset\\n    // These should be removed when legacy font support is dropped\\n    .govuk-back-link:before {\\n      $offset: 1px;\\n\\n      top: $offset * -1;\\n      bottom: $offset;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/breadcrumbs\\\") {\\n\\n  // Size of chevron (excluding border)\\n  $chevron-size: 7px;\\n\\n  // Size of chevron border\\n  $chevron-border-width: 1px;\\n\\n  // Colour of chevron\\n  $chevron-border-colour: $govuk-secondary-text-colour;\\n\\n  // Calculated altitude (△↕) of the right-angled isosceles chevron with sides\\n  // of length 8 (7px + 1px border):\\n  //\\n  // √(8² + 8²) * 0.5 ≅ 5.655\\n  $chevron-altitude-calculated: 5.655px;\\n\\n  .govuk-breadcrumbs {\\n    @include govuk-font($size: 16);\\n    @include govuk-text-colour;\\n\\n    margin-top: govuk-spacing(3);\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  .govuk-breadcrumbs__list {\\n    @include govuk-clearfix;\\n\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n  }\\n\\n  .govuk-breadcrumbs__list-item {\\n\\n    display: inline-block;\\n    position: relative;\\n\\n    margin-bottom: govuk-spacing(1);\\n\\n    // Add both margin and padding such that the chevron appears centrally\\n    // between each breadcrumb item\\n    margin-left: govuk-spacing(2);\\n    padding-left: govuk-spacing(2) + $chevron-altitude-calculated;\\n\\n    float: left;\\n\\n    // Create a chevron using a box with borders on two sides, rotated 45deg.\\n    &:before {\\n      content: \\\"\\\";\\n      display: block;\\n\\n      position: absolute;\\n\\n      @if $govuk-use-legacy-font {\\n        // Begin adjustments for font baseline offset\\n        // These should be removed when legacy font support is dropped\\n        top: -1px;\\n        bottom: 1px;\\n      } @else {\\n        top: 0;\\n        bottom: 0;\\n      }\\n\\n      // Offset by the difference between the width of the non-rotated square\\n      // and its width when rotated\\n      left: (($chevron-altitude-calculated * -2) + $chevron-size + $chevron-border-width);\\n\\n      width: $chevron-size;\\n      height: $chevron-size;\\n\\n      margin: auto 0;\\n\\n      -webkit-transform: rotate(45deg);\\n\\n          -ms-transform: rotate(45deg);\\n\\n              transform: rotate(45deg);\\n\\n      border: solid;\\n      border-width: $chevron-border-width $chevron-border-width 0 0;\\n      border-color: $chevron-border-colour;\\n\\n      // Fall back to a greater than sign for IE8\\n      @include govuk-if-ie8 {\\n        content: \\\"\\\\003e\\\"; // Greater than sign (>)\\n        width: auto;\\n        height: auto;\\n        border: 0;\\n        color: $chevron-border-colour;\\n\\n        // IE8 doesn't seem to like rendering pseudo-elements using @font-faces,\\n        // so fall back to using another sans-serif font to render the chevron.\\n        font-family: Arial, sans-serif;\\n      }\\n    }\\n\\n    &:first-child {\\n      margin-left: 0;\\n      padding-left: 0;\\n\\n      &:before {\\n        content: none;\\n        display: none;\\n      }\\n    }\\n  }\\n\\n  .govuk-breadcrumbs__link {\\n    @include govuk-link-common;\\n    @include govuk-link-style-text;\\n  }\\n\\n  .govuk-breadcrumbs--collapse-on-mobile {\\n    @include govuk-media-query($until: tablet) {\\n      .govuk-breadcrumbs__list-item {\\n        display: none;\\n\\n        &:first-child,\\n        &:last-child {\\n          display: inline-block;\\n        }\\n\\n        &:before {\\n          top: 6px;\\n          margin: 0;\\n        }\\n      }\\n\\n      .govuk-breadcrumbs__list {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n      }\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/button\\\") {\\n  $govuk-button-colour: govuk-colour(\\\"green\\\", $legacy: #00823b);\\n  $govuk-button-hover-colour: govuk-shade($govuk-button-colour, 20%);\\n  $govuk-button-shadow-colour: govuk-shade($govuk-button-colour, 60%);\\n  $govuk-button-text-colour: govuk-colour(\\\"white\\\");\\n\\n  // Secondary button variables\\n  $govuk-secondary-button-colour: govuk-colour(\\\"light-grey\\\", $legacy: \\\"grey-3\\\");\\n  $govuk-secondary-button-hover-colour: govuk-shade($govuk-secondary-button-colour, 10%);\\n  $govuk-secondary-button-shadow-colour: govuk-shade($govuk-secondary-button-colour, 40%);\\n  $govuk-secondary-button-text-colour: govuk-colour(\\\"black\\\");\\n\\n  // Warning button variables\\n  $govuk-warning-button-colour: govuk-colour(\\\"red\\\");\\n  $govuk-warning-button-hover-colour: govuk-shade($govuk-warning-button-colour, 20%);\\n  $govuk-warning-button-shadow-colour: govuk-shade($govuk-warning-button-colour, 60%);\\n  $govuk-warning-button-text-colour: govuk-colour(\\\"white\\\");\\n\\n  // Because the shadow (s0) is visually 'part of' the button, we need to reduce\\n  // the height of the button to compensate by adjusting its padding (s1) and\\n  // increase the bottom margin to include it (s2).\\n  $button-shadow-size: $govuk-border-width-form-element;\\n\\n  .govuk-button {\\n    @include govuk-font($size: 19, $line-height: 19px);\\n\\n    box-sizing: border-box;\\n    display: inline-block;\\n    position: relative;\\n    width: 100%;\\n    margin-top: 0;\\n    margin-right: 0;\\n    margin-left: 0;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\", $adjustment: $button-shadow-size); // s2\\n    padding: (govuk-spacing(2) - $govuk-border-width-form-element) govuk-spacing(2) (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2)); // s1\\n    border: $govuk-border-width-form-element solid transparent;\\n    border-radius: 0;\\n    color: $govuk-button-text-colour;\\n    background-color: $govuk-button-colour;\\n    box-shadow: 0 $button-shadow-size 0 $govuk-button-shadow-colour; // s0\\n    text-align: center;\\n    vertical-align: top;\\n    cursor: pointer;\\n    -webkit-appearance: none;\\n\\n    @include govuk-if-ie8 {\\n      border-bottom: $button-shadow-size solid $govuk-button-shadow-colour;\\n    }\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: auto;\\n    }\\n\\n    // Ensure that any global link styles are overridden\\n    &:link,\\n    &:visited,\\n    &:active,\\n    &:hover {\\n      color: $govuk-button-text-colour;\\n      text-decoration: none;\\n    }\\n\\n    // Fix unwanted button padding in Firefox\\n    &::-moz-focus-inner {\\n      padding: 0;\\n      border: 0;\\n    }\\n\\n    &:hover {\\n      background-color: $govuk-button-hover-colour;\\n    }\\n\\n    &:active {\\n      // Bump the button down so it looks like its being pressed in\\n      top: $button-shadow-size;\\n\\n      @include govuk-if-ie8 {\\n        border-bottom-width: 0;\\n      }\\n    }\\n\\n    &:focus {\\n      border-color: $govuk-focus-colour;\\n      // When colours are overridden, for example when users have a dark mode,\\n      // backgrounds and box-shadows disappear, so we need to ensure there's a\\n      // transparent outline which will be set to a visible colour.\\n      // Since Internet Explorer 8 does not support box-shadow, we want to force the user-agent outlines\\n      @include govuk-not-ie8 {\\n        outline: $govuk-focus-width solid transparent;\\n      }\\n      // Since Internet Explorer does not support `:not()` we set a clearer focus style to match user-agent outlines.\\n      @include govuk-if-ie8 {\\n        color: $govuk-focus-text-colour;\\n        background-color: $govuk-focus-colour;\\n      }\\n      box-shadow: inset 0 0 0 1px $govuk-focus-colour;\\n    }\\n\\n    // alphagov/govuk_template includes a specific a:link:focus selector\\n    // designed to make unvisited links a slightly darker blue when focussed, so\\n    // we need to override the text colour for that combination of selectors so\\n    // so that unvisited links styled as buttons do not end up with dark blue\\n    // text when focussed.\\n    @include govuk-compatibility(govuk_template) {\\n      &:link:focus {\\n        color: $govuk-button-text-colour;\\n      }\\n    }\\n\\n    &:focus:not(:active):not(:hover) {\\n      border-color: $govuk-focus-colour;\\n      color: $govuk-focus-text-colour;\\n      background-color: $govuk-focus-colour;\\n      box-shadow: 0 2px 0 $govuk-focus-text-colour;\\n    }\\n\\n    // The following adjustments do not work for <input type=\\\"button\\\"> as\\n    // non-container elements cannot include pseudo elements (i.e. ::before).\\n\\n    // Use a pseudo element to expand the click target area to include the\\n    // button's shadow as well, in case users try to click it.\\n    &:before {\\n      content: \\\"\\\";\\n      display: block;\\n\\n      position: absolute;\\n\\n      top: -$govuk-border-width-form-element;\\n      right: -$govuk-border-width-form-element;\\n      bottom: -($govuk-border-width-form-element + $button-shadow-size);\\n      left: -$govuk-border-width-form-element;\\n\\n      background: transparent;\\n    }\\n\\n    // When the button is active it is shifted down by $button-shadow-size to\\n    // denote a 'pressed' state. If the user happened to click at the very top\\n    // of the button, their mouse is no longer over the button (because it has\\n    // 'moved beneath them') and so the click event is not fired.\\n    //\\n    // This corrects that by shifting the top of the pseudo element so that it\\n    // continues to cover the area that the user originally clicked, which means\\n    // the click event is still fired.\\n    //\\n    // 🎉\\n    &:active:before {\\n      top: -($govuk-border-width-form-element + $button-shadow-size);\\n    }\\n  }\\n\\n  .govuk-button--disabled,\\n  .govuk-button[disabled=\\\"disabled\\\"],\\n  .govuk-button[disabled] {\\n    opacity: (.5);\\n\\n    &:hover {\\n      background-color: $govuk-button-colour;\\n      cursor: default;\\n    }\\n\\n    &:focus {\\n      outline: none;\\n    }\\n\\n    &:active {\\n      top: 0;\\n      box-shadow: 0 $button-shadow-size 0 $govuk-button-shadow-colour; // s0\\n      @include govuk-if-ie8 {\\n        border-bottom: $button-shadow-size solid $govuk-button-shadow-colour; // s0\\n      }\\n    }\\n  }\\n\\n  .govuk-button--secondary {\\n    background-color: $govuk-secondary-button-colour;\\n    box-shadow: 0 $button-shadow-size 0 $govuk-secondary-button-shadow-colour;\\n\\n    &,\\n    &:link,\\n    &:visited,\\n    &:active,\\n    &:hover {\\n      color: $govuk-secondary-button-text-colour;\\n    }\\n\\n    // alphagov/govuk_template includes a specific a:link:focus selector\\n    // designed to make unvisited links a slightly darker blue when focussed, so\\n    // we need to override the text colour for that combination of selectors so\\n    // so that unvisited links styled as buttons do not end up with dark blue\\n    // text when focussed.\\n    @include govuk-compatibility(govuk_template) {\\n      &:link:focus {\\n        color: $govuk-secondary-button-text-colour;\\n      }\\n    }\\n\\n    &:hover {\\n      background-color: $govuk-secondary-button-hover-colour;\\n\\n      &[disabled] {\\n        background-color: $govuk-secondary-button-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-button--warning {\\n    background-color: $govuk-warning-button-colour;\\n    box-shadow: 0 $button-shadow-size 0 $govuk-warning-button-shadow-colour;\\n\\n    &,\\n    &:link,\\n    &:visited,\\n    &:active,\\n    &:hover {\\n      color: $govuk-warning-button-text-colour;\\n    }\\n\\n    // alphagov/govuk_template includes a specific a:link:focus selector\\n    // designed to make unvisited links a slightly darker blue when focussed, so\\n    // we need to override the text colour for that combination of selectors so\\n    // so that unvisited links styled as buttons do not end up with dark blue\\n    // text when focussed.\\n    @include govuk-compatibility(govuk_template) {\\n      &:link:focus {\\n        color: $govuk-warning-button-text-colour;\\n      }\\n    }\\n\\n    &:hover {\\n      background-color: $govuk-warning-button-hover-colour;\\n\\n      &[disabled] {\\n        background-color: $govuk-warning-button-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-button--start {\\n    @include govuk-typography-weight-bold;\\n    @include govuk-typography-responsive($size: 24, $override-line-height: 1);\\n\\n    display: -webkit-inline-box;\\n\\n    display: -ms-inline-flexbox;\\n\\n    display: inline-flex;\\n    min-height: auto;\\n\\n    -webkit-box-pack: center;\\n\\n        -ms-flex-pack: center;\\n\\n            justify-content: center;\\n  }\\n\\n  .govuk-button__start-icon {\\n    margin-left: govuk-spacing(1);\\n\\n    @include govuk-media-query($from: desktop) {\\n      margin-left: govuk-spacing(2);\\n    }\\n    vertical-align: middle;\\n    -ms-flex-negative: 0;\\n        flex-shrink: 0;\\n    -ms-flex-item-align: center;\\n        align-self: center;\\n  }\\n\\n  @if $govuk-use-legacy-font {\\n    // Begin adjustments for font baseline offset when using v1 of nta\\n    $offset: 2;\\n\\n    .govuk-button {\\n      padding-top: (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2) + $offset); // s1\\n      padding-bottom: (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2) - $offset + 1); // s1\\n    }\\n\\n    .govuk-button__start-icon {\\n      margin-top: -3px;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/error-message\\\") {\\n  .govuk-error-message {\\n    @include govuk-font($size: 19, $weight: bold);\\n\\n    display: block;\\n    margin-bottom: govuk-spacing(3);\\n    clear: both;\\n\\n    color: $govuk-error-colour;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/fieldset\\\") {\\n  .govuk-fieldset {\\n    min-width: 0;\\n    margin: 0;\\n    padding: 0;\\n    border: 0;\\n    @include govuk-clearfix;\\n  }\\n\\n  // Fix for Firefox < 53\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=504622\\n  @supports not (caret-color: auto) {\\n    .govuk-fieldset,\\n    x:-moz-any-link { // stylelint-disable-line selector-type-no-unknown\\n      display: table-cell;\\n    }\\n  }\\n\\n  .govuk-fieldset__legend {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n\\n    // Fix legend text wrapping in Edge and IE\\n    // 1. IE9-11 & Edge 12-13\\n    // 2. IE8-11\\n    box-sizing: border-box; // 1\\n    display: table;         // 2\\n    max-width: 100%;        // 1\\n    margin-bottom: govuk-spacing(2);\\n    padding: 0;\\n\\n    white-space: normal;    // 1\\n  }\\n\\n  // Modifiers that make legends look more like their equivalent headings\\n\\n  .govuk-fieldset__legend--xl {\\n    @include govuk-font($size: 48, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-fieldset__legend--l {\\n    @include govuk-font($size: 36, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-fieldset__legend--m {\\n    @include govuk-font($size: 24, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-fieldset__legend--s {\\n    @include govuk-font($size: 19, $weight: bold);\\n  }\\n\\n  // When the legend contains an H1, we want the H1 to inherit all styles from\\n  // the legend. Effectively we want to be able to treat the heading as if it is\\n  // not there.\\n  .govuk-fieldset__heading {\\n    margin: 0;\\n    font-size: inherit;\\n    font-weight: inherit;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/hint\\\") {\\n  .govuk-hint {\\n    @include govuk-font($size: 19);\\n\\n    display: block;\\n\\n    margin-bottom: govuk-spacing(3);\\n\\n    color: $govuk-secondary-text-colour;\\n  }\\n\\n  // Reduces margin-bottom of hint when used after the default label (no class)\\n  // or govuk-label--s for better vertical alignment.\\n\\n  // This adjustment will not work when the label is inside the <h1>, however it\\n  // is unlikely that the default or govuk-label--s class would be used in this\\n  // case.\\n\\n  // This adjustment will not work in browsers that do not support :not().\\n  // Users with these browsers will see the default size margin (5px larger).\\n\\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  // Reduces margin-bottom of hint when used after the default legend (no class)\\n  // or govuk-fieldset__legend--s for better vertical alignment.\\n\\n  // This adjustment will not work when the legend is outside the <h1>, however\\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\\n  // used in this case.\\n\\n  // This adjustment will not work in browsers that do not support :not().\\n  // Users with these browsers will see the default size margin (5px larger).\\n\\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  // Reduces visual spacing of legend when there is a hint\\n  .govuk-fieldset__legend + .govuk-hint {\\n    margin-top: -(govuk-spacing(1));\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/label\\\") {\\n  .govuk-label {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n\\n    display: block;\\n\\n    margin-bottom: govuk-spacing(1);\\n  }\\n\\n  // Modifiers that make labels look more like their equivalent headings\\n\\n  .govuk-label--xl {\\n    @include govuk-font($size: 48, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-label--l {\\n    @include govuk-font($size: 36, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-label--m {\\n    @include govuk-font($size: 24, $weight: bold);\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  .govuk-label--s {\\n    @include govuk-font($size: 19, $weight: bold);\\n  }\\n\\n  // When the label is nested inside a heading, override the heading so that it\\n  // does not have a margin. Effectively we want to be able to treat the heading\\n  // as if it is not there.\\n  //\\n  // This breaks BEM conventions because it exists as a parent of the 'block',\\n  // so we can't really consider an element.\\n  .govuk-label-wrapper {\\n    margin: 0;\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../fieldset/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/checkboxes\\\") {\\n\\n  $govuk-touch-target-size: 44px;\\n  $govuk-checkboxes-size: 40px;\\n  $govuk-small-checkboxes-size: 24px;\\n  $govuk-checkboxes-label-padding-left-right: govuk-spacing(3);\\n\\n  .govuk-checkboxes__item {\\n    @include govuk-font($size: 19);\\n\\n    display: block;\\n    position: relative;\\n\\n    min-height: $govuk-checkboxes-size;\\n\\n    margin-bottom: govuk-spacing(2);\\n    padding-left: $govuk-checkboxes-size;\\n\\n    clear: left;\\n  }\\n\\n  .govuk-checkboxes__item:last-child,\\n  .govuk-checkboxes__item:last-of-type {\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-checkboxes__input {\\n    $input-offset: ($govuk-touch-target-size - $govuk-checkboxes-size) / 2;\\n\\n    cursor: pointer;\\n\\n    // IE8 doesn’t support pseudo-elements, so we don’t want to hide native\\n    // elements there.\\n    @include govuk-not-ie8 {\\n      position: absolute;\\n\\n      z-index: 1;\\n      top: $input-offset * -1;\\n      left: $input-offset * -1;\\n\\n      width: $govuk-touch-target-size;\\n      height: $govuk-touch-target-size;\\n      margin: 0;\\n\\n      opacity: 0;\\n    }\\n\\n    @include govuk-if-ie8 {\\n      margin-top: 10px;\\n      margin-right: $govuk-checkboxes-size / -2;\\n      margin-left: $govuk-checkboxes-size / -2;\\n      float: left;\\n\\n      // add focus outline to input\\n      &:focus {\\n        outline: $govuk-focus-width solid $govuk-focus-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-checkboxes__label {\\n    display: inline-block;\\n    margin-bottom: 0;\\n    padding: 8px $govuk-checkboxes-label-padding-left-right govuk-spacing(1);\\n    cursor: pointer;\\n    // remove 300ms pause on mobile\\n    -ms-touch-action: manipulation;\\n        touch-action: manipulation;\\n  }\\n\\n  // [ ] Check box\\n  .govuk-checkboxes__label:before {\\n    content: \\\"\\\";\\n    box-sizing: border-box;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: $govuk-checkboxes-size;\\n    height: $govuk-checkboxes-size;\\n    border: $govuk-border-width-form-element solid currentColor;\\n    background: transparent;\\n  }\\n\\n  // ✔ Check mark\\n  //\\n  // The check mark is a box with a border on the left and bottom side (└──),\\n  // rotated 45 degrees\\n  .govuk-checkboxes__label:after {\\n    content: \\\"\\\";\\n    box-sizing: border-box;\\n\\n    position: absolute;\\n    top: 11px;\\n    left: 9px;\\n    width: 23px;\\n    height: 12px;\\n\\n    -webkit-transform: rotate(-45deg);\\n\\n        -ms-transform: rotate(-45deg);\\n\\n            transform: rotate(-45deg);\\n    border: solid;\\n    border-width: 0 0 5px 5px;\\n    // Fix bug in IE11 caused by transform rotate (-45deg).\\n    // See: alphagov/govuk_elements/issues/518\\n    border-top-color: transparent;\\n\\n    opacity: 0;\\n\\n    background: transparent;\\n  }\\n\\n  .govuk-checkboxes__hint {\\n    display: block;\\n    padding-right: $govuk-checkboxes-label-padding-left-right;\\n    padding-left: $govuk-checkboxes-label-padding-left-right;\\n  }\\n\\n  // Focused state\\n  .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n    border-width: 4px;\\n    box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\\n  }\\n\\n  // Selected state\\n  .govuk-checkboxes__input:checked + .govuk-checkboxes__label:after {\\n    opacity: 1;\\n  }\\n\\n  // Disabled state\\n  .govuk-checkboxes__input:disabled,\\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n    cursor: default;\\n  }\\n\\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\\n    opacity: .5;\\n  }\\n\\n  // =========================================================\\n  // Conditional reveals\\n  // =========================================================\\n\\n  // The narrow border is used in the conditional reveals because the border has\\n  // to be an even number in order to be centred under the 40px checkbox or radio.\\n  $conditional-border-width: $govuk-border-width-narrow;\\n  // Calculate the amount of padding needed to keep the border centered against the checkbox.\\n  $conditional-border-padding: ($govuk-checkboxes-size / 2) - ($conditional-border-width / 2);\\n  // Move the border centered with the checkbox\\n  $conditional-margin-left: $conditional-border-padding;\\n  // Move the contents of the conditional inline with the label\\n  $conditional-padding-left: $conditional-border-padding + $govuk-checkboxes-label-padding-left-right;\\n\\n  .govuk-checkboxes__conditional {\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n    margin-left: $conditional-margin-left;\\n    padding-left: $conditional-padding-left;\\n    border-left: $conditional-border-width solid $govuk-border-colour;\\n\\n    .js-enabled &--hidden {\\n      display: none;\\n    }\\n\\n    & > :last-child {\\n      margin-bottom: 0;\\n    }\\n  }\\n\\n  // =========================================================\\n  // Small checkboxes\\n  // =========================================================\\n\\n  .govuk-checkboxes--small {\\n\\n    $input-offset: ($govuk-touch-target-size - $govuk-small-checkboxes-size) / 2;\\n    $label-offset: $govuk-touch-target-size - $input-offset;\\n\\n    .govuk-checkboxes__item {\\n      @include govuk-clearfix;\\n      min-height: 0;\\n      margin-bottom: 0;\\n      padding-left: $label-offset;\\n      float: left;\\n    }\\n\\n    // Shift the touch target into the left margin so that the visible edge of\\n    // the control is aligned\\n    //\\n    //   ┆What colours do you like?\\n    //  ┌┆───┐\\n    //  │┆[] │ Purple\\n    //  └┆▲──┘\\n    //  ▲┆└─ Check box pseudo element, aligned with margin\\n    //  └─── Touch target (invisible input), shifted into the margin\\n    .govuk-checkboxes__input {\\n      @include govuk-not-ie8 {\\n        left: $input-offset * -1;\\n      }\\n\\n      @include govuk-if-ie8 {\\n        margin-left: $govuk-small-checkboxes-size * -1;\\n      }\\n    }\\n\\n    // Adjust the size and position of the label.\\n    //\\n    // Unlike larger checkboxes, we also have to float the label in order to\\n    // 'shrink' it, preventing the hover state from kicking in across the full\\n    // width of the parent element.\\n    .govuk-checkboxes__label {\\n      margin-top: -2px;\\n      padding: 13px govuk-spacing(3) 13px 1px;\\n      float: left;\\n\\n      @include govuk-media-query($from: tablet) {\\n        padding: 11px govuk-spacing(3) 10px 1px;\\n      }\\n    }\\n\\n    // [ ] Check box\\n    //\\n    // Reduce the size of the check box [1], vertically center it within the\\n    // touch target [2]\\n    .govuk-checkboxes__label:before {\\n      top: $input-offset - $govuk-border-width-form-element; // 2\\n      width: $govuk-small-checkboxes-size; // 1\\n      height: $govuk-small-checkboxes-size; // 1\\n    }\\n\\n    // ✔ Check mark\\n    //\\n    // Reduce the size of the check mark and re-align within the checkbox\\n    .govuk-checkboxes__label:after {\\n      top: 15px;\\n      left: 6px;\\n      width: 12px;\\n      height: 6.5px;\\n      border-width: 0 0 3px 3px;\\n    }\\n\\n    // Fix position of hint with small checkboxes\\n    //\\n    // Do not use hints with small checkboxes – because they're within the input\\n    // wrapper they trigger the hover state, but clicking them doesn't actually\\n    // activate the control.\\n    //\\n    // (If you do use them, they won't look completely broken... but seriously,\\n    // don't use them)\\n    .govuk-checkboxes__hint {\\n      padding: 0;\\n      clear: both;\\n    }\\n\\n    // Align conditional reveals with small checkboxes\\n    .govuk-checkboxes__conditional {\\n      $margin-left: ($govuk-small-checkboxes-size / 2) - ($conditional-border-width / 2);\\n      margin-left: $margin-left;\\n      padding-left: $label-offset - ($margin-left + $conditional-border-width);\\n      clear: both;\\n    }\\n\\n    // Hover state for small checkboxes.\\n    //\\n    // We use a hover state for small checkboxes because the touch target size\\n    // is so much larger than their visible size, and so we need to provide\\n    // feedback to the user as to which checkbox they will select when their\\n    // cursor is outside of the visible area.\\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n      box-shadow: 0 0 0 $govuk-hover-width $govuk-hover-colour;\\n    }\\n\\n    // Because we've overridden the border-shadow provided by the focus state,\\n    // we need to redefine that too.\\n    //\\n    // We use two box shadows, one that restores the original focus state [1]\\n    // and another that then applies the hover state [2].\\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n      box-shadow:\\n        0 0 0 $govuk-focus-width $govuk-focus-colour, // 1\\n        0 0 0 $govuk-hover-width $govuk-hover-colour; // 2\\n    }\\n\\n    // For devices that explicitly don't support hover, don't provide a hover\\n    // state (e.g. on touch devices like iOS).\\n    //\\n    // We can't use `@media (hover: hover)` because we wouldn't get the hover\\n    // state in browsers that don't support `@media (hover)` (like Internet\\n    // Explorer) – so we have to 'undo' the hover state instead.\\n    @media (hover: none), (pointer: coarse) {\\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\\n        box-shadow: initial;\\n      }\\n\\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\\n        box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/textarea\\\") {\\n  .govuk-textarea {\\n    @include govuk-font($size: 19, $line-height: 1.25);\\n\\n    box-sizing: border-box; // should this be global?\\n    display: block;\\n    width: 100%;\\n    min-height: 40px;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n    padding: govuk-spacing(1);\\n\\n    resize: vertical;\\n\\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\\n    border-radius: 0;\\n\\n    -webkit-appearance: none;\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n      // Ensure outline appears outside of the element\\n      outline-offset: 0;\\n      // Double the border by adding its width again. Use `box-shadow` to do\\n      // this instead of changing `border-width` (which changes element size) and\\n      // since `outline` is already used for the yellow focus state.\\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\\n\\n      @include govuk-if-ie8 {\\n        // IE8 doesn't support `box-shadow` so double the border with\\n        // `border-width`.\\n        border-width: $govuk-border-width-form-element * 2;\\n      }\\n    }\\n  }\\n\\n  .govuk-textarea--error {\\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\\n\\n    &:focus {\\n      border-color: $govuk-input-border-colour;\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n@import \\\"../textarea/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/character-count\\\") {\\n  .govuk-character-count {\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n\\n    .govuk-form-group,\\n    .govuk-textarea {\\n      margin-bottom: govuk-spacing(1);\\n    }\\n  }\\n\\n  .govuk-character-count__message {\\n    @include govuk-font($size: false, $tabular: true);\\n    margin-top: 0;\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-character-count__message--disabled {\\n    visibility: hidden;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/cookie-banner\\\") {\\n\\n  // This needs to be kept in sync with the header component's styles\\n  $border-bottom-width: govuk-spacing(2);\\n\\n  .govuk-cookie-banner {\\n    @include govuk-font($size: 19);\\n\\n    padding-top: govuk-spacing(4);\\n    // The component does not set bottom spacing.\\n    // The bottom spacing should be created by the items inside the component.\\n\\n    // Visually separate the cookie banner from content underneath\\n    // when user changes colours in their browser.\\n    border-bottom: $border-bottom-width solid transparent;\\n\\n    background-color: govuk-colour(\\\"light-grey\\\", $legacy: \\\"grey-3\\\");\\n  }\\n\\n  // Support older browsers which don't hide elements with the `hidden` attribute\\n  // when user hides the whole cookie banner with a 'Hide' button.\\n  .govuk-cookie-banner[hidden] {\\n    display: none;\\n  }\\n\\n  .govuk-cookie-banner__message {\\n    // Remove the extra height added by the separator border.\\n    margin-bottom: -$border-bottom-width;\\n\\n    &[hidden] {\\n      // Support older browsers which don't hide elements with the `hidden` attribute\\n      // when the visibility of cookie and replacement messages is toggled.\\n      display: none;\\n    }\\n\\n    &:focus {\\n      // Remove the native visible focus indicator when the element is programmatically focused.\\n      //\\n      // The focused cookie banner is the first element on the page and the last thing the user\\n      // interacted with prior to it gaining focus.\\n      // We therefore assume that moving focus to it is not going to surprise users, and that giving\\n      // it a visible focus indicator could be more confusing than helpful, especially as the\\n      // element is not normally keyboard operable.\\n      //\\n      // We have flagged this in the research section of the guidance as something to monitor.\\n      //\\n      // A related discussion: https://github.com/w3c/wcag/issues/1001\\n      outline: none;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/summary-list\\\") {\\n  .govuk-summary-list {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    @include govuk-media-query($from: tablet) {\\n      display: table;\\n      width: 100%;\\n      table-layout: fixed; // Required to allow us to wrap words that overflow.\\n    }\\n    margin: 0; // Reset default user agent styles\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-summary-list__row {\\n    @include govuk-media-query($until: tablet) {\\n      margin-bottom: govuk-spacing(3);\\n      border-bottom: 1px solid $govuk-border-colour;\\n    }\\n    @include govuk-media-query($from: tablet) {\\n      display: table-row;\\n    }\\n  }\\n\\n  .govuk-summary-list__key,\\n  .govuk-summary-list__value,\\n  .govuk-summary-list__actions {\\n    margin: 0; // Reset default user agent styles\\n\\n    @include govuk-media-query($from: tablet) {\\n      display: table-cell;\\n      padding-top: govuk-spacing(2);\\n      padding-right: govuk-spacing(4);\\n      padding-bottom: govuk-spacing(2);\\n      border-bottom: 1px solid $govuk-border-colour;\\n    }\\n  }\\n\\n  .govuk-summary-list__actions {\\n    margin-bottom: govuk-spacing(3);\\n    @include govuk-media-query($from: tablet) {\\n      width: 20%;\\n      padding-right: 0;\\n      text-align: right;\\n    }\\n  }\\n\\n  .govuk-summary-list__key,\\n  .govuk-summary-list__value {\\n    // Automatic wrapping for unbreakable text (e.g. URLs)\\n    word-wrap: break-word; // Fallback for older browsers only\\n    overflow-wrap: break-word;\\n  }\\n\\n  .govuk-summary-list__key {\\n    margin-bottom: govuk-spacing(1);\\n    @include govuk-typography-weight-bold;\\n    @include govuk-media-query($from: tablet) {\\n      width: 30%;\\n    }\\n  }\\n\\n  .govuk-summary-list__value {\\n    @include govuk-media-query($until: tablet) {\\n      margin-bottom: govuk-spacing(3);\\n    }\\n    @include govuk-media-query($from: tablet) {\\n      width: 50%;\\n    }\\n  }\\n\\n  // Expand width when value is last column (no action)\\n  .govuk-summary-list__value:last-child {\\n    @include govuk-media-query($from: tablet) {\\n      width: 70%;\\n    }\\n  }\\n\\n  .govuk-summary-list__value > p {\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  .govuk-summary-list__value > :last-child {\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-summary-list__actions-list {\\n    width: 100%;\\n    margin: 0; // Reset default user agent styles\\n    padding: 0; // Reset default user agent styles\\n  }\\n\\n  .govuk-summary-list__actions-list-item {\\n    display: inline;\\n    margin-right: govuk-spacing(2);\\n    padding-right: govuk-spacing(2);\\n  }\\n\\n  // In older browsers such as IE8, :last-child is not available,\\n  // so only show the border divider where it is available.\\n  .govuk-summary-list__actions-list-item:not(:last-child) {\\n    border-right: 1px solid $govuk-border-colour;\\n  }\\n\\n  .govuk-summary-list__actions-list-item:last-child {\\n    margin-right: 0;\\n    padding-right: 0;\\n    border: 0;\\n  }\\n\\n  // No border on entire summary list\\n  .govuk-summary-list--no-border {\\n    @include govuk-media-query($until: tablet) {\\n      .govuk-summary-list__row {\\n        border: 0;\\n      }\\n    }\\n\\n    @include govuk-media-query($from: tablet) {\\n      .govuk-summary-list__key,\\n      .govuk-summary-list__value,\\n      .govuk-summary-list__actions {\\n        // Remove 1px border, add 1px height back on\\n        padding-bottom: govuk-spacing(2) + 1px;\\n        border: 0;\\n      }\\n    }\\n  }\\n\\n  // No border on specific rows\\n  .govuk-summary-list__row--no-border {\\n    @include govuk-media-query($until: tablet) {\\n      border: 0;\\n    }\\n\\n    @include govuk-media-query($from: tablet) {\\n      .govuk-summary-list__key,\\n      .govuk-summary-list__value,\\n      .govuk-summary-list__actions {\\n        // Remove 1px border, add 1px height back on\\n        padding-bottom: govuk-spacing(2) + 1px;\\n        border: 0;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/input\\\") {\\n  .govuk-input {\\n    @include govuk-font($size: 19);\\n\\n    box-sizing: border-box;\\n    width: 100%;\\n    height: 40px;\\n    @if $govuk-typography-use-rem {\\n      height: govuk-px-to-rem(40px);\\n    }\\n    margin-top: 0;\\n\\n    padding: govuk-spacing(1);\\n    // setting any background-color makes text invisible when changing colours to dark backgrounds in Firefox (https://bugzilla.mozilla.org/show_bug.cgi?id=1335476)\\n    // as background-color and color need to always be set together, color should not be set either\\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\\n    border-radius: 0;\\n\\n    // Disable inner shadow and remove rounded corners\\n    -webkit-appearance: none;\\n       -moz-appearance: none;\\n            appearance: none;\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n      // Ensure outline appears outside of the element\\n      outline-offset: 0;\\n      // Double the border by adding its width again. Use `box-shadow` for this // instead of changing `border-width` - this is for consistency with\\n      // components such as textarea where we avoid changing `border-width` as\\n      // it will change the element size. Also, `outline` cannot be utilised\\n      // here as it is already used for the yellow focus state.\\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\\n\\n      @include govuk-if-ie8 {\\n        // IE8 doesn't support `box-shadow` so double the border with\\n        // `border-width`.\\n        border-width: $govuk-border-width-form-element * 2;\\n      }\\n    }\\n  }\\n\\n  .govuk-input::-webkit-outer-spin-button,\\n  .govuk-input::-webkit-inner-spin-button {\\n    margin: 0;\\n    -webkit-appearance: none;\\n  }\\n\\n  .govuk-input[type=\\\"number\\\"] {\\n    -moz-appearance: textfield;\\n  }\\n\\n  .govuk-input--error {\\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\\n\\n    &:focus {\\n      border-color: $govuk-input-border-colour;\\n    }\\n  }\\n\\n  // The ex measurements are based on the number of W's that can fit inside the input\\n  // Extra space is left on the right hand side to allow for the Safari prefill icon\\n  // Linear regression estimation based on visual tests: y = 1.76 + 1.81x\\n\\n  .govuk-input--width-30 {\\n    max-width: 56ex + 3ex;\\n  }\\n\\n  .govuk-input--width-20 {\\n    max-width: 38ex + 3ex;\\n  }\\n\\n  .govuk-input--width-10 {\\n    max-width: 20ex + 3ex;\\n  }\\n\\n  .govuk-input--width-5 {\\n    max-width: 10.8ex;\\n  }\\n\\n  .govuk-input--width-4 {\\n    max-width: 9ex;\\n  }\\n\\n  .govuk-input--width-3 {\\n    max-width: 7.2ex;\\n  }\\n\\n  .govuk-input--width-2 {\\n    max-width: 5.4ex;\\n  }\\n\\n  .govuk-input__wrapper {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n\\n    .govuk-input {\\n      -webkit-box-flex: 0;\\n          -ms-flex: 0 1 auto;\\n              flex: 0 1 auto;\\n    }\\n\\n    .govuk-input:focus {\\n      // Hack to stop focus style being overlapped by the suffix\\n      z-index: 1;\\n    }\\n\\n    // Split prefix/suffix onto separate lines on narrow screens\\n    @include govuk-media-query($until: mobile) {\\n      display: block;\\n\\n      .govuk-input {\\n        // Set max-width to override potential width override class on the input\\n        max-width: 100%;\\n      }\\n    }\\n  }\\n\\n  .govuk-input__prefix,\\n  .govuk-input__suffix {\\n    @include govuk-font($size: 19);\\n\\n    box-sizing: border-box;\\n    display: inline-block;\\n    min-width: 40px;\\n    @if $govuk-typography-use-rem {\\n      min-width: govuk-px-to-rem(40px);\\n    }\\n    height: 40px;\\n    @if $govuk-typography-use-rem {\\n      height: govuk-px-to-rem(40px);\\n    }\\n\\n    padding: govuk-spacing(1);\\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\\n    background-color: govuk-colour(\\\"light-grey\\\", $legacy: \\\"grey-3\\\");\\n\\n    text-align: center;\\n    @include govuk-media-query($until: tablet) {\\n      line-height: 1.6;\\n    }\\n    white-space: nowrap;\\n\\n    // Emphasise non-editable status of prefixes and suffixes\\n    cursor: default;\\n\\n    -webkit-box-flex: 0;\\n\\n        -ms-flex: 0 0 auto;\\n\\n            flex: 0 0 auto;\\n\\n    // Split prefix/suffix onto separate lines on narrow screens\\n    @include govuk-media-query($until: mobile) {\\n      display: block;\\n      height: 100%;\\n      white-space: normal;\\n    }\\n  }\\n\\n  .govuk-input__prefix {\\n    @include govuk-media-query($until: mobile) {\\n      border-bottom: 0;\\n    }\\n    @include govuk-media-query($from: mobile) {\\n      @include govuk-not-ie8 {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n\\n  // Split prefix/suffix onto separate lines on narrow screens\\n  .govuk-input__suffix {\\n    @include govuk-media-query($until: mobile) {\\n      border-top: 0;\\n    }\\n    @include govuk-media-query($from: mobile) {\\n      @include govuk-not-ie8 {\\n        border-left: 0;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../input/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/date-input\\\") {\\n  .govuk-date-input {\\n    @include govuk-clearfix;\\n    // font-size: 0 removes whitespace caused by inline-block\\n    font-size: 0;\\n  }\\n\\n  .govuk-date-input__item {\\n    display: inline-block;\\n    margin-right: govuk-spacing(4);\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-date-input__label {\\n    display: block;\\n  }\\n\\n  .govuk-date-input__input {\\n    margin-bottom: 0;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/details\\\") {\\n  .govuk-details {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n\\n    display: block;\\n  }\\n\\n  .govuk-details__summary {\\n    // Make the focus outline shrink-wrap the text content of the summary\\n    display: inline-block;\\n\\n    // Absolutely position the marker against this element\\n    position: relative;\\n\\n    margin-bottom: govuk-spacing(1);\\n\\n    // Allow for absolutely positioned marker and align with disclosed text\\n    padding-left: govuk-spacing(4) + $govuk-border-width;\\n\\n    // Style the summary to look like a link...\\n    color: $govuk-link-colour;\\n    cursor: pointer;\\n\\n    &:hover {\\n      color: $govuk-link-hover-colour;\\n    }\\n\\n    &:focus {\\n      @include govuk-focused-text;\\n    }\\n  }\\n\\n  // ...but only underline the text, not the arrow\\n  .govuk-details__summary-text {\\n    text-decoration: underline;\\n  }\\n\\n  // Remove the underline when focussed to avoid duplicate borders\\n  .govuk-details__summary:focus .govuk-details__summary-text {\\n    text-decoration: none;\\n  }\\n\\n  // Remove the default details marker so we can style our own consistently and\\n  // ensure it displays in Firefox (see implementation.md for details)\\n  .govuk-details__summary::-webkit-details-marker {\\n    display: none;\\n  }\\n\\n  // Append our own open / closed marker using a pseudo-element\\n  .govuk-details__summary:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n\\n    top: -1px;\\n    bottom: 0;\\n    left: 0;\\n\\n    margin: auto;\\n\\n    @include govuk-shape-arrow($direction: right, $base: 14px);\\n\\n    .govuk-details[open] > & {\\n      @include govuk-shape-arrow($direction: down, $base: 14px);\\n    }\\n  }\\n\\n  .govuk-details__text {\\n    padding: govuk-spacing(3);\\n    padding-left: govuk-spacing(4);\\n    border-left: $govuk-border-width solid $govuk-border-colour;\\n  }\\n\\n  .govuk-details__text p {\\n    margin-top: 0;\\n    margin-bottom: govuk-spacing(4);\\n  }\\n\\n  .govuk-details__text > :last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n\",\"////\\n/// @group helpers/shapes\\n////\\n\\n/// Calculate the height of an equilateral triangle\\n///\\n/// Multiplying half the length of the base of an equilateral triangle by the\\n/// square root of three gives us its height. We use 1.732 as an approximation.\\n///\\n/// @param {Number} $base - Length of the base of the triangle\\n/// @return {Number} Calculated height of the triangle\\n/// @access private\\n\\n@function _govuk-equilateral-height($base) {\\n  $square-root-of-three: 1.732;\\n\\n  @return ($base / 2) * $square-root-of-three;\\n}\\n\\n/// Arrow mixin\\n///\\n/// Generate Arrows (triangles) by using a mix of transparent (1) and coloured\\n/// borders. The coloured borders inherit the text colour of the element (2).\\n///\\n/// Ensure the arrow is rendered correctly if browser colours are overridden by\\n/// providing a clip path (3). Without this the transparent borders are\\n/// overridden to become visible which results in a square.\\n///\\n/// We need both because older browsers do not support clip-path.\\n///\\n/// @param {String} $direction - Direction for arrow: up, right, down, left.\\n/// @param {Number} $base - Length of the triangle 'base' side\\n/// @param {Number} $height [null] - Height of triangle. Omit for equilateral.\\n/// @param {String} $display [block] - CSS display property of the arrow\\n///\\n/// @access public\\n\\n@mixin govuk-shape-arrow($direction, $base, $height: null, $display: block) {\\n  display: $display;\\n\\n  width: 0;\\n  height: 0;\\n\\n  border-style: solid;\\n  border-color: transparent; // 1\\n\\n  $perpendicular: $base / 2;\\n\\n  @if ($height == null) {\\n    $height: _govuk-equilateral-height($base);\\n  }\\n\\n  @if $direction == \\\"up\\\" {\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // 3\\n\\n    border-width: 0 $perpendicular $height $perpendicular;\\n    border-bottom-color: inherit; // 2\\n  } @else if $direction == \\\"right\\\" {\\n    -webkit-clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\\n            clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // 3\\n\\n    border-width: $perpendicular 0 $perpendicular $height;\\n    border-left-color: inherit; // 2\\n  } @else if $direction == \\\"down\\\" {\\n    -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\\n            clip-path: polygon(0% 0%, 50% 100%, 100% 0%); // 3\\n\\n    border-width: $height $perpendicular 0 $perpendicular;\\n    border-top-color: inherit; // 2\\n  } @else if $direction == \\\"left\\\" {\\n    -webkit-clip-path: polygon(0% 50%, 100% 100%, 100% 0%);\\n            clip-path: polygon(0% 50%, 100% 100%, 100% 0%); // 3\\n\\n    border-width: $perpendicular $height $perpendicular 0;\\n    border-right-color: inherit; // 2\\n  } @else {\\n    @error \\\"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\\\";\\n  }\\n}\\n\",\"@import \\\"../../core/lists\\\";\\n\\n@include govuk-exports(\\\"govuk/component/error-summary\\\") {\\n  .govuk-error-summary {\\n    @include govuk-text-colour;\\n    @include govuk-responsive-padding(4);\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n\\n    border: $govuk-border-width solid $govuk-error-colour;\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n    }\\n  }\\n\\n  .govuk-error-summary__title {\\n    @include govuk-font($size: 24, $weight: bold);\\n\\n    margin-top: 0;\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-error-summary__body {\\n    @include govuk-font($size: 19);\\n\\n    p {\\n      margin-top: 0;\\n      @include govuk-responsive-margin(4, \\\"bottom\\\");\\n    }\\n  }\\n\\n  // Cross-component class - adjusts styling of list component\\n  .govuk-error-summary__list {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-error-summary__list a {\\n    @include govuk-typography-weight-bold;\\n    @include govuk-link-common;\\n    @include govuk-link-style-error;\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/file-upload\\\") {\\n  $component-padding: govuk-spacing(1);\\n\\n  .govuk-file-upload {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    padding-top: $component-padding;\\n    padding-bottom: $component-padding;\\n\\n    &:focus {\\n      // \\\"Yank\\\" the padding with negative margin to avoid a jump\\n      // when element is focused\\n      margin-right: -$component-padding;\\n      margin-left: -$component-padding;\\n      padding-right: $component-padding;\\n      padding-left: $component-padding;\\n\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n      // Use `box-shadow` to add border instead of changing `border-width`\\n      // (which changes element size) and since `outline` is already used for the\\n      // yellow focus state.\\n      box-shadow: inset 0 0 0 4px $govuk-input-border-colour;\\n\\n      @include govuk-if-ie8 {\\n        // IE8 doesn't support `box-shadow` so add an actual border\\n        border: 4px solid $govuk-input-border-colour;\\n      }\\n    }\\n\\n    // Set \\\"focus-within\\\" to fix https://bugzilla.mozilla.org/show_bug.cgi?id=1430196\\n    // so that component receives focus in Firefox.\\n    // This can't be set together with `:focus` as all versions of IE fail\\n    // to recognise `focus-within` and don't set any styles from the block\\n    // when it's a selector.\\n    &:focus-within {\\n      margin-right: -$component-padding;\\n      margin-left: -$component-padding;\\n      padding-right: $component-padding;\\n      padding-left: $component-padding;\\n\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n\\n      box-shadow: inset 0 0 0 4px $govuk-input-border-colour;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/footer\\\") {\\n\\n  $govuk-footer-background: $govuk-canvas-background-colour;\\n  $govuk-footer-border: $govuk-border-colour;\\n  // This variable can be removed entirely once the legacy palette goes away,\\n  // as it'll just be the same as $govuk-footer-border.\\n  $govuk-footer-border-top: $govuk-border-colour;\\n  $govuk-footer-text: $govuk-text-colour;\\n  $govuk-footer-link: $govuk-footer-text;\\n  $govuk-footer-link-hover: false;\\n\\n  @if ($govuk-use-legacy-palette) {\\n    $govuk-footer-border-top: #a1acb2;\\n    $govuk-footer-border: govuk-colour(\\\"grey-2\\\");\\n    $govuk-footer-text: #454a4c;\\n    $govuk-footer-link: $govuk-footer-text;\\n\\n    // Only used with the legacy palette\\n    $govuk-footer-link-hover: #171819;\\n  }\\n\\n  // Based on the govuk-crest-2x.png image dimensions.\\n  $govuk-footer-crest-image-width-2x: 250px;\\n  $govuk-footer-crest-image-height-2x: 204px;\\n  // Half the 2x image so that it fits the regular 1x size.\\n  $govuk-footer-crest-image-width: ($govuk-footer-crest-image-width-2x / 2);\\n  $govuk-footer-crest-image-height: ($govuk-footer-crest-image-height-2x / 2);\\n\\n  .govuk-footer {\\n    @include govuk-font($size: 16);\\n    @include govuk-responsive-padding(7, \\\"top\\\");\\n    @include govuk-responsive-padding(5, \\\"bottom\\\");\\n\\n    border-top: 1px solid $govuk-footer-border-top;\\n    color: $govuk-footer-text;\\n    background: $govuk-footer-background;\\n  }\\n\\n  .govuk-footer__link {\\n    @if ($govuk-use-legacy-palette) {\\n      &:link,\\n      &:visited {\\n        color: $govuk-footer-link;\\n      }\\n\\n      &:hover,\\n      &:active {\\n        color: $govuk-footer-link-hover;\\n      }\\n    } @else {\\n      &:link,\\n      &:visited,\\n      &:hover,\\n      &:active {\\n        color: $govuk-footer-link;\\n      }\\n    }\\n\\n    &:focus {\\n      @include govuk-focused-text;\\n    }\\n\\n    // alphagov/govuk_template includes a specific a:link:focus selector\\n    // designed to make unvisited links a slightly darker blue when focussed, so\\n    // we need to override the text colour for that combination of selectors.\\n    @include govuk-compatibility(govuk_template) {\\n      &:link:focus {\\n        @include govuk-text-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-footer__section-break {\\n    margin: 0; // Reset `<hr>` default margins\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n    border: 0; // Reset `<hr>` default borders\\n    border-bottom: 1px solid $govuk-footer-border;\\n  }\\n\\n  .govuk-footer__meta {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex; // Support: Flexbox\\n    margin-right: -$govuk-gutter-half;\\n    margin-left: -$govuk-gutter-half;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap; // Support: Flexbox\\n    -webkit-box-align: end;\\n        -ms-flex-align: end;\\n            align-items: flex-end; // Support: Flexbox\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; // Support: Flexbox\\n  }\\n\\n  .govuk-footer__meta-item {\\n    margin-right: $govuk-gutter-half;\\n    margin-bottom: govuk-spacing(5);\\n    margin-left: $govuk-gutter-half;\\n  }\\n\\n  .govuk-footer__meta-item--grow {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; // Support: Flexbox\\n    @include govuk-media-query ($until: tablet) {\\n      -ms-flex-preferred-size: 320px;\\n          flex-basis: 320px; // Support: Flexbox\\n    }\\n  }\\n\\n  .govuk-footer__licence-logo {\\n    display: inline-block;\\n    margin-right: govuk-spacing(2);\\n    @include govuk-media-query ($until: desktop) {\\n      margin-bottom: govuk-spacing(3);\\n    }\\n    vertical-align: top;\\n  }\\n\\n  .govuk-footer__licence-description {\\n    display: inline-block;\\n  }\\n\\n  .govuk-footer__copyright-logo {\\n    display: inline-block;\\n    min-width: $govuk-footer-crest-image-width;\\n    padding-top: ($govuk-footer-crest-image-height + govuk-spacing(2));\\n    background-image: govuk-image-url(\\\"govuk-crest.png\\\");\\n    @include govuk-device-pixel-ratio {\\n      background-image: govuk-image-url(\\\"govuk-crest-2x.png\\\");\\n    }\\n    background-repeat: no-repeat;\\n    background-position: 50% 0%;\\n    background-size: $govuk-footer-crest-image-width $govuk-footer-crest-image-height;\\n    text-align: center;\\n    text-decoration: none;\\n    white-space: nowrap;\\n  }\\n\\n  .govuk-footer__inline-list {\\n    margin-top: 0;\\n    margin-bottom: govuk-spacing(3);\\n    padding: 0;\\n  }\\n\\n  .govuk-footer__meta-custom {\\n    margin-bottom: govuk-spacing(4);\\n  }\\n\\n  .govuk-footer__inline-list-item {\\n    display: inline-block;\\n    margin-right: govuk-spacing(3);\\n    margin-bottom: govuk-spacing(1);\\n  }\\n\\n  .govuk-footer__heading {\\n    @include govuk-responsive-margin(7, \\\"bottom\\\");\\n    padding-bottom: govuk-spacing(4);\\n    @include govuk-media-query ($until: tablet) {\\n      padding-bottom: govuk-spacing(2);\\n    }\\n    border-bottom: 1px solid $govuk-footer-border;\\n  }\\n\\n  .govuk-footer__navigation {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex; // Support: Flexbox\\n    margin-right: -$govuk-gutter-half;\\n    margin-left: -$govuk-gutter-half;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap; // Support: Flexbox\\n  }\\n\\n  .govuk-footer__section {\\n    display: inline-block;\\n    margin-right: $govuk-gutter-half;\\n    margin-bottom: $govuk-gutter;\\n    margin-left: $govuk-gutter-half;\\n    vertical-align: top;\\n    // Ensure columns take up equal width (typically one-half:one-half)\\n    -webkit-box-flex: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1; // Support: Flexbox\\n    -ms-flex-negative: 1;\\n        flex-shrink: 1; // Support: Flexbox\\n    @include govuk-media-query ($until: desktop) {\\n      // Make sure columns do not drop below 200px in width\\n      // Will typically result in wrapping, and end up in a single column on smaller screens.\\n      -ms-flex-preferred-size: 200px;\\n          flex-basis: 200px; // Support: Flexbox\\n    }\\n  }\\n\\n  // If there are only two sections, set the layout to be two-third:one-third on desktop\\n  @include govuk-media-query ($from: desktop) {\\n    // We match the first section with `:first-child`.\\n    // To ensure the section is one of two, we can count backwards using `:nth-last-child(2)`.\\n    .govuk-footer__section:first-child:nth-last-child(2) {\\n      -webkit-box-flex: 2;\\n          -ms-flex-positive: 2;\\n              flex-grow: 2; // Support: Flexbox\\n    }\\n  }\\n\\n  .govuk-footer__list {\\n    margin: 0;\\n    padding: 0;\\n    list-style: none;\\n    -webkit-column-gap: $govuk-gutter;\\n            column-gap: $govuk-gutter; // Support: Columns\\n  }\\n\\n  @include govuk-media-query ($from: desktop) {\\n    .govuk-footer__list--columns-2 {\\n      -webkit-column-count: 2;\\n              column-count: 2; // Support: Columns\\n    }\\n\\n    .govuk-footer__list--columns-3 {\\n      -webkit-column-count: 3;\\n              column-count: 3; // Support: Columns\\n    }\\n  }\\n\\n  .govuk-footer__list-item {\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n  }\\n\\n  .govuk-footer__list-item:last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n\",\"////\\n/// @group helpers\\n////\\n\\n/// Media query for retina images (device-pixel-ratio)\\n///\\n/// @param {Number} $ratio [2] - Device pixel ratio\\n/// @content Passed content will be outputted within the media query\\n///\\n/// @example scss - Providing a @2x image for screens that support it\\n///   background-image: govuk-image-url(\\\"my-image.png\\\");\\n///\\n///   @include govuk-device-pixel-ratio {\\n///     background-image: govuk-image-url(\\\"my-image-2x.png\\\");\\n///   }\\n///\\n/// @example scss - Using a custom ratio\\n///   background-image: govuk-image-url(\\\"my-image.png\\\");\\n///\\n///   @include govuk-device-pixel-ratio {\\n///     background-image: govuk-image-url(\\\"my-image-2x.png\\\");\\n///   }\\n///\\n///   @include govuk-device-pixel-ratio(3) {\\n///     background-image: govuk-image-url(\\\"my-image-3x.png\\\");\\n///   }\\n///\\n/// @access public\\n\\n@mixin govuk-device-pixel-ratio($ratio: 2) {\\n  // stylelint-disable indentation\\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\\n    only screen and (min-resolution: #{($ratio * 96)}dpi),\\n    only screen and (min-resolution: #{$ratio}dppx) {\\n      @content;\\n    }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/header\\\") {\\n\\n  $govuk-header-background: govuk-colour(\\\"black\\\");\\n  $govuk-header-border-color: $govuk-brand-colour;\\n  $govuk-header-border-width: govuk-spacing(2);\\n  $govuk-header-text: govuk-colour(\\\"white\\\");\\n  $govuk-header-link: govuk-colour(\\\"white\\\");\\n  $govuk-header-link-hover: govuk-colour(\\\"white\\\");\\n  $govuk-header-link-active: #1d8feb;\\n  $govuk-header-nav-item-border-color: #2e3133;\\n\\n  .govuk-header {\\n    @include govuk-font($size: 16);\\n\\n    border-bottom: govuk-spacing(2) solid govuk-colour(\\\"white\\\");\\n    color: $govuk-header-text;\\n    background: $govuk-header-background;\\n  }\\n\\n  .govuk-header__container--full-width {\\n    padding: 0 govuk-spacing(3);\\n    border-color: $govuk-header-border-color;\\n\\n    .govuk-header__menu-button {\\n      right: govuk-spacing(3);\\n    }\\n  }\\n\\n  .govuk-header__container {\\n    @include govuk-clearfix;\\n    position: relative;\\n    margin-bottom: -$govuk-header-border-width;\\n    padding-top: govuk-spacing(2);\\n    border-bottom: $govuk-header-border-width solid $govuk-header-border-color;\\n  }\\n\\n  .govuk-header__logotype {\\n    display: inline-block;\\n    margin-right: govuk-spacing(1);\\n  }\\n\\n  .govuk-header__logotype-crown {\\n    position: relative;\\n    top: -1px;\\n    margin-right: 1px;\\n    fill: currentColor;\\n    vertical-align: top;\\n  }\\n\\n  .govuk-header__logotype-crown-fallback-image {\\n    width: 36px;\\n    height: 32px;\\n    border: 0;\\n    vertical-align: middle;\\n  }\\n\\n  .govuk-header__product-name {\\n    @include govuk-font($size: 24, $line-height: 1);\\n    display: inline-table;\\n    padding-right: govuk-spacing(2);\\n  }\\n\\n  .govuk-header__link {\\n    text-decoration: none;\\n\\n    &:link,\\n    &:visited {\\n      color: $govuk-header-link;\\n    }\\n\\n    &:hover {\\n      text-decoration: underline;\\n    }\\n\\n    &:focus {\\n      @include govuk-focused-text;\\n    }\\n\\n    // alphagov/govuk_template includes a specific a:link:focus selector\\n    // designed to make unvisited links a slightly darker blue when focussed, so\\n    // we need to override the text colour for that combination of selectors.\\n    @include govuk-compatibility(govuk_template) {\\n      &:link:focus {\\n        @include govuk-text-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-header__link--homepage {\\n    // Font size needs to be set on the link so that the box sizing is correct\\n    // in Firefox\\n    @include govuk-font($size: false, $weight: bold);\\n\\n    display: inline-block;\\n    font-size: 30px; // We don't have a mixin that produces 30px font size\\n    line-height: 1;\\n\\n    &:link,\\n    &:visited {\\n      text-decoration: none;\\n    }\\n\\n    &:hover,\\n    &:active {\\n      // Negate the added border\\n      margin-bottom: -1px;\\n      // Omitting colour will use default value of currentColor – if we\\n      // specified currentColor explicitly IE8 would ignore this rule.\\n      border-bottom: 1px solid;\\n    }\\n\\n    // Remove any borders that show when focused and hovered.\\n    &:focus {\\n      margin-bottom: 0;\\n      border-bottom: 0;\\n    }\\n  }\\n\\n  .govuk-header__link--service-name {\\n    display: inline-block;\\n    margin-bottom: govuk-spacing(2);\\n    @include govuk-font($size: 24, $weight: bold);\\n  }\\n\\n  .govuk-header__logo,\\n  .govuk-header__content {\\n    box-sizing: border-box;\\n  }\\n\\n  .govuk-header__logo {\\n    @include govuk-responsive-margin(2, \\\"bottom\\\");\\n    padding-right: govuk-spacing(8);\\n\\n    @include govuk-media-query ($from: desktop) {\\n      width: 33.33%;\\n      padding-right: $govuk-gutter-half;\\n      float: left;\\n      vertical-align: top;\\n    }\\n  }\\n\\n  .govuk-header__content {\\n    @include govuk-media-query ($from: desktop) {\\n      width: 66.66%;\\n      padding-left: $govuk-gutter-half;\\n      float: left;\\n    }\\n  }\\n\\n  .govuk-header__menu-button {\\n    @include govuk-font($size: 16);\\n    display: none;\\n    position: absolute;\\n    top: govuk-spacing(4);\\n    right: 0;\\n    margin: 0;\\n    padding: 0;\\n    border: 0;\\n    color: $govuk-header-link;\\n    background: none;\\n\\n    &:hover {\\n      text-decoration: underline;\\n    }\\n\\n    &:focus {\\n      @include govuk-focused-text;\\n    }\\n\\n    &:after {\\n      @include govuk-shape-arrow($direction: down, $base: 10px, $display: inline-block);\\n      content: \\\"\\\";\\n      margin-left: govuk-spacing(1);\\n    }\\n\\n    @include govuk-media-query ($from: tablet) {\\n      top: govuk-spacing(3);\\n    }\\n  }\\n\\n  .govuk-header__menu-button--open {\\n    &:after {\\n      @include govuk-shape-arrow($direction: up, $base: 10px, $display: inline-block);\\n    }\\n  }\\n\\n  .govuk-header__navigation {\\n    @include govuk-responsive-margin(2, \\\"bottom\\\");\\n    display: block;\\n    margin: 0;\\n    padding: 0;\\n    list-style: none;\\n  }\\n\\n  .js-enabled {\\n    .govuk-header__menu-button {\\n      display: block;\\n      @include govuk-media-query ($from: desktop) {\\n        display: none;\\n      }\\n    }\\n\\n    .govuk-header__navigation {\\n      display: none;\\n      @include govuk-media-query ($from: desktop) {\\n        display: block;\\n      }\\n    }\\n\\n    .govuk-header__navigation--open {\\n      display: block;\\n    }\\n  }\\n\\n  .govuk-header__navigation--end {\\n    @include govuk-media-query ($from: desktop) {\\n      margin: 0;\\n      padding: govuk-spacing(1) 0;\\n      text-align: right;\\n    }\\n  }\\n\\n  .govuk-header__navigation--no-service-name {\\n    padding-top: govuk-spacing(7);\\n  }\\n\\n  .govuk-header__navigation-item {\\n    padding: govuk-spacing(2) 0;\\n    border-bottom: 1px solid $govuk-header-nav-item-border-color;\\n\\n    @include govuk-media-query ($from: desktop) {\\n      display: inline-block;\\n      margin-right: govuk-spacing(3);\\n      padding: govuk-spacing(1) 0;\\n      border: 0;\\n    }\\n\\n    a {\\n      @include govuk-font($size: 16, $weight: bold);\\n      white-space: nowrap;\\n    }\\n  }\\n\\n  .govuk-header__navigation-item--active {\\n    a {\\n      &:link,\\n      &:hover,\\n      &:visited {\\n        color: $govuk-header-link-active;\\n      }\\n\\n      // When focussed, the text colour needs to be darker to ensure that colour\\n      // contrast is still acceptable\\n      &:focus {\\n        color: $govuk-focus-text-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-header__navigation-item:last-child {\\n    margin-right: 0;\\n  }\\n\\n  @include govuk-media-query($media-type: print) {\\n    .govuk-header {\\n      border-bottom-width: 0;\\n      color: govuk-colour(\\\"black\\\");\\n      background: transparent;\\n    }\\n\\n    // Hide the inverted crown when printing in browsers that don't support SVG.\\n    .govuk-header__logotype-crown-fallback-image {\\n      display: none;\\n    }\\n\\n    .govuk-header__link {\\n      &:link,\\n      &:visited {\\n        color: govuk-colour(\\\"black\\\");\\n      }\\n\\n      // Do not append link href to GOV.UK link when printing (e.g. '(/)')\\n      &:after {\\n        display: none;\\n      }\\n    }\\n  }\\n\\n  @if $govuk-use-legacy-font {\\n    // Begin adjustments for font baseline offset\\n    // These should be removed when the font is updated with the correct baseline\\n    .govuk-header__logotype-crown,\\n    .govuk-header__logotype-crown-fallback-image {\\n      position: relative;\\n      top: -4px;\\n      vertical-align: middle;\\n    }\\n\\n    .govuk-header {\\n      $offset: 3px;\\n      padding-top: $offset;\\n    }\\n\\n    .govuk-header__link--homepage {\\n      line-height: 30px;\\n    }\\n    // End adjustments\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/inset-text\\\") {\\n  .govuk-inset-text {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    padding: govuk-spacing(3);\\n    // Margin top intended to collapse\\n    // This adds an additional 10px to the paragraph above\\n    @include govuk-responsive-margin(6, \\\"top\\\");\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n\\n    clear: both;\\n\\n    border-left: $govuk-border-width-wide solid $govuk-border-colour;\\n\\n    > :first-child {\\n      margin-top: 0;\\n    }\\n\\n    > :only-child,\\n    > :last-child {\\n      margin-bottom: 0;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/notification-banner\\\") {\\n  .govuk-notification-banner {\\n    @include govuk-font($size: 19);\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n\\n    border: $govuk-border-width solid $govuk-brand-colour;\\n\\n    background-color: $govuk-brand-colour;\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n    }\\n  }\\n\\n  .govuk-notification-banner__header {\\n    padding: 2px govuk-spacing(3) govuk-spacing(1);\\n\\n    // Ensures the notification header appears separate to the notification body text in high contrast mode\\n    border-bottom: 1px solid transparent;\\n\\n    @include govuk-media-query($from: tablet) {\\n      padding: 2px govuk-spacing(4) govuk-spacing(1);\\n    }\\n  }\\n\\n  .govuk-notification-banner__title {\\n    @include govuk-font($size: 19, $weight: bold);\\n\\n    margin: 0;\\n\\n    padding: 0;\\n\\n    color: govuk-colour(\\\"white\\\");\\n  }\\n\\n  .govuk-notification-banner__content {\\n    $padding-tablet: govuk-spacing(4);\\n    @include govuk-text-colour;\\n    padding: govuk-spacing(3);\\n\\n    background-color: $govuk-body-background-colour;\\n\\n    @include govuk-media-query($from: tablet) {\\n      padding: $padding-tablet;\\n    }\\n\\n    // Wrap content at the same place that a 2/3 grid column ends, to maintain\\n    // shorter line-lengths when the notification banner is full width\\n    > * {\\n      // When elements have their own padding (like lists), include the padding\\n      // in the max-width calculation\\n      box-sizing: border-box;\\n\\n      // Calculate the internal width of a two-thirds column...\\n      $two-col-width: ($govuk-page-width * 2 / 3) - ($govuk-gutter * 1 / 3);\\n\\n      // ...and then factor in the left border and padding\\n      $banner-exterior: ($padding-tablet + $govuk-border-width);\\n      max-width: $two-col-width - $banner-exterior;\\n    }\\n\\n    > :last-child {\\n      margin-bottom: 0;\\n    }\\n  }\\n\\n  .govuk-notification-banner__heading {\\n    @include govuk-font($size: 24, $weight: bold);\\n\\n    margin: 0 0 govuk-spacing(3) 0;\\n\\n    padding: 0;\\n  }\\n\\n  .govuk-notification-banner__link {\\n    @include govuk-link-common;\\n    @include govuk-link-style-no-visited-state;\\n  }\\n\\n  .govuk-notification-banner--success {\\n    border-color: $govuk-success-colour;\\n\\n    background-color: $govuk-success-colour;\\n\\n    .govuk-notification-banner__link {\\n      @include govuk-link-style-success;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/panel\\\") {\\n  .govuk-panel {\\n    @include govuk-font($size: 19);\\n\\n    box-sizing: border-box;\\n\\n    margin-bottom: govuk-spacing(3);\\n    padding: govuk-spacing(7) - $govuk-border-width;\\n\\n    border: $govuk-border-width solid transparent;\\n\\n    text-align: center;\\n\\n    @include govuk-media-query($until: tablet) {\\n      padding: govuk-spacing(6) - $govuk-border-width;\\n    }\\n  }\\n\\n  .govuk-panel--confirmation {\\n    color: govuk-colour(\\\"white\\\");\\n    background: govuk-colour(\\\"green\\\", $legacy: \\\"turquoise\\\");\\n\\n    @include govuk-media-query($media-type: print) {\\n      border-color: currentColor;\\n      color: $govuk-print-text-colour;\\n      background: none;\\n    }\\n  }\\n\\n  .govuk-panel__title {\\n    margin-top: 0;\\n    margin-bottom: govuk-spacing(6);\\n\\n    @include govuk-font($size: 48, $weight: bold);\\n  }\\n\\n  .govuk-panel__title:last-child {\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-panel__body {\\n    @include govuk-font($size: 36);\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/tag\\\") {\\n  .govuk-tag {\\n\\n    display: inline-block;\\n\\n    // When a user customises their colours often the background is removed,\\n    // by adding a outline we ensure that the tag component still keeps it's meaning.\\n    // https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n\\n    color: govuk-colour(\\\"white\\\");\\n    background-color: govuk-colour(\\\"blue\\\");\\n    letter-spacing: 1px;\\n\\n    text-decoration: none;\\n    text-transform: uppercase;\\n\\n    @if $govuk-use-legacy-font {\\n      // Since New Transport sits slightly higher than other common fonts.\\n      // We use intentionally uneven padding to make it balanced, this can be\\n      // removed using the version of the font that has a more common vertical spacing.\\n      @include govuk-font($size: 16, $weight: bold, $line-height: 1.25);\\n      padding-top: 4px;\\n      padding-right: 8px;\\n      padding-bottom: 1px;\\n      padding-left: 8px;\\n    } @else {\\n      @include govuk-font($size: 16, $weight: bold, $line-height: 1);\\n      padding-top: 5px;\\n      padding-right: 8px;\\n      padding-bottom: 4px;\\n      padding-left: 8px;\\n    }\\n  }\\n\\n  // Deprecated. We'll remove this class in a future release. Use `.govuk-tag--grey` instead.\\n  .govuk-tag--inactive {\\n    background-color: govuk-colour(\\\"dark-grey\\\", $legacy: \\\"grey-1\\\");\\n  }\\n\\n  .govuk-tag--grey {\\n    color: govuk-shade(govuk-colour(\\\"dark-grey\\\", $legacy: \\\"grey-1\\\"), 30);\\n    background: govuk-tint(govuk-colour(\\\"dark-grey\\\", $legacy: \\\"grey-1\\\"), 90);\\n  }\\n\\n  .govuk-tag--purple {\\n    color: govuk-shade(govuk-colour(\\\"purple\\\"), 20);\\n    background: govuk-tint(govuk-colour(\\\"purple\\\"), 80);\\n  }\\n\\n  .govuk-tag--turquoise {\\n    color: govuk-shade(govuk-colour(\\\"turquoise\\\"), 60);\\n    background: govuk-tint(govuk-colour(\\\"turquoise\\\"), 70);\\n  }\\n\\n  .govuk-tag--blue {\\n    color: govuk-shade(govuk-colour(\\\"blue\\\"), 30);\\n    background: govuk-tint(govuk-colour(\\\"blue\\\"), 80);\\n  }\\n\\n  .govuk-tag--yellow {\\n    color: govuk-shade(govuk-colour(\\\"yellow\\\"), 65);\\n    background: govuk-tint(govuk-colour(\\\"yellow\\\"), 75);\\n  }\\n\\n  .govuk-tag--orange {\\n    color: govuk-shade(govuk-colour(\\\"orange\\\"), 55);\\n    background: govuk-tint(govuk-colour(\\\"orange\\\"), 70);\\n  }\\n\\n  .govuk-tag--red {\\n    color: govuk-shade(govuk-colour(\\\"red\\\"), 30);\\n    background: govuk-tint(govuk-colour(\\\"red\\\"), 80);\\n  }\\n\\n  .govuk-tag--pink {\\n    color: govuk-shade(govuk-colour(\\\"pink\\\"), 40);\\n    background: govuk-tint(govuk-colour(\\\"pink\\\"), 80);\\n  }\\n\\n  .govuk-tag--green {\\n    color: govuk-shade(govuk-colour(\\\"green\\\"), 20);\\n    background: govuk-tint(govuk-colour(\\\"green\\\"), 80);\\n  }\\n}\\n\",\"@import \\\"../tag/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/phase-banner\\\") {\\n  .govuk-phase-banner {\\n    padding-top: govuk-spacing(2);\\n    padding-bottom: govuk-spacing(2);\\n\\n    border-bottom: 1px solid $govuk-border-colour;\\n  }\\n\\n  .govuk-phase-banner__content {\\n    @include govuk-font($size: 16);\\n    @include govuk-text-colour;\\n\\n    display: table;\\n    margin: 0;\\n  }\\n\\n  .govuk-phase-banner__content__tag {\\n    margin-right: govuk-spacing(2);\\n  }\\n\\n  .govuk-phase-banner__text {\\n    display: table-cell;\\n    vertical-align: baseline;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/tabs\\\") {\\n  .govuk-tabs {\\n    @include govuk-responsive-margin(1, \\\"top\\\");\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-tabs__title {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    margin-bottom: govuk-spacing(2);\\n  }\\n\\n  .govuk-tabs__list {\\n    margin: 0;\\n    padding: 0;\\n    list-style: none;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n  }\\n\\n  .govuk-tabs__list-item {\\n    @include govuk-font($size: 19);\\n    margin-left: govuk-spacing(5);\\n\\n    &:before {\\n      @include govuk-text-colour;\\n      content: \\\"\\\\2014 \\\"; // \\\"— \\\"\\n      margin-left: - govuk-spacing(5);\\n      padding-right: govuk-spacing(1);\\n    }\\n  }\\n\\n  .govuk-tabs__tab {\\n    @include govuk-link-style-default;\\n\\n    display: inline-block;\\n    margin-bottom: govuk-spacing(2);\\n\\n    // Focus state for mobile and when JavaScript is disabled\\n    // It is removed for JS-enabled desktop styles\\n    &:focus {\\n      @include govuk-focused-text;\\n    }\\n  }\\n\\n  .govuk-tabs__panel {\\n    @include govuk-responsive-margin(8, \\\"bottom\\\");\\n  }\\n\\n  // JavaScript enabled\\n  .js-enabled {\\n\\n    @include govuk-media-query($from: tablet) {\\n      .govuk-tabs__list {\\n        @include govuk-clearfix;\\n        margin-bottom: 0;\\n        border-bottom: 1px solid $govuk-border-colour;\\n      }\\n\\n      .govuk-tabs__title {\\n        display: none;\\n      }\\n\\n      .govuk-tabs__list-item {\\n        position: relative;\\n\\n        margin-right: govuk-spacing(1);\\n        margin-bottom: 0;\\n        margin-left: 0;\\n        padding: govuk-spacing(2) govuk-spacing(4);\\n\\n        float: left;\\n        background-color: govuk-colour(\\\"light-grey\\\", $legacy: \\\"grey-4\\\");\\n        text-align: center;\\n\\n        &:before {\\n          content: none;\\n        }\\n      }\\n\\n      .govuk-tabs__list-item--selected {\\n        $border-width: 1px;\\n\\n        position: relative;\\n\\n        margin-top: - govuk-spacing(1);\\n\\n        // Compensation for border (otherwise we get a shift)\\n        margin-bottom: -$border-width;\\n        padding-top: govuk-spacing(3) - $border-width;\\n        padding-right: govuk-spacing(4) - $border-width;\\n        padding-bottom: govuk-spacing(3) + $border-width;\\n        padding-left: govuk-spacing(4) - $border-width;\\n\\n        border: $border-width solid $govuk-border-colour;\\n        border-bottom: 0;\\n\\n        background-color: $govuk-body-background-colour;\\n\\n        .govuk-tabs__tab {\\n          text-decoration: none;\\n        }\\n      }\\n\\n      .govuk-tabs__tab {\\n        @include govuk-link-style-text;\\n\\n        margin-bottom: 0;\\n\\n        &:after {\\n          content: \\\"\\\";\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          bottom: 0;\\n          left: 0;\\n        }\\n      }\\n\\n      .govuk-tabs__panel {\\n        @include govuk-responsive-margin(0, \\\"bottom\\\");\\n        padding: govuk-spacing(6) govuk-spacing(4);\\n        border: 1px solid $govuk-border-colour;\\n        border-top: 0;\\n\\n        & > :last-child {\\n          margin-bottom: 0;\\n        }\\n      }\\n\\n      .govuk-tabs__panel--hidden {\\n        display: none;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../fieldset/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/radios\\\") {\\n\\n  $govuk-touch-target-size: 44px;\\n  $govuk-radios-size: 40px;\\n  $govuk-small-radios-size: 24px;\\n  $govuk-radios-label-padding-left-right: govuk-spacing(3);\\n  // When the default focus width is used on a curved edge it looks visually smaller.\\n  // So for the circular radios we bump the default to make it look visually consistent.\\n  $govuk-radios-focus-width: $govuk-focus-width + 1px;\\n\\n  .govuk-radios__item {\\n    @include govuk-font($size: 19);\\n\\n    display: block;\\n    position: relative;\\n\\n    min-height: $govuk-radios-size;\\n\\n    margin-bottom: govuk-spacing(2);\\n    padding-left: $govuk-radios-size;\\n\\n    clear: left;\\n  }\\n\\n  .govuk-radios__item:last-child,\\n  .govuk-radios__item:last-of-type {\\n    margin-bottom: 0;\\n  }\\n\\n  .govuk-radios__input {\\n    $input-offset: ($govuk-touch-target-size - $govuk-radios-size) / 2;\\n\\n    cursor: pointer;\\n\\n    // IE8 doesn’t support pseudo-elements, so we don’t want to hide native\\n    // elements there.\\n    @include govuk-not-ie8 {\\n      position: absolute;\\n\\n      z-index: 1;\\n      top: $input-offset * -1;\\n      left: $input-offset * -1;\\n\\n      width: $govuk-touch-target-size;\\n      height: $govuk-touch-target-size;\\n      margin: 0;\\n\\n      opacity: 0;\\n    }\\n\\n    @include govuk-if-ie8 {\\n      margin-top: 10px;\\n      margin-right: $govuk-radios-size / -2;\\n      margin-left: $govuk-radios-size / -2;\\n      float: left;\\n\\n      // add focus outline to input\\n      &:focus {\\n        outline: $govuk-focus-width solid $govuk-focus-colour;\\n      }\\n    }\\n  }\\n\\n  .govuk-radios__label {\\n    display: inline-block;\\n    margin-bottom: 0;\\n    padding: 8px $govuk-radios-label-padding-left-right govuk-spacing(1);\\n    cursor: pointer;\\n    // remove 300ms pause on mobile\\n    -ms-touch-action: manipulation;\\n        touch-action: manipulation;\\n  }\\n\\n  // ( ) Radio ring\\n  .govuk-radios__label:before {\\n    content: \\\"\\\";\\n    box-sizing: border-box;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n\\n    width: $govuk-radios-size;\\n    height: $govuk-radios-size;\\n\\n    border: $govuk-border-width-form-element solid currentColor;\\n    border-radius: 50%;\\n    background: transparent;\\n  }\\n\\n  //  •  Radio button\\n  //\\n  // We create the 'button' entirely out of 'border' so that they remain\\n  // 'filled' even when colours are overridden in the browser.\\n  .govuk-radios__label:after {\\n    content: \\\"\\\";\\n\\n    position: absolute;\\n    top: govuk-spacing(2);\\n    left: govuk-spacing(2);\\n\\n    width: 0;\\n    height: 0;\\n\\n    border: govuk-spacing(2) solid currentColor;\\n    border-radius: 50%;\\n    opacity: 0;\\n    background: currentColor;\\n  }\\n\\n  .govuk-radios__hint {\\n    display: block;\\n    padding-right: $govuk-radios-label-padding-left-right;\\n    padding-left: $govuk-radios-label-padding-left-right;\\n  }\\n\\n  // Focused state\\n  .govuk-radios__input:focus + .govuk-radios__label:before {\\n    border-width: 4px;\\n    box-shadow: 0 0 0 $govuk-radios-focus-width $govuk-focus-colour;\\n  }\\n\\n  // Selected state\\n  .govuk-radios__input:checked + .govuk-radios__label:after {\\n    opacity: 1;\\n  }\\n\\n  // Disabled state\\n  .govuk-radios__input:disabled,\\n  .govuk-radios__input:disabled + .govuk-radios__label {\\n    cursor: default;\\n  }\\n\\n  .govuk-radios__input:disabled + .govuk-radios__label {\\n    opacity: .5;\\n  }\\n\\n  // =========================================================\\n  // Inline radios\\n  // =========================================================\\n\\n  .govuk-radios--inline {\\n    @include govuk-media-query ($from: tablet) {\\n      @include govuk-clearfix;\\n\\n      .govuk-radios__item {\\n        margin-right: govuk-spacing(4);\\n        float: left;\\n        clear: none;\\n      }\\n    }\\n\\n    // Prevent inline modifier being used with conditional reveals\\n    &.govuk-radios--conditional {\\n      .govuk-radios__item {\\n        margin-right: 0;\\n        float: none;\\n      }\\n    }\\n  }\\n\\n  // =========================================================\\n  // Dividers ('or')\\n  // =========================================================\\n\\n  .govuk-radios__divider {\\n    $govuk-divider-size: $govuk-radios-size !default;\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    width: $govuk-divider-size;\\n    margin-bottom: govuk-spacing(2);\\n    text-align: center;\\n  }\\n\\n  // =========================================================\\n  // Conditional reveals\\n  // =========================================================\\n\\n  // The narrow border is used in the conditional reveals because the border has\\n  // to be an even number in order to be centred under the 40px checkbox or radio.\\n  $conditional-border-width: $govuk-border-width-narrow;\\n  // Calculate the amount of padding needed to keep the border centered against the radios.\\n  $conditional-border-padding: ($govuk-radios-size / 2) - ($conditional-border-width / 2);\\n  // Move the border centered with the radios\\n  $conditional-margin-left: $conditional-border-padding;\\n  // Move the contents of the conditional inline with the label\\n  $conditional-padding-left: $conditional-border-padding + $govuk-radios-label-padding-left-right;\\n\\n  .govuk-radios__conditional {\\n    @include govuk-responsive-margin(4, \\\"bottom\\\");\\n    margin-left: $conditional-margin-left;\\n    padding-left: $conditional-padding-left;\\n    border-left: $conditional-border-width solid $govuk-border-colour;\\n\\n    .js-enabled &--hidden {\\n      display: none;\\n    }\\n\\n    & > :last-child {\\n      margin-bottom: 0;\\n    }\\n  }\\n\\n  // =========================================================\\n  // Small checkboxes\\n  // =========================================================\\n\\n  .govuk-radios--small {\\n\\n    $input-offset: ($govuk-touch-target-size - $govuk-small-radios-size) / 2;\\n    $label-offset: $govuk-touch-target-size - $input-offset;\\n\\n    .govuk-radios__item {\\n      @include govuk-clearfix;\\n      min-height: 0;\\n      margin-bottom: 0;\\n      padding-left: $label-offset;\\n      float: left;\\n    }\\n\\n    // Shift the touch target into the left margin so that the visible edge of\\n    // the control is aligned\\n    //\\n    //   ┆Which colour is your favourite?\\n    //  ┌┆───┐\\n    //  │┆() │ Purple\\n    //  └┆▲──┘\\n    //  ▲┆└─ Radio pseudo element, aligned with margin\\n    //  └─── Touch target (invisible input), shifted into the margin\\n    .govuk-radios__input {\\n      @include govuk-not-ie8 {\\n        left: $input-offset * -1;\\n      }\\n\\n      @include govuk-if-ie8 {\\n        margin-left: $govuk-small-radios-size * -1;\\n      }\\n    }\\n\\n    // Adjust the size and position of the label.\\n    //\\n    // Unlike larger radios, we also have to float the label in order to\\n    // 'shrink' it, preventing the hover state from kicking in across the full\\n    // width of the parent element.\\n    .govuk-radios__label {\\n      margin-top: -2px;\\n      padding: 13px govuk-spacing(3) 13px 1px;\\n      float: left;\\n\\n      @include govuk-media-query($from: tablet) {\\n        padding: 11px govuk-spacing(3) 10px 1px;\\n      }\\n    }\\n\\n    // ( ) Radio ring\\n    //\\n    // Reduce the size of the control [1], vertically centering it within the\\n    // touch target [2]\\n    .govuk-radios__label:before {\\n      top: $input-offset - $govuk-border-width-form-element; // 2\\n      width: $govuk-small-radios-size; // 1\\n      height: $govuk-small-radios-size; // 1\\n    }\\n\\n    //  •  Radio button\\n    //\\n    // Reduce the size of the 'button' and center it within the ring\\n    .govuk-radios__label:after {\\n      top: 15px;\\n      left: 7px;\\n      border-width: 5px;\\n    }\\n\\n    // Fix position of hint with small radios\\n    //\\n    // Do not use hints with small radios – because they're within the input\\n    // wrapper they trigger the hover state, but clicking them doesn't actually\\n    // activate the control.\\n    //\\n    // (If you do use them, they won't look completely broken... but seriously,\\n    // don't use them)\\n    .govuk-radios__hint {\\n      padding: 0;\\n      clear: both;\\n      pointer-events: none;\\n    }\\n\\n    // Align conditional reveals with small radios\\n    .govuk-radios__conditional {\\n      $margin-left: ($govuk-small-radios-size / 2) - ($conditional-border-width / 2);\\n      margin-left: $margin-left;\\n      padding-left: $label-offset - ($margin-left + $conditional-border-width);\\n      clear: both;\\n    }\\n\\n    .govuk-radios__divider {\\n      width: $govuk-small-radios-size;\\n      margin-bottom: govuk-spacing(1);\\n    }\\n\\n    // Hover state for small radios.\\n    //\\n    // We use a hover state for small radios because the touch target size\\n    // is so much larger than their visible size, and so we need to provide\\n    // feedback to the user as to which radio they will select when their\\n    // cursor is outside of the visible area.\\n    .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n      box-shadow: 0 0 0 $govuk-hover-width $govuk-hover-colour;\\n    }\\n\\n    // Because we've overridden the border-shadow provided by the focus state,\\n    // we need to redefine that too.\\n    //\\n    // We use two box shadows, one that restores the original focus state [1]\\n    // and another that then applies the hover state [2].\\n    .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n      box-shadow:\\n        0 0 0 $govuk-radios-focus-width $govuk-focus-colour, // 1\\n        0 0 0 $govuk-hover-width        $govuk-hover-colour; // 2\\n    }\\n\\n    // For devices that explicitly don't support hover, don't provide a hover\\n    // state (e.g. on touch devices like iOS).\\n    //\\n    // We can't use `@media (hover: hover)` because we wouldn't get the hover\\n    // state in browsers that don't support `@media (hover)` (like Internet\\n    // Explorer) – so we have to 'undo' the hover state instead.\\n    @media (hover: none), (pointer: coarse) {\\n      .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\\n        box-shadow: initial;\\n      }\\n\\n      .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\\n        box-shadow: 0 0 0 $govuk-radios-focus-width $govuk-focus-colour;\\n      }\\n    }\\n  }\\n}\\n\",\"@import \\\"../error-message/index\\\";\\n@import \\\"../hint/index\\\";\\n@import \\\"../label/index\\\";\\n\\n@include govuk-exports(\\\"govuk/component/select\\\") {\\n  .govuk-select {\\n    @include govuk-font($size: 19, $line-height: 1.25);\\n\\n    box-sizing: border-box; // should this be global?\\n    max-width: 100%;\\n    height: 40px;\\n    @if $govuk-typography-use-rem {\\n      height: govuk-px-to-rem(40px);\\n    }\\n    padding: govuk-spacing(1); // was 5px 4px 4px - size of it should be adjusted to match other form elements\\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n      // Ensure outline appears outside of the element\\n      outline-offset: 0;\\n      // Double the border by adding its width again. Use `box-shadow` to do\\n      // this instead of changing `border-width` (which changes element size) and\\n      // since `outline` is already used for the yellow focus state.\\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\\n\\n      @include govuk-if-ie8 {\\n        // IE8 doesn't support `box-shadow` so double the border with\\n        // `border-width`.\\n        border-width: $govuk-border-width-form-element * 2;\\n      }\\n    }\\n  }\\n\\n  .govuk-select option:active,\\n  .govuk-select option:checked,\\n  .govuk-select:focus::-ms-value {\\n    color: govuk-colour(\\\"white\\\");\\n    background-color: govuk-colour(\\\"blue\\\");\\n  }\\n\\n  .govuk-select--error {\\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\\n\\n    &:focus {\\n      border-color: $govuk-input-border-colour;\\n    }\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/skip-link\\\") {\\n  .govuk-skip-link {\\n    @include govuk-visually-hidden-focusable;\\n    @include govuk-typography-common;\\n    @include govuk-link-style-text;\\n    @include govuk-typography-responsive($size: 16);\\n\\n    display: block;\\n    padding: govuk-spacing(2) govuk-spacing(3);\\n\\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\\n    @supports (padding: unquote(\\\"max(calc(0px))\\\")) {\\n      $padding-safe-area-right: calc(#{govuk-spacing(3)} + env(safe-area-inset-right));\\n      $padding-safe-area-left: calc(#{govuk-spacing(3)} + env(safe-area-inset-left));\\n\\n      // Use max() to pick largest padding, default or with safe area\\n      // Escaped due to Sass max() vs. CSS native max()\\n      padding-right: unquote(\\\"max(#{govuk-spacing(3)}, #{$padding-safe-area-right})\\\");\\n      padding-left: unquote(\\\"max(#{govuk-spacing(3)}, #{$padding-safe-area-left})\\\");\\n    }\\n\\n    &:focus {\\n      outline: $govuk-focus-width solid $govuk-focus-colour;\\n      outline-offset: 0;\\n      background-color: $govuk-focus-colour;\\n\\n      // Undo unwanted changes when global styles are enabled\\n      @if ($govuk-global-styles) {\\n        box-shadow: none;\\n        text-decoration: underline;\\n      }\\n    }\\n  }\\n}\\n\",\"////\\n/// @group helpers/accessibility\\n////\\n\\n/// Hide an element visually, but have it available for screen readers\\n///\\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\\n///   - h5bp/html5-boilerplate - Thanks!\\n///\\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\\n///\\n/// @access public\\n\\n@mixin govuk-visually-hidden($important: true) {\\n  position: absolute if($important, !important, null);\\n\\n  width: 1px if($important, !important, null);\\n  height: 1px if($important, !important, null);\\n  // If margin is set to a negative value it can cause text to be announced in\\n  // the wrong order in VoiceOver for OSX\\n  margin: 0 if($important, !important, null);\\n  padding: 0 if($important, !important, null);\\n\\n  overflow: hidden if($important, !important, null);\\n  clip: rect(0 0 0 0) if($important, !important, null);\\n  -webkit-clip-path: inset(50%) if($important, !important, null);\\n          clip-path: inset(50%) if($important, !important, null);\\n\\n  border: 0 if($important, !important, null);\\n\\n  // For long content, line feeds are not interpreted as spaces and small width\\n  // causes content to wrap 1 word per line:\\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\\n  white-space: nowrap if($important, !important, null);\\n}\\n\\n/// Hide an element visually, but have it available for screen readers whilst\\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\\n/// for the skip link)\\n///\\n/// This is slightly less opinionated about borders and padding to make it\\n/// easier to style the focussed element.\\n///\\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\\n///\\n/// @access public\\n\\n@mixin govuk-visually-hidden-focusable($important: true) {\\n  position: absolute if($important, !important, null);\\n\\n  width: 1px if($important, !important, null);\\n  height: 1px if($important, !important, null);\\n  // If margin is set to a negative value it can cause text to be announced in\\n  // the wrong order in VoiceOver for OSX\\n  margin: 0 if($important, !important, null);\\n\\n  overflow: hidden if($important, !important, null);\\n  clip: rect(0 0 0 0) if($important, !important, null);\\n  -webkit-clip-path: inset(50%) if($important, !important, null);\\n          clip-path: inset(50%) if($important, !important, null);\\n\\n  // For long content, line feeds are not interpreted as spaces and small width\\n  // causes content to wrap 1 word per line:\\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\\n  white-space: nowrap if($important, !important, null);\\n\\n  &:active,\\n  &:focus {\\n    position: static if($important, !important, null);\\n\\n    width: auto if($important, !important, null);\\n    height: auto if($important, !important, null);\\n    margin: inherit if($important, !important, null);\\n\\n    overflow: visible if($important, !important, null);\\n    clip: auto if($important, !important, null);\\n    -webkit-clip-path: none if($important, !important, null);\\n            clip-path: none if($important, !important, null);\\n\\n    white-space: inherit if($important, !important, null);\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/table\\\") {\\n  .govuk-table {\\n    @include govuk-font($size: 19);\\n    @include govuk-text-colour;\\n    width: 100%;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n\\n    border-spacing: 0;\\n    border-collapse: collapse;\\n  }\\n\\n  .govuk-table__header {\\n    @include govuk-typography-weight-bold;\\n  }\\n\\n  .govuk-table__header,\\n  .govuk-table__cell {\\n    padding: govuk-spacing(2) govuk-spacing(4) govuk-spacing(2) 0;\\n    border-bottom: 1px solid $govuk-border-colour;\\n    text-align: left;\\n    vertical-align: top;\\n    // GOV.UK Elements sets the font-size and line-height for all headers and cells\\n    // in tables.\\n    @include govuk-compatibility(govuk_elements) {\\n      font-size: inherit;\\n      line-height: inherit;\\n    }\\n  }\\n\\n  .govuk-table__cell--numeric {\\n    @include govuk-font($size: false, $tabular: true);\\n  }\\n\\n  .govuk-table__header--numeric,\\n  .govuk-table__cell--numeric {\\n    text-align: right;\\n  }\\n\\n  .govuk-table__header:last-child,\\n  .govuk-table__cell:last-child {\\n    padding-right: 0;\\n  }\\n\\n  .govuk-table__caption {\\n    @include govuk-typography-weight-bold;\\n\\n    display: table-caption;\\n    text-align: left;\\n  }\\n\\n  // Modifiers that make captions look more like their equivalent headings\\n\\n  .govuk-table__caption--xl {\\n    @include govuk-font($size: 48, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-table__caption--l {\\n    @include govuk-font($size: 36, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-table__caption--m {\\n    @include govuk-font($size: 24, $weight: bold);\\n    margin-bottom: govuk-spacing(3);\\n  }\\n\\n  .govuk-table__caption--s {\\n    @include govuk-font($size: 19, $weight: bold);\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/component/warning-text\\\") {\\n  .govuk-warning-text {\\n    position: relative;\\n    @include govuk-responsive-margin(6, \\\"bottom\\\");\\n    padding: govuk-spacing(2) 0;\\n  }\\n\\n  .govuk-warning-text__assistive {\\n    @include govuk-visually-hidden;\\n  }\\n\\n  .govuk-warning-text__icon {\\n    @include govuk-font($size: false, $weight: bold);\\n\\n    box-sizing: border-box;\\n\\n    display: inline-block;\\n\\n    position: absolute;\\n    left: 0;\\n\\n    min-width: 35px;\\n    min-height: 35px;\\n    margin-top: -7px;\\n\\n    @include govuk-media-query($from: tablet) {\\n      margin-top: -5px;\\n    }\\n\\n    // When a user customises their colours the background colour will often be removed.\\n    // Adding a border to the component keeps it's shape as a circle.\\n    border: 3px solid govuk-colour(\\\"black\\\");\\n    border-radius: 50%;\\n\\n    color: govuk-colour(\\\"white\\\");\\n    background: govuk-colour(\\\"black\\\");\\n\\n    font-size: 30px;\\n    line-height: 29px;\\n\\n    text-align: center;\\n\\n    // Prevent the exclamation mark from being included when the warning text\\n    // is copied, for example.\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n  }\\n\\n  .govuk-warning-text__text {\\n    @include govuk-font($size: 19, $weight: bold);\\n    @include govuk-text-colour;\\n    display: block;\\n    padding-left: 45px;\\n  }\\n}\\n\",\"@include govuk-exports(\\\"govuk/utilities/visually-hidden\\\") {\\n  .govuk-visually-hidden {\\n    @include govuk-visually-hidden;\\n  }\\n\\n  .govuk-visually-hidden-focusable {\\n    @include govuk-visually-hidden-focusable;\\n  }\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n// stylelint-disable declaration-no-important\\n@include govuk-exports(\\\"govuk/overrides/display\\\") {\\n  .govuk-\\\\!-display-inline {\\n    display: inline !important;\\n  }\\n\\n  .govuk-\\\\!-display-inline-block {\\n    display: inline-block !important;\\n  }\\n\\n  .govuk-\\\\!-display-block {\\n    display: block !important;\\n  }\\n\\n  .govuk-\\\\!-display-none {\\n    display: none !important;\\n  }\\n\\n  @include govuk-media-query($media-type: print) {\\n    .govuk-\\\\!-display-none-print {\\n      display: none !important;\\n    }\\n  }\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n////\\n/// @group overrides\\n////\\n\\n/// Directions for spacing\\n///\\n/// @type Map\\n/// @access private\\n\\n$_spacing-directions: (\\n  \\\"top\\\",\\n  \\\"right\\\",\\n  \\\"bottom\\\",\\n  \\\"left\\\"\\n) !default;\\n\\n/// Spacing override classes\\n///\\n/// Generate spacing override classes for the given property (e.g. margin)\\n/// for each point in the spacing scale.\\n///\\n/// @param {String} $property - Property to add spacing to (e.g. 'margin')\\n///\\n/// @example scss\\n///   .govuk-\\\\!-margin-0 {\\n///      margin: 0;\\n///   }\\n///\\n///  .govuk-\\\\!-margin-top-1 {\\n///     margin-top: [whatever spacing point 1 is...]\\n///   }\\n///\\n/// @access private\\n\\n@mixin _govuk-generate-spacing-overrides($property) {\\n  // For each point in the spacing scale (defined in settings), create an\\n  // override that affects all directions...\\n  @each $scale-point, $scale-map in $govuk-spacing-responsive-scale {\\n\\n    .govuk-\\\\!-#{$property}-#{$scale-point} {\\n\\n      @include _govuk-responsive-spacing($scale-point, $property, \\\"all\\\", true);\\n    }\\n\\n    // ... and then an override for each individual direction\\n    @each $direction in $_spacing-directions {\\n\\n      .govuk-\\\\!-#{$property}-#{$direction}-#{$scale-point} {\\n        @include _govuk-responsive-spacing($scale-point, $property, $direction, true);\\n      }\\n    }\\n  }\\n}\\n\\n@include govuk-exports(\\\"govuk/overrides/spacing\\\") {\\n  @include _govuk-generate-spacing-overrides(\\\"margin\\\");\\n  @include _govuk-generate-spacing-overrides(\\\"padding\\\");\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n@include govuk-exports(\\\"govuk/overrides/typography\\\") {\\n  // Font size and line height\\n\\n  // Generate typography override classes for each responsive font map in the\\n  // typography scale eg .govuk-\\\\!-font-size-80\\n  @each $size in map-keys($govuk-typography-scale) {\\n    .govuk-\\\\!-font-size-#{$size} {\\n      @include govuk-typography-responsive($size, $important: true);\\n    }\\n  }\\n\\n  // Weights\\n\\n  .govuk-\\\\!-font-weight-regular {\\n    @include govuk-typography-weight-regular($important: true);\\n  }\\n\\n  .govuk-\\\\!-font-weight-bold {\\n    @include govuk-typography-weight-bold($important: true);\\n  }\\n}\\n\",\"@if not mixin-exists(\\\"govuk-exports\\\") {\\n  @warn \\\"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\\\";\\n}\\n\\n@import \\\"../base\\\";\\n\\n// stylelint-disable declaration-no-important\\n@include govuk-exports(\\\"govuk/overrides/width\\\") {\\n  .govuk-\\\\!-width-full {\\n    width: 100% !important;\\n  }\\n\\n  .govuk-\\\\!-width-three-quarters {\\n    width: 100% !important;\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: 75% !important;\\n    }\\n  }\\n\\n  .govuk-\\\\!-width-two-thirds {\\n    width: 100% !important;\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: 66.66% !important;\\n    }\\n  }\\n\\n  .govuk-\\\\!-width-one-half {\\n    width: 100% !important;\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: 50% !important;\\n    }\\n  }\\n\\n  .govuk-\\\\!-width-one-third {\\n    width: 100% !important;\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: 33.33% !important;\\n    }\\n  }\\n\\n  .govuk-\\\\!-width-one-quarter {\\n    width: 100% !important;\\n\\n    @include govuk-media-query($from: tablet) {\\n      width: 25% !important;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./node_modules/govuk-frontend/govuk/all.scss\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/globals.css":
/*!****************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-6-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/globals.css ***!
  \****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ \"./node_modules/next/dist/compiled/css-loader/api.js\");\n/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n}\\n\\na {\\n  color: inherit;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,UAAU;EACV,SAAS;EACT;wEACsE;AACxE;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,sBAAsB;AACxB\",\"sourcesContent\":[\"html,\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n}\\n\\na {\\n  color: inherit;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL2dsb2JhbHMuY3NzPzE3MjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDK0Y7QUFDL0YsOEJBQThCLHlGQUEyQjtBQUN6RDtBQUNBLDhCQUE4QixRQUFTLGdCQUFnQixlQUFlLGNBQWMsd0pBQXdKLEdBQUcsT0FBTyxtQkFBbUIsR0FBRyxPQUFPLDJCQUEyQixHQUFHLFNBQVMsb0ZBQW9GLFVBQVUsVUFBVSxLQUFLLE9BQU8sT0FBTyxLQUFLLFVBQVUsT0FBTyxLQUFLLFlBQVksdUNBQXVDLGVBQWUsY0FBYyx3SkFBd0osR0FBRyxPQUFPLG1CQUFtQixHQUFHLE9BQU8sMkJBQTJCLEdBQUcscUJBQXFCO0FBQ2x4QjtBQUNlLHNGQUF1QixFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8hLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8hLi9zdHlsZXMvZ2xvYmFscy5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLFxcbmJvZHkge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIE94eWdlbixcXG4gICAgVWJ1bnR1LCBDYW50YXJlbGwsIEZpcmEgU2FucywgRHJvaWQgU2FucywgSGVsdmV0aWNhIE5ldWUsIHNhbnMtc2VyaWY7XFxufVxcblxcbmEge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3N0eWxlcy9nbG9iYWxzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7RUFFRSxVQUFVO0VBQ1YsU0FBUztFQUNUO3dFQUNzRTtBQUN4RTs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXG5ib2R5IHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBPeHlnZW4sXFxuICAgIFVidW50dSwgQ2FudGFyZWxsLCBGaXJhIFNhbnMsIERyb2lkIFNhbnMsIEhlbHZldGljYSBOZXVlLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG5hIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbn1cXG5cXG4qIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/globals.css\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/webpack/global.js":
/*!***********************************!*\
  !*** (webpack)/webpack/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =\n/******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 149:\n/***/ (function(module) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nccwpck_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\tvar threw = true;\n/******/ \t\ttry {\n/******/ \t\t\t__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);\n/******/ \t\t\tthrew = false;\n/******/ \t\t} finally {\n/******/ \t\t\tif(threw) delete __webpack_module_cache__[moduleId];\n/******/ \t\t}\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat */\n/******/ \t\n/******/ \t__nccwpck_require__.ab = __dirname + \"/\";/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nccwpck_require__(149);\n/******/ })()\n;\n/* WEBPACK VAR INJECTION */}.call(this, \"/\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS93ZWJwYWNrL2dsb2JhbC5qcz8wOTIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esc0JBQXNCO0FBQ3RCOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDOzs7QUFHQSxPQUFPOztBQUVQLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC93ZWJwYWNrL2dsb2JhbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID1cbi8qKioqKiovIChmdW5jdGlvbigpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHR2YXIgX193ZWJwYWNrX21vZHVsZXNfXyA9ICh7XG5cbi8qKiovIDE0OTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUpIHtcblxudmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuXG5cbi8qKiovIH0pXG5cbi8qKioqKiovIFx0fSk7XG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuLyoqKioqKi8gXHRcdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0dmFyIHRocmV3ID0gdHJ1ZTtcbi8qKioqKiovIFx0XHR0cnkge1xuLyoqKioqKi8gXHRcdFx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX19uY2N3cGNrX3JlcXVpcmVfXyk7XG4vKioqKioqLyBcdFx0XHR0aHJldyA9IGZhbHNlO1xuLyoqKioqKi8gXHRcdH0gZmluYWxseSB7XG4vKioqKioqLyBcdFx0XHRpZih0aHJldykgZGVsZXRlIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi8gXHRcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyBcdC8qIHdlYnBhY2svcnVudGltZS9jb21wYXQgKi9cbi8qKioqKiovIFx0XG4vKioqKioqLyBcdF9fbmNjd3Bja19yZXF1aXJlX18uYWIgPSBfX2Rpcm5hbWUgKyBcIi9cIjsvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHQvLyBtb2R1bGUgZXhwb3J0cyBtdXN0IGJlIHJldHVybmVkIGZyb20gcnVudGltZSBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLyoqKioqKi8gXHQvLyBzdGFydHVwXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX19uY2N3cGNrX3JlcXVpcmVfXygxNDkpO1xuLyoqKioqKi8gfSkoKVxuOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/webpack/global.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/webpack/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/webpack/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =\n/******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 931:\n/***/ (function(module) {\n\nmodule.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nccwpck_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\tvar threw = true;\n/******/ \t\ttry {\n/******/ \t\t\t__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);\n/******/ \t\t\tthrew = false;\n/******/ \t\t} finally {\n/******/ \t\t\tif(threw) delete __webpack_module_cache__[moduleId];\n/******/ \t\t}\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat */\n/******/ \t\n/******/ \t__nccwpck_require__.ab = __dirname + \"/\";/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nccwpck_require__(931);\n/******/ })()\n;\n/* WEBPACK VAR INJECTION */}.call(this, \"/\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS93ZWJwYWNrL2hhcm1vbnktbW9kdWxlLmpzP2YzNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxzQkFBc0I7QUFDdEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLE9BQU87O0FBRVAsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLEMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3dlYnBhY2svaGFybW9ueS1tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9XG4vKioqKioqLyAoZnVuY3Rpb24oKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0dmFyIF9fd2VicGFja19tb2R1bGVzX18gPSAoe1xuXG4vKioqLyA5MzE6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG5cblxuLyoqKi8gfSlcblxuLyoqKioqKi8gXHR9KTtcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG4vKioqKioqLyBcdFx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHR2YXIgdGhyZXcgPSB0cnVlO1xuLyoqKioqKi8gXHRcdHRyeSB7XG4vKioqKioqLyBcdFx0XHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX25jY3dwY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovIFx0XHRcdHRocmV3ID0gZmFsc2U7XG4vKioqKioqLyBcdFx0fSBmaW5hbGx5IHtcbi8qKioqKiovIFx0XHRcdGlmKHRocmV3KSBkZWxldGUgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFxuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqLyBcdFxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIFx0Lyogd2VicGFjay9ydW50aW1lL2NvbXBhdCAqL1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0X19uY2N3cGNrX3JlcXVpcmVfXy5hYiA9IF9fZGlybmFtZSArIFwiL1wiOy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyBcdC8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vKioqKioqLyBcdC8vIHN0YXJ0dXBcbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX25jY3dwY2tfcmVxdWlyZV9fKDkzMSk7XG4vKioqKioqLyB9KSgpXG47Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/webpack/harmony-module.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/webpack/module.js":
/*!***********************************!*\
  !*** (webpack)/webpack/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =\n/******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 880:\n/***/ (function(module) {\n\nmodule.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nccwpck_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\tvar threw = true;\n/******/ \t\ttry {\n/******/ \t\t\t__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);\n/******/ \t\t\tthrew = false;\n/******/ \t\t} finally {\n/******/ \t\t\tif(threw) delete __webpack_module_cache__[moduleId];\n/******/ \t\t}\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat */\n/******/ \t\n/******/ \t__nccwpck_require__.ab = __dirname + \"/\";/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nccwpck_require__(880);\n/******/ })()\n;\n/* WEBPACK VAR INJECTION */}.call(this, \"/\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS93ZWJwYWNrL21vZHVsZS5qcz8zZTczIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esc0JBQXNCO0FBQ3RCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxPQUFPOztBQUVQLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC93ZWJwYWNrL21vZHVsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID1cbi8qKioqKiovIChmdW5jdGlvbigpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHR2YXIgX193ZWJwYWNrX21vZHVsZXNfXyA9ICh7XG5cbi8qKiovIDg4MDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XG5cdFx0bW9kdWxlLnBhdGhzID0gW107XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuXG5cbi8qKiovIH0pXG5cbi8qKioqKiovIFx0fSk7XG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuLyoqKioqKi8gXHRcdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0dmFyIHRocmV3ID0gdHJ1ZTtcbi8qKioqKiovIFx0XHR0cnkge1xuLyoqKioqKi8gXHRcdFx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX19uY2N3cGNrX3JlcXVpcmVfXyk7XG4vKioqKioqLyBcdFx0XHR0aHJldyA9IGZhbHNlO1xuLyoqKioqKi8gXHRcdH0gZmluYWxseSB7XG4vKioqKioqLyBcdFx0XHRpZih0aHJldykgZGVsZXRlIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi8gXHRcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyBcdC8qIHdlYnBhY2svcnVudGltZS9jb21wYXQgKi9cbi8qKioqKiovIFx0XG4vKioqKioqLyBcdF9fbmNjd3Bja19yZXF1aXJlX18uYWIgPSBfX2Rpcm5hbWUgKyBcIi9cIjsvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHQvLyBtb2R1bGUgZXhwb3J0cyBtdXN0IGJlIHJldHVybmVkIGZyb20gcnVudGltZSBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLyoqKioqKi8gXHQvLyBzdGFydHVwXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX19uY2N3cGNrX3JlcXVpcmVfXyg4ODApO1xuLyoqKioqKi8gfSkoKVxuOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/webpack/module.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp-context.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp-context.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.AmpStateContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar AmpStateContext = /*#__PURE__*/_react[\"default\"].createContext({});\n\nexports.AmpStateContext = AmpStateContext;\n\nif (true) {\n  AmpStateContext.displayName = 'AmpStateContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9hbXAtY29udGV4dC50cz84NzlmIl0sIm5hbWVzIjpbIkFtcFN0YXRlQ29udGV4dCIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFTzs7QUFBQSxJQUFNQSxlQUFtQyxnQkFBR0MsZ0NBQTVDLEVBQTRDQSxDQUE1Qzs7OztBQUVQLFVBQTJDO0FBQ3pDRCxpQkFBZSxDQUFmQTtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvYW1wLWNvbnRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBjb25zdCBBbXBTdGF0ZUNvbnRleHQ6IFJlYWN0LkNvbnRleHQ8YW55PiA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe30pXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEFtcFN0YXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdBbXBTdGF0ZUNvbnRleHQnXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/amp-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _s = $RefreshSig$();\n\nexports.__esModule = true;\nexports.isInAmpMode = isInAmpMode;\nexports.useAmp = useAmp;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _ampContext = __webpack_require__(/*! ./amp-context */ \"./node_modules/next/dist/next-server/lib/amp-context.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction isInAmpMode() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$ampFirst = _ref.ampFirst,\n      ampFirst = _ref$ampFirst === void 0 ? false : _ref$ampFirst,\n      _ref$hybrid = _ref.hybrid,\n      hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,\n      _ref$hasQuery = _ref.hasQuery,\n      hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;\n\n  return ampFirst || hybrid && hasQuery;\n}\n\nfunction useAmp() {\n  _s();\n\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(_react[\"default\"].useContext(_ampContext.AmpStateContext));\n}\n\n_s(useAmp, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9hbXAudHM/MDdkMiJdLCJuYW1lcyI6WyJhbXBGaXJzdCIsImh5YnJpZCIsImhhc1F1ZXJ5IiwiaXNJbkFtcE1vZGUiLCJSZWFjdCIsIkFtcFN0YXRlQ29udGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRU87O0FBQUEsdUJBSVU7QUFBQSxpRkFKVixFQUlVO0FBQUEsMkJBSGZBLFFBR2U7QUFBQSxNQUhmQSxRQUdlLDhCQUpXLEtBSVg7QUFBQSx5QkFGZkMsTUFFZTtBQUFBLE1BRmZBLE1BRWUsNEJBSlcsS0FJWDtBQUFBLDJCQURmQyxRQUNlO0FBQUEsTUFEZkEsUUFDZSw4QkFKVyxLQUlYOztBQUNmLFNBQU9GLFFBQVEsSUFBS0MsTUFBTSxJQUExQjtBQUdLOztBQUFBLGtCQUEyQjtBQUFBOztBQUNoQztBQUNBLFNBQU9FLFdBQVcsQ0FBQ0MsNkJBQWlCQyxZQUFwQyxlQUFtQkQsQ0FBRCxDQUFsQjtBQUNEOztHQUhNLE0iLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9hbXAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBBbXBTdGF0ZUNvbnRleHQgfSBmcm9tICcuL2FtcC1jb250ZXh0J1xuXG5leHBvcnQgZnVuY3Rpb24gaXNJbkFtcE1vZGUoe1xuICBhbXBGaXJzdCA9IGZhbHNlLFxuICBoeWJyaWQgPSBmYWxzZSxcbiAgaGFzUXVlcnkgPSBmYWxzZSxcbn0gPSB7fSk6IGJvb2xlYW4ge1xuICByZXR1cm4gYW1wRmlyc3QgfHwgKGh5YnJpZCAmJiBoYXNRdWVyeSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUFtcCgpOiBib29sZWFuIHtcbiAgLy8gRG9uJ3QgYXNzaWduIHRoZSBjb250ZXh0IHZhbHVlIHRvIGEgdmFyaWFibGUgdG8gc2F2ZSBieXRlc1xuICByZXR1cm4gaXNJbkFtcE1vZGUoUmVhY3QudXNlQ29udGV4dChBbXBTdGF0ZUNvbnRleHQpKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/amp.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head-manager-context.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head-manager-context.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.HeadManagerContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar HeadManagerContext = /*#__PURE__*/_react[\"default\"].createContext({});\n\nexports.HeadManagerContext = HeadManagerContext;\n\nif (true) {\n  HeadManagerContext.displayName = 'HeadManagerContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9oZWFkLW1hbmFnZXItY29udGV4dC50cz9iMmQ2Il0sIm5hbWVzIjpbIkhlYWRNYW5hZ2VyQ29udGV4dCIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFTzs7QUFBQSxJQUFNQSxrQkFLWCxnQkFBR0MsZ0NBTEUsRUFLRkEsQ0FMRTs7OztBQU9QLFVBQTJDO0FBQ3pDRCxvQkFBa0IsQ0FBbEJBO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9oZWFkLW1hbmFnZXItY29udGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGNvbnN0IEhlYWRNYW5hZ2VyQ29udGV4dDogUmVhY3QuQ29udGV4dDx7XG4gIHVwZGF0ZUhlYWQ/OiAoc3RhdGU6IGFueSkgPT4gdm9pZFxuICBtb3VudGVkSW5zdGFuY2VzPzogYW55XG4gIHVwZGF0ZVNjcmlwdHM/OiAoc3RhdGU6IGFueSkgPT4gdm9pZFxuICBzY3JpcHRzPzogYW55XG59PiA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe30pXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEhlYWRNYW5hZ2VyQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdIZWFkTWFuYWdlckNvbnRleHQnXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/head-manager-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexports.__esModule = true;\nexports.defaultHead = defaultHead;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _sideEffect = _interopRequireDefault(__webpack_require__(/*! ./side-effect */ \"./node_modules/next/dist/next-server/lib/side-effect.js\"));\n\nvar _ampContext = __webpack_require__(/*! ./amp-context */ \"./node_modules/next/dist/next-server/lib/amp-context.js\");\n\nvar _headManagerContext = __webpack_require__(/*! ./head-manager-context */ \"./node_modules/next/dist/next-server/lib/head-manager-context.js\");\n\nvar _amp = __webpack_require__(/*! ./amp */ \"./node_modules/next/dist/next-server/lib/amp.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction defaultHead() {\n  var inAmpMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var head = [/*#__PURE__*/_react[\"default\"].createElement(\"meta\", {\n    charSet: \"utf-8\"\n  })];\n\n  if (!inAmpMode) {\n    head.push( /*#__PURE__*/_react[\"default\"].createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width\"\n    }));\n  }\n\n  return head;\n}\n\nfunction onlyReactElement(list, child) {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list;\n  } // Adds support for React.Fragment\n\n\n  if (child.type === _react[\"default\"].Fragment) {\n    return list.concat(_react[\"default\"].Children.toArray(child.props.children).reduce(function (fragmentList, fragmentChild) {\n      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {\n        return fragmentList;\n      }\n\n      return fragmentList.concat(fragmentChild);\n    }, []));\n  }\n\n  return list.concat(child);\n}\n\nvar METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\nreturns a function for filtering head child elements\nwhich shouldn't be duplicated, like <title/>\nAlso adds support for deduplicated `key` properties\n*/\n\nfunction unique() {\n  var keys = new Set();\n  var tags = new Set();\n  var metaTypes = new Set();\n  var metaCategories = {};\n  return function (h) {\n    var isUnique = true;\n    var hasKey = false;\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true;\n      var key = h.key.slice(h.key.indexOf('$') + 1);\n\n      if (keys.has(key)) {\n        isUnique = false;\n      } else {\n        keys.add(key);\n      }\n    } // eslint-disable-next-line default-case\n\n\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false;\n        } else {\n          tags.add(h.type);\n        }\n\n        break;\n\n      case 'meta':\n        for (var i = 0, len = METATYPES.length; i < len; i++) {\n          var metatype = METATYPES[i];\n          if (!h.props.hasOwnProperty(metatype)) continue;\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false;\n            } else {\n              metaTypes.add(metatype);\n            }\n          } else {\n            var category = h.props[metatype];\n            var categories = metaCategories[metatype] || new Set();\n\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false;\n            } else {\n              categories.add(category);\n              metaCategories[metatype] = categories;\n            }\n          }\n        }\n\n        break;\n    }\n\n    return isUnique;\n  };\n}\n/**\n*\n* @param headElements List of multiple <Head> instances\n*/\n\n\nfunction reduceComponents(headElements, props) {\n  return headElements.reduce(function (list, headElement) {\n    var headElementChildren = _react[\"default\"].Children.toArray(headElement.props.children);\n\n    return list.concat(headElementChildren);\n  }, []).reduce(onlyReactElement, []).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map(function (c, i) {\n    var key = c.key || i;\n\n    if (false) { var newProps; }\n\n    return /*#__PURE__*/_react[\"default\"].cloneElement(c, {\n      key: key\n    });\n  });\n}\n/**\n* This component injects elements to `<head>` of your page.\n* To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n*/\n\n\nfunction Head(_ref) {\n  var children = _ref.children;\n  var ampState = (0, _react.useContext)(_ampContext.AmpStateContext);\n  var headManager = (0, _react.useContext)(_headManagerContext.HeadManagerContext);\n  return /*#__PURE__*/_react[\"default\"].createElement(_sideEffect[\"default\"], {\n    reduceComponentsToState: reduceComponents,\n    headManager: headManager,\n    inAmpMode: (0, _amp.isInAmpMode)(ampState)\n  }, children);\n} // TODO: Remove in the next major release\n\n\n_c = Head;\n\nHead.rewind = function () {};\n\nvar _default = Head;\nexports[\"default\"] = _default;\n\nvar _c;\n\n$RefreshReg$(_c, \"Head\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9oZWFkLnRzeD84YjI3Il0sIm5hbWVzIjpbImluQW1wTW9kZSIsImhlYWQiLCJjaGlsZCIsIlJlYWN0IiwibGlzdCIsImZyYWdtZW50TGlzdCIsIk1FVEFUWVBFUyIsImtleXMiLCJ0YWdzIiwibWV0YVR5cGVzIiwibWV0YUNhdGVnb3JpZXMiLCJoIiwiaXNVbmlxdWUiLCJoYXNLZXkiLCJrZXkiLCJpIiwibGVuIiwibWV0YXR5cGUiLCJjYXRlZ29yeSIsImNhdGVnb3JpZXMiLCJoZWFkRWxlbWVudHMiLCJoZWFkRWxlbWVudENoaWxkcmVuIiwiaGVhZEVsZW1lbnQiLCJkZWZhdWx0SGVhZCIsInByb3BzIiwidW5pcXVlIiwiYyIsInByb2Nlc3MiLCJhbXBTdGF0ZSIsIkFtcFN0YXRlQ29udGV4dCIsImhlYWRNYW5hZ2VyIiwiSGVhZE1hbmFnZXJDb250ZXh0IiwiSGVhZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNTzs7QUFBQSx1QkFBdUQ7QUFBQSxNQUFsQ0EsU0FBa0MsdUVBQXZELEtBQXVEO0FBQzVELE1BQU1DLElBQUksR0FBRyxjQUFDO0FBQU0sV0FBTyxFQUEzQjtBQUFjLElBQUQsQ0FBYjs7QUFDQSxNQUFJLENBQUosV0FBZ0I7QUFDZEEsUUFBSSxDQUFKQSxtQkFBVTtBQUFNLFVBQUksRUFBVjtBQUFzQixhQUFPLEVBQXZDQTtBQUFVLE1BQVZBO0FBRUY7O0FBQUE7QUFHRjs7QUFBQSx1Q0FHa0M7QUFDaEM7QUFDQSxNQUFJLDZCQUE2QixpQkFBakMsVUFBNEQ7QUFDMUQ7QUFFRixHQUxnQyxDQUtoQzs7O0FBQ0EsTUFBSUMsS0FBSyxDQUFMQSxTQUFlQyxrQkFBbkIsVUFBbUM7QUFDakMsV0FBT0MsSUFBSSxDQUFKQSxPQUNMRCxtQ0FBdUJELEtBQUssQ0FBTEEsTUFBdkJDLGlCQUNFLHVDQUdxQztBQUNuQyxVQUNFLHFDQUNBLHlCQUZGLFVBR0U7QUFDQTtBQUVGOztBQUFBLGFBQU9FLFlBQVksQ0FBWkEsT0FBUCxhQUFPQSxDQUFQO0FBWEpGLE9BREYsRUFDRUEsQ0FES0MsQ0FBUDtBQWtCRjs7QUFBQSxTQUFPQSxJQUFJLENBQUpBLE9BQVAsS0FBT0EsQ0FBUDtBQUdGOztBQUFBLElBQU1FLFNBQVMsR0FBRyxpQ0FBbEIsVUFBa0IsQ0FBbEI7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLGtCQUFrQjtBQUNoQixNQUFNQyxJQUFJLEdBQUcsSUFBYixHQUFhLEVBQWI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsSUFBYixHQUFhLEVBQWI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsSUFBbEIsR0FBa0IsRUFBbEI7QUFDQSxNQUFNQyxjQUFtRCxHQUF6RDtBQUVBLFNBQVFDLFdBQUQsRUFBZ0M7QUFDckMsUUFBSUMsUUFBUSxHQUFaO0FBQ0EsUUFBSUMsTUFBTSxHQUFWOztBQUVBLFFBQUlGLENBQUMsQ0FBREEsT0FBUyxPQUFPQSxDQUFDLENBQVIsUUFBVEEsWUFBc0NBLENBQUMsQ0FBREEsbUJBQTFDLEdBQWtFO0FBQ2hFRSxZQUFNLEdBQU5BO0FBQ0EsVUFBTUMsR0FBRyxHQUFHSCxDQUFDLENBQURBLFVBQVlBLENBQUMsQ0FBREEsbUJBQXhCLENBQVlBLENBQVo7O0FBQ0EsVUFBSUosSUFBSSxDQUFKQSxJQUFKLEdBQUlBLENBQUosRUFBbUI7QUFDakJLLGdCQUFRLEdBQVJBO0FBREYsYUFFTztBQUNMTCxZQUFJLENBQUpBO0FBRUg7QUFFRCxLQWRxQyxDQWNyQzs7O0FBQ0EsWUFBUUksQ0FBQyxDQUFUO0FBQ0U7QUFDQTtBQUNFLFlBQUlILElBQUksQ0FBSkEsSUFBU0csQ0FBQyxDQUFkLElBQUlILENBQUosRUFBc0I7QUFDcEJJLGtCQUFRLEdBQVJBO0FBREYsZUFFTztBQUNMSixjQUFJLENBQUpBLElBQVNHLENBQUMsQ0FBVkg7QUFFRjs7QUFBQTs7QUFDRjtBQUNFLGFBQUssSUFBSU8sQ0FBQyxHQUFMLEdBQVdDLEdBQUcsR0FBR1YsU0FBUyxDQUEvQixRQUF3Q1MsQ0FBQyxHQUF6QyxLQUFpREEsQ0FBakQsSUFBc0Q7QUFDcEQsY0FBTUUsUUFBUSxHQUFHWCxTQUFTLENBQTFCLENBQTBCLENBQTFCO0FBQ0EsY0FBSSxDQUFDSyxDQUFDLENBQURBLHFCQUFMLFFBQUtBLENBQUwsRUFBdUM7O0FBRXZDLGNBQUlNLFFBQVEsS0FBWixXQUE0QjtBQUMxQixnQkFBSVIsU0FBUyxDQUFUQSxJQUFKLFFBQUlBLENBQUosRUFBNkI7QUFDM0JHLHNCQUFRLEdBQVJBO0FBREYsbUJBRU87QUFDTEgsdUJBQVMsQ0FBVEE7QUFFSDtBQU5ELGlCQU1PO0FBQ0wsZ0JBQU1TLFFBQVEsR0FBR1AsQ0FBQyxDQUFEQSxNQUFqQixRQUFpQkEsQ0FBakI7QUFDQSxnQkFBTVEsVUFBVSxHQUFHVCxjQUFjLENBQWRBLFFBQWMsQ0FBZEEsSUFBNEIsSUFBL0MsR0FBK0MsRUFBL0M7O0FBQ0EsZ0JBQUksQ0FBQ08sUUFBUSxLQUFSQSxVQUF1QixDQUF4QixXQUFvQ0UsVUFBVSxDQUFWQSxJQUF4QyxRQUF3Q0EsQ0FBeEMsRUFBa0U7QUFDaEVQLHNCQUFRLEdBQVJBO0FBREYsbUJBRU87QUFDTE8sd0JBQVUsQ0FBVkE7QUFDQVQsNEJBQWMsQ0FBZEEsUUFBYyxDQUFkQTtBQUVIO0FBQ0Y7QUE5Qkw7O0FBQUE7QUFBQTs7QUFrQ0E7QUFqREY7QUFxREY7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsK0NBR0U7QUFDQSxTQUFPVSxZQUFZLENBQVpBLE9BRUgsNkJBQW9FO0FBQ2xFLFFBQU1DLG1CQUFtQixHQUFHbEIsbUNBQzFCbUIsV0FBVyxDQUFYQSxNQURGLFFBQTRCbkIsQ0FBNUI7O0FBR0EsV0FBT0MsSUFBSSxDQUFKQSxPQUFQLG1CQUFPQSxDQUFQO0FBTkNnQix1REFZR0csV0FBVyxDQUFDQyxLQUFLLENBWnBCSixTQVljLENBWmRBLFNBYUdLLE1BYkhMLGtCQWVBLGdCQUEyQztBQUM5QyxRQUFNTixHQUFHLEdBQUdZLENBQUMsQ0FBREEsT0FBWjs7QUFDQSxRQUNFQyxLQURGLEVBSUUsaUJBZUY7O0FBQUEsd0JBQU94QixrQ0FBc0I7QUFBRVcsU0FBL0IsRUFBK0JBO0FBQUYsS0FBdEJYLENBQVA7QUFwQ0osR0FBT2lCLENBQVA7QUF3Q0Y7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0Esb0JBQTJEO0FBQUEsTUFBM0QsUUFBMkQsUUFBM0QsUUFBMkQ7QUFDekQsTUFBTVEsUUFBUSxHQUFHLHVCQUFXQyxZQUE1QixlQUFpQixDQUFqQjtBQUNBLE1BQU1DLFdBQVcsR0FBRyx1QkFBV0Msb0JBQS9CLGtCQUFvQixDQUFwQjtBQUNBLHNCQUNFLGdDQUFDLFdBQUQ7QUFDRSwyQkFBdUIsRUFEekI7QUFFRSxlQUFXLEVBRmI7QUFHRSxhQUFTLEVBQUUsc0JBSGIsUUFHYTtBQUhiLEtBREYsUUFDRSxDQURGO0FBV0YsQyxDQUFBOzs7S0FkQSxJOztBQWVBQyxJQUFJLENBQUpBLFNBQWMsWUFBTSxDQUFwQkE7O2VBRWVBLEkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9oZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBFZmZlY3QgZnJvbSAnLi9zaWRlLWVmZmVjdCdcbmltcG9ydCB7IEFtcFN0YXRlQ29udGV4dCB9IGZyb20gJy4vYW1wLWNvbnRleHQnXG5pbXBvcnQgeyBIZWFkTWFuYWdlckNvbnRleHQgfSBmcm9tICcuL2hlYWQtbWFuYWdlci1jb250ZXh0J1xuaW1wb3J0IHsgaXNJbkFtcE1vZGUgfSBmcm9tICcuL2FtcCdcblxudHlwZSBXaXRoSW5BbXBNb2RlID0ge1xuICBpbkFtcE1vZGU/OiBib29sZWFuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0SGVhZChpbkFtcE1vZGUgPSBmYWxzZSk6IEpTWC5FbGVtZW50W10ge1xuICBjb25zdCBoZWFkID0gWzxtZXRhIGNoYXJTZXQ9XCJ1dGYtOFwiIC8+XVxuICBpZiAoIWluQW1wTW9kZSkge1xuICAgIGhlYWQucHVzaCg8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoXCIgLz4pXG4gIH1cbiAgcmV0dXJuIGhlYWRcbn1cblxuZnVuY3Rpb24gb25seVJlYWN0RWxlbWVudChcbiAgbGlzdDogQXJyYXk8UmVhY3QuUmVhY3RFbGVtZW50PGFueT4+LFxuICBjaGlsZDogUmVhY3QuUmVhY3RDaGlsZFxuKTogQXJyYXk8UmVhY3QuUmVhY3RFbGVtZW50PGFueT4+IHtcbiAgLy8gUmVhY3QgY2hpbGRyZW4gY2FuIGJlIFwic3RyaW5nXCIgb3IgXCJudW1iZXJcIiBpbiB0aGlzIGNhc2Ugd2UgaWdub3JlIHRoZW0gZm9yIGJhY2t3YXJkcyBjb21wYXRcbiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGNoaWxkID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBsaXN0XG4gIH1cbiAgLy8gQWRkcyBzdXBwb3J0IGZvciBSZWFjdC5GcmFnbWVudFxuICBpZiAoY2hpbGQudHlwZSA9PT0gUmVhY3QuRnJhZ21lbnQpIHtcbiAgICByZXR1cm4gbGlzdC5jb25jYXQoXG4gICAgICBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkLnByb3BzLmNoaWxkcmVuKS5yZWR1Y2UoXG4gICAgICAgIChcbiAgICAgICAgICBmcmFnbWVudExpc3Q6IEFycmF5PFJlYWN0LlJlYWN0RWxlbWVudDxhbnk+PixcbiAgICAgICAgICBmcmFnbWVudENoaWxkOiBSZWFjdC5SZWFjdENoaWxkXG4gICAgICAgICk6IEFycmF5PFJlYWN0LlJlYWN0RWxlbWVudDxhbnk+PiA9PiB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgdHlwZW9mIGZyYWdtZW50Q2hpbGQgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICAgICB0eXBlb2YgZnJhZ21lbnRDaGlsZCA9PT0gJ251bWJlcidcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBmcmFnbWVudExpc3RcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZyYWdtZW50TGlzdC5jb25jYXQoZnJhZ21lbnRDaGlsZClcbiAgICAgICAgfSxcbiAgICAgICAgW11cbiAgICAgIClcbiAgICApXG4gIH1cbiAgcmV0dXJuIGxpc3QuY29uY2F0KGNoaWxkKVxufVxuXG5jb25zdCBNRVRBVFlQRVMgPSBbJ25hbWUnLCAnaHR0cEVxdWl2JywgJ2NoYXJTZXQnLCAnaXRlbVByb3AnXVxuXG4vKlxuIHJldHVybnMgYSBmdW5jdGlvbiBmb3IgZmlsdGVyaW5nIGhlYWQgY2hpbGQgZWxlbWVudHNcbiB3aGljaCBzaG91bGRuJ3QgYmUgZHVwbGljYXRlZCwgbGlrZSA8dGl0bGUvPlxuIEFsc28gYWRkcyBzdXBwb3J0IGZvciBkZWR1cGxpY2F0ZWQgYGtleWAgcHJvcGVydGllc1xuKi9cbmZ1bmN0aW9uIHVuaXF1ZSgpIHtcbiAgY29uc3Qga2V5cyA9IG5ldyBTZXQoKVxuICBjb25zdCB0YWdzID0gbmV3IFNldCgpXG4gIGNvbnN0IG1ldGFUeXBlcyA9IG5ldyBTZXQoKVxuICBjb25zdCBtZXRhQ2F0ZWdvcmllczogeyBbbWV0YXR5cGU6IHN0cmluZ106IFNldDxzdHJpbmc+IH0gPSB7fVxuXG4gIHJldHVybiAoaDogUmVhY3QuUmVhY3RFbGVtZW50PGFueT4pID0+IHtcbiAgICBsZXQgaXNVbmlxdWUgPSB0cnVlXG4gICAgbGV0IGhhc0tleSA9IGZhbHNlXG5cbiAgICBpZiAoaC5rZXkgJiYgdHlwZW9mIGgua2V5ICE9PSAnbnVtYmVyJyAmJiBoLmtleS5pbmRleE9mKCckJykgPiAwKSB7XG4gICAgICBoYXNLZXkgPSB0cnVlXG4gICAgICBjb25zdCBrZXkgPSBoLmtleS5zbGljZShoLmtleS5pbmRleE9mKCckJykgKyAxKVxuICAgICAgaWYgKGtleXMuaGFzKGtleSkpIHtcbiAgICAgICAgaXNVbmlxdWUgPSBmYWxzZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAga2V5cy5hZGQoa2V5KVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZWZhdWx0LWNhc2VcbiAgICBzd2l0Y2ggKGgudHlwZSkge1xuICAgICAgY2FzZSAndGl0bGUnOlxuICAgICAgY2FzZSAnYmFzZSc6XG4gICAgICAgIGlmICh0YWdzLmhhcyhoLnR5cGUpKSB7XG4gICAgICAgICAgaXNVbmlxdWUgPSBmYWxzZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRhZ3MuYWRkKGgudHlwZSlcbiAgICAgICAgfVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnbWV0YSc6XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBNRVRBVFlQRVMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICBjb25zdCBtZXRhdHlwZSA9IE1FVEFUWVBFU1tpXVxuICAgICAgICAgIGlmICghaC5wcm9wcy5oYXNPd25Qcm9wZXJ0eShtZXRhdHlwZSkpIGNvbnRpbnVlXG5cbiAgICAgICAgICBpZiAobWV0YXR5cGUgPT09ICdjaGFyU2V0Jykge1xuICAgICAgICAgICAgaWYgKG1ldGFUeXBlcy5oYXMobWV0YXR5cGUpKSB7XG4gICAgICAgICAgICAgIGlzVW5pcXVlID0gZmFsc2VcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG1ldGFUeXBlcy5hZGQobWV0YXR5cGUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGNhdGVnb3J5ID0gaC5wcm9wc1ttZXRhdHlwZV1cbiAgICAgICAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBtZXRhQ2F0ZWdvcmllc1ttZXRhdHlwZV0gfHwgbmV3IFNldCgpXG4gICAgICAgICAgICBpZiAoKG1ldGF0eXBlICE9PSAnbmFtZScgfHwgIWhhc0tleSkgJiYgY2F0ZWdvcmllcy5oYXMoY2F0ZWdvcnkpKSB7XG4gICAgICAgICAgICAgIGlzVW5pcXVlID0gZmFsc2VcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNhdGVnb3JpZXMuYWRkKGNhdGVnb3J5KVxuICAgICAgICAgICAgICBtZXRhQ2F0ZWdvcmllc1ttZXRhdHlwZV0gPSBjYXRlZ29yaWVzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgcmV0dXJuIGlzVW5pcXVlXG4gIH1cbn1cblxuLyoqXG4gKlxuICogQHBhcmFtIGhlYWRFbGVtZW50cyBMaXN0IG9mIG11bHRpcGxlIDxIZWFkPiBpbnN0YW5jZXNcbiAqL1xuZnVuY3Rpb24gcmVkdWNlQ29tcG9uZW50cyhcbiAgaGVhZEVsZW1lbnRzOiBBcnJheTxSZWFjdC5SZWFjdEVsZW1lbnQ8YW55Pj4sXG4gIHByb3BzOiBXaXRoSW5BbXBNb2RlXG4pIHtcbiAgcmV0dXJuIGhlYWRFbGVtZW50c1xuICAgIC5yZWR1Y2UoXG4gICAgICAobGlzdDogUmVhY3QuUmVhY3RDaGlsZFtdLCBoZWFkRWxlbWVudDogUmVhY3QuUmVhY3RFbGVtZW50PGFueT4pID0+IHtcbiAgICAgICAgY29uc3QgaGVhZEVsZW1lbnRDaGlsZHJlbiA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoXG4gICAgICAgICAgaGVhZEVsZW1lbnQucHJvcHMuY2hpbGRyZW5cbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gbGlzdC5jb25jYXQoaGVhZEVsZW1lbnRDaGlsZHJlbilcbiAgICAgIH0sXG4gICAgICBbXVxuICAgIClcbiAgICAucmVkdWNlKG9ubHlSZWFjdEVsZW1lbnQsIFtdKVxuICAgIC5yZXZlcnNlKClcbiAgICAuY29uY2F0KGRlZmF1bHRIZWFkKHByb3BzLmluQW1wTW9kZSkpXG4gICAgLmZpbHRlcih1bmlxdWUoKSlcbiAgICAucmV2ZXJzZSgpXG4gICAgLm1hcCgoYzogUmVhY3QuUmVhY3RFbGVtZW50PGFueT4sIGk6IG51bWJlcikgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gYy5rZXkgfHwgaVxuICAgICAgaWYgKFxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ2RldmVsb3BtZW50JyAmJlxuICAgICAgICBwcm9jZXNzLmVudi5fX05FWFRfT1BUSU1JWkVfRk9OVFMgJiZcbiAgICAgICAgIXByb3BzLmluQW1wTW9kZVxuICAgICAgKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBjLnR5cGUgPT09ICdsaW5rJyAmJlxuICAgICAgICAgIGMucHJvcHNbJ2hyZWYnXSAmJlxuICAgICAgICAgIC8vIFRPRE8ocHJhdGVla2JoQCk6IFJlcGxhY2UgdGhpcyB3aXRoIGNvbnN0IGZyb20gYGNvbnN0YW50c2Agd2hlbiB0aGUgdHJlZSBzaGFraW5nIHdvcmtzLlxuICAgICAgICAgIFsnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MnXS5zb21lKCh1cmwpID0+XG4gICAgICAgICAgICBjLnByb3BzWydocmVmJ10uc3RhcnRzV2l0aCh1cmwpXG4gICAgICAgICAgKVxuICAgICAgICApIHtcbiAgICAgICAgICBjb25zdCBuZXdQcm9wcyA9IHsgLi4uKGMucHJvcHMgfHwge30pIH1cbiAgICAgICAgICBuZXdQcm9wc1snZGF0YS1ocmVmJ10gPSBuZXdQcm9wc1snaHJlZiddXG4gICAgICAgICAgbmV3UHJvcHNbJ2hyZWYnXSA9IHVuZGVmaW5lZFxuICAgICAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoYywgbmV3UHJvcHMpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoYywgeyBrZXkgfSlcbiAgICB9KVxufVxuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGluamVjdHMgZWxlbWVudHMgdG8gYDxoZWFkPmAgb2YgeW91ciBwYWdlLlxuICogVG8gYXZvaWQgZHVwbGljYXRlZCBgdGFnc2AgaW4gYDxoZWFkPmAgeW91IGNhbiB1c2UgdGhlIGBrZXlgIHByb3BlcnR5LCB3aGljaCB3aWxsIG1ha2Ugc3VyZSBldmVyeSB0YWcgaXMgb25seSByZW5kZXJlZCBvbmNlLlxuICovXG5mdW5jdGlvbiBIZWFkKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgYW1wU3RhdGUgPSB1c2VDb250ZXh0KEFtcFN0YXRlQ29udGV4dClcbiAgY29uc3QgaGVhZE1hbmFnZXIgPSB1c2VDb250ZXh0KEhlYWRNYW5hZ2VyQ29udGV4dClcbiAgcmV0dXJuIChcbiAgICA8RWZmZWN0XG4gICAgICByZWR1Y2VDb21wb25lbnRzVG9TdGF0ZT17cmVkdWNlQ29tcG9uZW50c31cbiAgICAgIGhlYWRNYW5hZ2VyPXtoZWFkTWFuYWdlcn1cbiAgICAgIGluQW1wTW9kZT17aXNJbkFtcE1vZGUoYW1wU3RhdGUpfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0VmZmVjdD5cbiAgKVxufVxuXG4vLyBUT0RPOiBSZW1vdmUgaW4gdGhlIG5leHQgbWFqb3IgcmVsZWFzZVxuSGVhZC5yZXdpbmQgPSAoKSA9PiB7fVxuXG5leHBvcnQgZGVmYXVsdCBIZWFkXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/head.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.normalizeLocalePath = normalizeLocalePath;\n\nfunction normalizeLocalePath(pathname, locales) {\n  var detectedLocale; // first item will be empty string from splitting at first char\n\n  var pathnameParts = pathname.split('/');\n  (locales || []).some(function (locale) {\n    if (pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n\n    return false;\n  });\n  return {\n    pathname: pathname,\n    detectedLocale: detectedLocale\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC50cz9lOGViIl0sIm5hbWVzIjpbInBhdGhuYW1lUGFydHMiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJsb2NhbGUiLCJkZXRlY3RlZExvY2FsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxnREFNTDtBQUNBLHFCQURBLENBRUE7O0FBQ0EsTUFBTUEsYUFBYSxHQUFHQyxRQUFRLENBQVJBLE1BQXRCLEdBQXNCQSxDQUF0QjtBQUVDLEdBQUNDLE9BQU8sSUFBUixTQUFzQkMsZ0JBQUQsRUFBWTtBQUNoQyxRQUFJSCxhQUFhLENBQWJBLENBQWEsQ0FBYkEsbUJBQW1DRyxNQUFNLENBQTdDLFdBQXVDQSxFQUF2QyxFQUE2RDtBQUMzREMsb0JBQWMsR0FBZEE7QUFDQUosbUJBQWEsQ0FBYkE7QUFDQUMsY0FBUSxHQUFHRCxhQUFhLENBQWJBLGFBQVhDO0FBQ0E7QUFFRjs7QUFBQTtBQVBEO0FBVUQsU0FBTztBQUNMQSxZQURLLEVBQ0xBLFFBREs7QUFFTEcsa0JBRkYsRUFFRUE7QUFGSyxHQUFQO0FBSUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVMb2NhbGVQYXRoKFxuICBwYXRobmFtZTogc3RyaW5nLFxuICBsb2NhbGVzPzogc3RyaW5nW11cbik6IHtcbiAgZGV0ZWN0ZWRMb2NhbGU/OiBzdHJpbmdcbiAgcGF0aG5hbWU6IHN0cmluZ1xufSB7XG4gIGxldCBkZXRlY3RlZExvY2FsZTogc3RyaW5nIHwgdW5kZWZpbmVkXG4gIC8vIGZpcnN0IGl0ZW0gd2lsbCBiZSBlbXB0eSBzdHJpbmcgZnJvbSBzcGxpdHRpbmcgYXQgZmlyc3QgY2hhclxuICBjb25zdCBwYXRobmFtZVBhcnRzID0gcGF0aG5hbWUuc3BsaXQoJy8nKVxuXG4gIDsobG9jYWxlcyB8fCBbXSkuc29tZSgobG9jYWxlKSA9PiB7XG4gICAgaWYgKHBhdGhuYW1lUGFydHNbMV0udG9Mb3dlckNhc2UoKSA9PT0gbG9jYWxlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIGRldGVjdGVkTG9jYWxlID0gbG9jYWxlXG4gICAgICBwYXRobmFtZVBhcnRzLnNwbGljZSgxLCAxKVxuICAgICAgcGF0aG5hbWUgPSBwYXRobmFtZVBhcnRzLmpvaW4oJy8nKSB8fCAnLydcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWUsXG4gICAgZGV0ZWN0ZWRMb2NhbGUsXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports[\"default\"] = mitt;\n/*\nMIT License\nCopyright (c) Jason Miller (https://jasonformat.com/)\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\nfunction mitt() {\n  var all = Object.create(null);\n  return {\n    on: function on(type, handler) {\n      ;\n      (all[type] || (all[type] = [])).push(handler);\n    },\n    off: function off(type, handler) {\n      if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n      }\n    },\n    emit: function emit(type) {\n      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        evts[_key - 1] = arguments[_key];\n      }\n\n      // eslint-disable-next-line array-callback-return\n      ;\n      (all[type] || []).slice().map(function (handler) {\n        handler.apply(void 0, evts);\n      });\n    }\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9taXR0LnRzP2Y0ZWMiXSwibmFtZXMiOlsiYWxsIiwiT2JqZWN0Iiwib24iLCJvZmYiLCJlbWl0IiwiaGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBOztBQVVlLGdCQUE2QjtBQUMxQyxNQUFNQSxHQUErQixHQUFHQyxNQUFNLENBQU5BLE9BQXhDLElBQXdDQSxDQUF4QztBQUVBLFNBQU87QUFDTEMsTUFESyxjQUNILElBREcsRUFDSCxPQURHLEVBQzhCO0FBQ2pDO0FBQUMsT0FBQ0YsR0FBRyxDQUFIQSxJQUFHLENBQUhBLEtBQWNBLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxHQUFmLEVBQUNBLENBQUQ7QUFGRTtBQUtMRyxPQUxLLGVBS0YsSUFMRSxFQUtGLE9BTEUsRUFLK0I7QUFDbEMsVUFBSUgsR0FBRyxDQUFQLElBQU8sQ0FBUCxFQUFlO0FBQ2JBLFdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxRQUFpQkEsR0FBRyxDQUFIQSxJQUFHLENBQUhBLHNCQUFqQkE7QUFFSDtBQVRJO0FBV0xJLFFBWEssZ0JBV0QsSUFYQyxFQVc4QjtBQUFBLHdDQUEvQixJQUErQjtBQUEvQixZQUErQjtBQUFBOztBQUNqQztBQUNBO0FBQUMsT0FBQ0osR0FBRyxDQUFIQSxJQUFHLENBQUhBLElBQUQsZ0JBQStCSyxpQkFBRCxFQUFzQjtBQUNuREEsZUFBTyxNQUFQQTtBQUREO0FBYkw7QUFBTyxHQUFQO0FBa0JEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvbWl0dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5NSVQgTGljZW5zZVxuXG5Db3B5cmlnaHQgKGMpIEphc29uIE1pbGxlciAoaHR0cHM6Ly9qYXNvbmZvcm1hdC5jb20vKVxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4qL1xuXG4vLyBUaGlzIGZpbGUgaXMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2RldmVsb3BpdC9taXR0L2Jsb2IvdjEuMS4zL3NyYy9pbmRleC5qc1xuLy8gSXQncyBiZWVuIGVkaXRlZCBmb3IgdGhlIG5lZWRzIG9mIHRoaXMgc2NyaXB0XG4vLyBTZWUgdGhlIExJQ0VOU0UgYXQgdGhlIHRvcCBvZiB0aGUgZmlsZVxuXG50eXBlIEhhbmRsZXIgPSAoLi4uZXZ0czogYW55W10pID0+IHZvaWRcblxuZXhwb3J0IHR5cGUgTWl0dEVtaXR0ZXIgPSB7XG4gIG9uKHR5cGU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcik6IHZvaWRcbiAgb2ZmKHR5cGU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcik6IHZvaWRcbiAgZW1pdCh0eXBlOiBzdHJpbmcsIC4uLmV2dHM6IGFueVtdKTogdm9pZFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaXR0KCk6IE1pdHRFbWl0dGVyIHtcbiAgY29uc3QgYWxsOiB7IFtzOiBzdHJpbmddOiBIYW5kbGVyW10gfSA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuICByZXR1cm4ge1xuICAgIG9uKHR5cGU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcikge1xuICAgICAgOyhhbGxbdHlwZV0gfHwgKGFsbFt0eXBlXSA9IFtdKSkucHVzaChoYW5kbGVyKVxuICAgIH0sXG5cbiAgICBvZmYodHlwZTogc3RyaW5nLCBoYW5kbGVyOiBIYW5kbGVyKSB7XG4gICAgICBpZiAoYWxsW3R5cGVdKSB7XG4gICAgICAgIGFsbFt0eXBlXS5zcGxpY2UoYWxsW3R5cGVdLmluZGV4T2YoaGFuZGxlcikgPj4+IDAsIDEpXG4gICAgICB9XG4gICAgfSxcblxuICAgIGVtaXQodHlwZTogc3RyaW5nLCAuLi5ldnRzOiBhbnlbXSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGFycmF5LWNhbGxiYWNrLXJldHVyblxuICAgICAgOyhhbGxbdHlwZV0gfHwgW10pLnNsaWNlKCkubWFwKChoYW5kbGVyOiBIYW5kbGVyKSA9PiB7XG4gICAgICAgIGhhbmRsZXIoLi4uZXZ0cylcbiAgICAgIH0pXG4gICAgfSxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/mitt.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.RouterContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar RouterContext = /*#__PURE__*/_react[\"default\"].createContext(null);\n\nexports.RouterContext = RouterContext;\n\nif (true) {\n  RouterContext.displayName = 'RouterContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXItY29udGV4dC50cz84OTQ1Il0sIm5hbWVzIjpbIlJvdXRlckNvbnRleHQiLCJSZWFjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7O0FBR087O0FBQUEsSUFBTUEsYUFBYSxnQkFBR0MsZ0NBQXRCLElBQXNCQSxDQUF0Qjs7OztBQUVQLFVBQTJDO0FBQ3pDRCxlQUFhLENBQWJBO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXItY29udGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IE5leHRSb3V0ZXIgfSBmcm9tICcuL3JvdXRlci9yb3V0ZXInXG5cbmV4cG9ydCBjb25zdCBSb3V0ZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxOZXh0Um91dGVyPihudWxsIGFzIGFueSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdSb3V0ZXJDb250ZXh0J1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _classCallCheck = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nexports.__esModule = true;\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\n\nvar _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ \"./node_modules/next/dist/next-server/server/denormalize-page-path.js\");\n\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js\");\n\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"./node_modules/next/dist/next-server/lib/mitt.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\");\n\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js\");\n\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\");\n\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js\"));\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* global __NEXT_DATA__ */\n// tslint:disable:no-console\n\n\nvar detectDomainLocale;\n\nif (false) {}\n\nvar basePath =  false || '';\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\n\nfunction addPathPrefix(path, prefix) {\n  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : \"\".concat(prefix).concat(pathNoQueryHash(path) === '/' ? path.substring(1) : path) : path;\n}\n\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n  if (false) { var detectedDomain; }\n\n  return false;\n}\n\nfunction addLocale(path, locale, defaultLocale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction delLocale(path, locale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction pathNoQueryHash(path) {\n  var queryIndex = path.indexOf('?');\n  var hashIndex = path.indexOf('#');\n\n  if (queryIndex > -1 || hashIndex > -1) {\n    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n  }\n\n  return path;\n}\n\nfunction hasBasePath(path) {\n  path = pathNoQueryHash(path);\n  return path === basePath || path.startsWith(basePath + '/');\n}\n\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath);\n}\n\nfunction delBasePath(path) {\n  path = path.slice(basePath.length);\n  if (!path.startsWith('/')) path = \"/\".concat(path);\n  return path;\n}\n/**\n* Detects whether a given url is routable by the Next.js router (browser only).\n*/\n\n\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (url.startsWith('/') || url.startsWith('#')) return true;\n\n  try {\n    // absolute urls can be local if they are on the same origin\n    var locationOrigin = (0, _utils.getLocationOrigin)();\n    var resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction interpolateAs(route, asPathname, query) {\n  var interpolatedRoute = '';\n  var dynamicRegex = (0, _routeRegex.getRouteRegex)(route);\n  var dynamicGroups = dynamicRegex.groups;\n  var dynamicMatches = // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  var params = Object.keys(dynamicGroups);\n\n  if (!params.every(function (param) {\n    var value = dynamicMatches[param] || '';\n    var _dynamicGroups$param = dynamicGroups[param],\n        repeat = _dynamicGroups$param.repeat,\n        optional = _dynamicGroups$param.optional; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n\n    var replaced = \"[\".concat(repeat ? '...' : '').concat(param, \"]\");\n\n    if (optional) {\n      replaced = \"\".concat(!value ? '/' : '', \"[\").concat(replaced, \"]\");\n    }\n\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && ( // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    function (segment) {\n      return encodeURIComponent(segment);\n    }).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = ''; // did not satisfy all requirements\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params: params,\n    result: interpolatedRoute\n  };\n}\n\nfunction omitParmsFromQuery(query, params) {\n  var filteredQuery = {};\n  Object.keys(query).forEach(function (key) {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key];\n    }\n  });\n  return filteredQuery;\n}\n/**\n* Resolves a given hyperlink with a certain router state (basePath not included).\n* Preserves absolute urls.\n*/\n\n\nfunction resolveHref(currentPath, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  var base = new URL(currentPath, 'http://n');\n  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href); // Return because it cannot be routed by the Next.js router\n\n  if (!isLocalURL(urlAsString)) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n\n  try {\n    var finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);\n    var interpolatedAs = '';\n\n    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      var query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);\n\n      var _interpolateAs = interpolateAs(finalUrl.pathname, finalUrl.pathname, query),\n          result = _interpolateAs.result,\n          params = _interpolateAs.params;\n\n      if (result) {\n        interpolatedAs = (0, _utils.formatWithValidation)({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n\n\n    var resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\n\nfunction stripOrigin(url) {\n  var origin = (0, _utils.getLocationOrigin)();\n  return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\n\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  var _resolveHref = resolveHref(router.pathname, url, true),\n      _resolveHref2 = _slicedToArray(_resolveHref, 2),\n      resolvedHref = _resolveHref2[0],\n      resolvedAs = _resolveHref2[1];\n\n  var origin = (0, _utils.getLocationOrigin)();\n  var hrefHadOrigin = resolvedHref.startsWith(origin);\n  var asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n  resolvedHref = stripOrigin(resolvedHref);\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n  var preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n  var preparedAs = as ? stripOrigin(resolveHref(router.pathname, as)) : resolvedAs || resolvedHref;\n  return {\n    url: preparedUrl,\n    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n  };\n}\n\nvar manualScrollRestoration =  false && false;\nvar SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\n\nfunction fetchRetry(url, attempts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(function (res) {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1);\n      }\n\n      if (res.status === 404) {\n        return res.json().then(function (data) {\n          if (data.notFound) {\n            return {\n              notFound: SSG_DATA_NOT_FOUND\n            };\n          }\n\n          throw new Error(\"Failed to load static props\");\n        });\n      }\n\n      throw new Error(\"Failed to load static props\");\n    }\n\n    return res.json();\n  });\n}\n\nfunction fetchNextData(dataHref, isServerRender) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1)[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      (0, _routeLoader.markAssetError)(err);\n    }\n\n    throw err;\n  });\n}\n\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */\n  // Static Data Cache\n  function Router(_pathname, _query, _as, _ref) {\n    var _this = this;\n\n    var initialProps = _ref.initialProps,\n        pageLoader = _ref.pageLoader,\n        App = _ref.App,\n        wrapApp = _ref.wrapApp,\n        Component = _ref.Component,\n        err = _ref.err,\n        subscription = _ref.subscription,\n        isFallback = _ref.isFallback,\n        locale = _ref.locale,\n        locales = _ref.locales,\n        defaultLocale = _ref.defaultLocale,\n        domainLocales = _ref.domainLocales;\n\n    _classCallCheck(this, Router);\n\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n    this._inFlightRoute = void 0;\n    this._shallow = void 0;\n    this.locale = void 0;\n    this.locales = void 0;\n    this.defaultLocale = void 0;\n    this.domainLocales = void 0;\n    this.isReady = void 0;\n    this.isLocaleDomain = void 0;\n    this._idx = 0;\n\n    this.onPopState = function (e) {\n      var state = e.state;\n\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname2 = _this.pathname,\n            query = _this.query;\n\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname2),\n          query: query\n        }), (0, _utils.getURL)());\n\n        return;\n      }\n\n      if (!state.__N) {\n        return;\n      }\n\n      var forcedScroll;\n      var url = state.url,\n          as = state.as,\n          options = state.options,\n          idx = state.idx;\n\n      if (false) { var v; }\n\n      _this._idx = idx;\n\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),\n          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n\n      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (_this._bps && !_this._bps(state)) {\n        return;\n      }\n\n      _this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && _this._shallow,\n        locale: options.locale || _this.defaultLocale\n      }), forcedScroll);\n    }; // represents the current component key\n\n\n    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        initial: true,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ]\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    var autoExportDynamic = (0, _isDynamic.isDynamicRoute)(_pathname) && self.__NEXT_DATA__.autoExport;\n\n    this.asPath = autoExportDynamic ? _pathname : _as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || !autoExportDynamic && !self.location.search);\n    this.isLocaleDomain = false;\n\n    if (false) {}\n\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname),\n          query: _query\n        }), (0, _utils.getURL)(), {\n          locale: locale\n        });\n      }\n\n      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n\n      if (false) {}\n    }\n  }\n\n  _createClass(Router, [{\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n    /**\n    * Go back in history\n    */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n    /**\n    * Performs a `pushState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"push\",\n    value: function push(url, as) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (false) {}\n\n      ;\n\n      var _prepareUrlAs = prepareUrlAs(this, url, as);\n\n      url = _prepareUrlAs.url;\n      as = _prepareUrlAs.as;\n      return this.change('pushState', url, as, options);\n    }\n    /**\n    * Performs a `replaceState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"replace\",\n    value: function replace(url, as) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n\n      var _prepareUrlAs2 = prepareUrlAs(this, url, as);\n\n      url = _prepareUrlAs2.url;\n      as = _prepareUrlAs2.as;\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options, forcedScroll) {\n        var _this2 = this;\n\n        var _options$scroll, localeChange, parsedAs, localePathResult, didNavigate, _this$locales, detectedDomain, asNoBasePath, _options$shallow, shallow, routeProps, cleanedAs, parsed, _parsed, pathname, query, pages, rewrites, _yield, route, resolvedAs, rewritesResult, _parsedAs, asPathname, routeRegex, routeMatch, shouldInterpolate, interpolatedAs, missingParams, routeInfo, _routeInfo, error, props, __N_SSG, __N_SSP, destination, parsedHref, _prepareUrlAs3, newUrl, newAs, notFoundRoute, appComp, isValidShallowRoute;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (isLocalURL(url)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                window.location.href = url;\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n                // for static pages with query params in the URL we delay\n                // marking the router ready until after the query is updated\n                if (options._h) {\n                  this.isReady = true;\n                } // Default to scroll reset behavior unless explicitly specified to be\n                // `false`! This makes the behavior between using `Router#push` and a\n                // `<Link />` consistent.\n\n\n                options.scroll = !!((_options$scroll = options.scroll) != null ? _options$scroll : true);\n                localeChange = options.locale !== this.locale;\n\n                if (true) {\n                  _context.next = 18;\n                  break;\n                }\n\n                this.locale = options.locale === false ? this.defaultLocale : options.locale || this.locale;\n\n                if (typeof options.locale === 'undefined') {\n                  options.locale = this.locale;\n                }\n\n                parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(hasBasePath(as) ? delBasePath(as) : as);\n                localePathResult = (0, _normalizeLocalePath.normalizeLocalePath)(parsedAs.pathname, this.locales);\n\n                if (localePathResult.detectedLocale) {\n                  this.locale = localePathResult.detectedLocale;\n                  parsedAs.pathname = addBasePath(parsedAs.pathname);\n                  as = (0, _utils.formatWithValidation)(parsedAs);\n                  url = addBasePath((0, _normalizeLocalePath.normalizeLocalePath)(hasBasePath(url) ? delBasePath(url) : url, this.locales).pathname);\n                }\n\n                didNavigate = false; // we need to wrap this in the env check again since regenerator runtime\n                // moves this on its own due to the return\n\n                if (false) {}\n\n                detectedDomain = detectDomainLocale(this.domainLocales, undefined, this.locale); // we need to wrap this in the env check again since regenerator runtime\n                // moves this on its own due to the return\n\n                if (false) {}\n\n                if (!didNavigate) {\n                  _context.next = 18;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", new Promise(function () {}));\n\n              case 18:\n                if (!options._h) {\n                  this.isSsr = false;\n                } // marking route changes as a navigation start entry\n\n\n                if (_utils.ST) {\n                  performance.mark('routeChange');\n                }\n\n                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;\n                routeProps = {\n                  shallow: shallow\n                };\n\n                if (this._inFlightRoute) {\n                  this.abortComponentLoad(this._inFlightRoute, routeProps);\n                }\n\n                as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n                cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);\n                this._inFlightRoute = as; // If the url change is only related to a hash change\n                // We should not proceed. We should only change the state.\n                // WARNING: `_h` is an internal option for handing Next.js client-side\n                // hydration. Your app should _never_ use this property. It may change at\n                // any time without notice.\n\n                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this.asPath = cleanedAs;\n                Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?\n\n                this.changeState(method, url, as, options);\n                this.scrollToHash(cleanedAs);\n                this.notify(this.components[this.route], null);\n                Router.events.emit('hashChangeComplete', as, routeProps);\n                return _context.abrupt(\"return\", true);\n\n              case 34:\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                _parsed = parsed, pathname = _parsed.pathname, query = _parsed.query; // The build manifest needs to be loaded before auto-static dynamic pages\n                // get their query parameters to allow ensuring they can be parsed properly\n                // when rewritten to\n\n                _context.prev = 36;\n                _context.next = 39;\n                return this.pageLoader.getPageList();\n\n              case 39:\n                pages = _context.sent;\n                _context.next = 42;\n                return (0, _routeLoader.getClientBuildManifest)();\n\n              case 42:\n                _yield = _context.sent;\n                rewrites = _yield.__rewrites;\n                _context.next = 50;\n                break;\n\n              case 46:\n                _context.prev = 46;\n                _context.t0 = _context[\"catch\"](36);\n                // If we fail to resolve the page list or client-build manifest, we must\n                // do a server-side transition:\n                window.location.href = as;\n                return _context.abrupt(\"return\", false);\n\n              case 50:\n                parsed = this._resolveHref(parsed, pages);\n\n                if (parsed.pathname !== pathname) {\n                  pathname = parsed.pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                } // url and as should always be prefixed with basePath by this\n                // point by either next/link or router.push/replace so strip the\n                // basePath from the pathname to match the pages dir 1-to-1\n\n\n                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page\n                // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n                // We also need to set the method = replaceState always\n                // as this should not go into the history (That's how browsers work)\n                // We should compare the new asPath to the current asPath, not the url\n\n                if (!this.urlIsNew(cleanedAs) && !localeChange) {\n                  method = 'replaceState';\n                }\n\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname); // we need to resolve the as value using rewrites for dynamic SSG\n                // pages to allow building the data URL correctly\n\n                resolvedAs = as;\n\n                if (false) {}\n\n                if (isLocalURL(as)) {\n                  _context.next = 62;\n                  break;\n                }\n\n                if (false) {}\n\n                throw new Error(\"Invalid href: \\\"\".concat(url, \"\\\" and as: \\\"\").concat(as, \"\\\", received relative href and external as\") + \"\\nSee more info: https://err.sh/next.js/invalid-relative-url-external-as\");\n\n              case 60:\n                window.location.href = as;\n                return _context.abrupt(\"return\", false);\n\n              case 62:\n                resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n\n                if (!(0, _isDynamic.isDynamicRoute)(route)) {\n                  _context.next = 78;\n                  break;\n                }\n\n                _parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);\n                asPathname = _parsedAs.pathname;\n                routeRegex = (0, _routeRegex.getRouteRegex)(route);\n                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n                shouldInterpolate = route === asPathname;\n                interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n\n                if (!(!routeMatch || shouldInterpolate && !interpolatedAs.result)) {\n                  _context.next = 77;\n                  break;\n                }\n\n                missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n                  return !query[param];\n                });\n\n                if (!(missingParams.length > 0)) {\n                  _context.next = 75;\n                  break;\n                }\n\n                if (true) {\n                  console.warn(\"\".concat(shouldInterpolate ? \"Interpolating href\" : \"Mismatching `as` and `href`\", \" failed to manually provide \") + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n                }\n\n                throw new Error((shouldInterpolate ? \"The provided `href` (\".concat(url, \") value is missing query values (\").concat(missingParams.join(', '), \") to be interpolated properly. \") : \"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \")) + \"Read more: https://err.sh/vercel/next.js/\".concat(shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'));\n\n              case 75:\n                _context.next = 78;\n                break;\n\n              case 77:\n                if (shouldInterpolate) {\n                  as = (0, _utils.formatWithValidation)(Object.assign({}, _parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                  }));\n                } else {\n                  // Merge params into `query`, overwriting any specified in search\n                  Object.assign(query, routeMatch);\n                }\n\n              case 78:\n                Router.events.emit('routeChangeStart', as, routeProps);\n                _context.prev = 79;\n                _context.next = 82;\n                return this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps);\n\n              case 82:\n                routeInfo = _context.sent;\n                _routeInfo = routeInfo, error = _routeInfo.error, props = _routeInfo.props, __N_SSG = _routeInfo.__N_SSG, __N_SSP = _routeInfo.__N_SSP; // handle redirect on client-transition\n\n                if (!((__N_SSG || __N_SSP) && props)) {\n                  _context.next = 108;\n                  break;\n                }\n\n                if (!(props.pageProps && props.pageProps.__N_REDIRECT)) {\n                  _context.next = 95;\n                  break;\n                }\n\n                destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n                // client-navigation if it is falling back to hard navigation if\n                // it's not\n\n                if (!destination.startsWith('/')) {\n                  _context.next = 93;\n                  break;\n                }\n\n                parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);\n\n                this._resolveHref(parsedHref, pages, false);\n\n                if (!pages.includes(parsedHref.pathname)) {\n                  _context.next = 93;\n                  break;\n                }\n\n                _prepareUrlAs3 = prepareUrlAs(this, destination, destination), newUrl = _prepareUrlAs3.url, newAs = _prepareUrlAs3.as;\n                return _context.abrupt(\"return\", this.change(method, newUrl, newAs, options));\n\n              case 93:\n                window.location.href = destination;\n                return _context.abrupt(\"return\", new Promise(function () {}));\n\n              case 95:\n                if (!(props.notFound === SSG_DATA_NOT_FOUND)) {\n                  _context.next = 108;\n                  break;\n                }\n\n                _context.prev = 96;\n                _context.next = 99;\n                return this.fetchComponent('/404');\n\n              case 99:\n                notFoundRoute = '/404';\n                _context.next = 105;\n                break;\n\n              case 102:\n                _context.prev = 102;\n                _context.t1 = _context[\"catch\"](96);\n                notFoundRoute = '/_error';\n\n              case 105:\n                _context.next = 107;\n                return this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n                  shallow: false\n                });\n\n              case 107:\n                routeInfo = _context.sent;\n\n              case 108:\n                Router.events.emit('beforeHistoryChange', as, routeProps);\n                this.changeState(method, url, as, options);\n\n                if (true) {\n                  appComp = this.components['/_app'].Component;\n                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n                } // shallow routing is only allowed for same page URL changes.\n\n\n                isValidShallowRoute = options.shallow && this.route === route;\n                _context.next = 114;\n                return this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll || (isValidShallowRoute || !options.scroll ? null : {\n                  x: 0,\n                  y: 0\n                }))[\"catch\"](function (e) {\n                  if (e.cancelled) error = error || e;else throw e;\n                });\n\n              case 114:\n                if (!error) {\n                  _context.next = 117;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n                throw error;\n\n              case 117:\n                if (false) {}\n\n                Router.events.emit('routeChangeComplete', as, routeProps);\n                return _context.abrupt(\"return\", true);\n\n              case 122:\n                _context.prev = 122;\n                _context.t2 = _context[\"catch\"](79);\n\n                if (!_context.t2.cancelled) {\n                  _context.next = 126;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 126:\n                throw _context.t2;\n\n              case 127:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[36, 46], [79, 122], [96, 102]]);\n      }));\n\n      function change(_x, _x2, _x3, _x4, _x5) {\n        return _change.apply(this, arguments);\n      }\n\n      return change;\n    }()\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        this._shallow = options.shallow;\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options,\n          __N: true,\n          idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1\n        }, // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"handleRouteInfoError\",\n    value: function () {\n      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, routeProps, loadErrorFail) {\n        var Component, styleSheets, props, _yield$this$fetchComp, routeInfo;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!err.cancelled) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw err;\n\n              case 2:\n                if (!((0, _routeLoader.isAssetError)(err) || loadErrorFail)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n\n                window.location.href = as; // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n\n                throw buildCancellationError();\n\n              case 6:\n                _context2.prev = 6;\n\n                if (!(typeof Component === 'undefined' || typeof styleSheets === 'undefined')) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                ;\n                _context2.next = 11;\n                return this.fetchComponent('/_error');\n\n              case 11:\n                _yield$this$fetchComp = _context2.sent;\n                Component = _yield$this$fetchComp.page;\n                styleSheets = _yield$this$fetchComp.styleSheets;\n\n              case 14:\n                routeInfo = {\n                  props: props,\n                  Component: Component,\n                  styleSheets: styleSheets,\n                  err: err,\n                  error: err\n                };\n\n                if (routeInfo.props) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.prev = 16;\n                _context2.next = 19;\n                return this.getInitialProps(Component, {\n                  err: err,\n                  pathname: pathname,\n                  query: query\n                });\n\n              case 19:\n                routeInfo.props = _context2.sent;\n                _context2.next = 26;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.t0 = _context2[\"catch\"](16);\n                console.error('Error in error page `getInitialProps`: ', _context2.t0);\n                routeInfo.props = {};\n\n              case 26:\n                return _context2.abrupt(\"return\", routeInfo);\n\n              case 29:\n                _context2.prev = 29;\n                _context2.t1 = _context2[\"catch\"](6);\n                return _context2.abrupt(\"return\", this.handleRouteInfoError(_context2.t1, pathname, query, as, routeProps, true));\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 29], [16, 22]]);\n      }));\n\n      function handleRouteInfoError(_x6, _x7, _x8, _x9, _x10, _x11) {\n        return _handleRouteInfoError.apply(this, arguments);\n      }\n\n      return handleRouteInfoError;\n    }()\n  }, {\n    key: \"getRouteInfo\",\n    value: function () {\n      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as, resolvedAs, routeProps) {\n        var _this3 = this;\n\n        var existingRouteInfo, cachedRouteInfo, routeInfo, Component, __N_SSG, __N_SSP, _require, isValidElementType, dataHref, props;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                existingRouteInfo = this.components[route];\n\n                if (!(routeProps.shallow && existingRouteInfo && this.route === route)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", existingRouteInfo);\n\n              case 4:\n                cachedRouteInfo = existingRouteInfo && 'initial' in existingRouteInfo ? undefined : existingRouteInfo;\n\n                if (!cachedRouteInfo) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.t0 = cachedRouteInfo;\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.next = 11;\n                return this.fetchComponent(route).then(function (res) {\n                  return {\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP\n                  };\n                });\n\n              case 11:\n                _context3.t0 = _context3.sent;\n\n              case 12:\n                routeInfo = _context3.t0;\n                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;\n\n                if (false) {}\n\n                _require = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\"), isValidElementType = _require.isValidElementType;\n\n                if (isValidElementType(Component)) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n\n              case 18:\n                if (__N_SSG || __N_SSP) {\n                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({\n                    pathname: pathname,\n                    query: query\n                  }), resolvedAs, __N_SSG, this.locale);\n                }\n\n                _context3.next = 21;\n                return this._getData(function () {\n                  return __N_SSG ? _this3._getStaticData(dataHref) : __N_SSP ? _this3._getServerData(dataHref) : _this3.getInitialProps(Component, // we provide AppTree later so this needs to be `any`\n                  {\n                    pathname: pathname,\n                    query: query,\n                    asPath: as\n                  });\n                });\n\n              case 21:\n                props = _context3.sent;\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return _context3.abrupt(\"return\", routeInfo);\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t1 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", this.handleRouteInfoError(_context3.t1, pathname, query, as, routeProps));\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 27]]);\n      }));\n\n      function getRouteInfo(_x12, _x13, _x14, _x15, _x16, _x17) {\n        return _getRouteInfo.apply(this, arguments);\n      }\n\n      return getRouteInfo;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data, resetScroll) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      return this.notify(data, resetScroll);\n    }\n    /**\n    * Callback to execute before replacing router state\n    * @param cb callback to be executed\n    */\n\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n\n      var _this$asPath$split = this.asPath.split('#'),\n          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n          oldUrlNoHash = _this$asPath$split2[0],\n          oldHash = _this$asPath$split2[1];\n\n      var _as$split = as.split('#'),\n          _as$split2 = _slicedToArray(_as$split, 2),\n          newUrlNoHash = _as$split2[0],\n          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n\n\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n\n\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n\n\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n          _as$split4 = _slicedToArray(_as$split3, 2),\n          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value or `#top`\n      // To mirror browsers\n\n\n      if (hash === '' || hash === 'top') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n\n\n      var idEl = document.getElementById(hash);\n\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n\n\n      var nameEl = document.getElementsByName(hash)[0];\n\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n  }, {\n    key: \"_resolveHref\",\n    value: function _resolveHref(parsedHref, pages) {\n      var applyBasePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var pathname = parsedHref.pathname;\n      var cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(applyBasePath ? delBasePath(pathname) : pathname));\n\n      if (cleanPathname === '/404' || cleanPathname === '/_error') {\n        return parsedHref;\n      } // handle resolving href for dynamic routes\n\n\n      if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some(function (page) {\n          if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {\n            parsedHref.pathname = applyBasePath ? addBasePath(page) : page;\n            return true;\n          }\n        });\n      }\n\n      parsedHref.pathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)(parsedHref.pathname);\n      return parsedHref;\n    }\n    /**\n    * Prefetch page code, you may wait for the data during page rendering.\n    * This feature only works in production!\n    * @param url the href of prefetched page\n    * @param asPath the as path of the prefetched page\n    */\n\n  }, {\n    key: \"prefetch\",\n    value: function () {\n      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {\n        var _this4 = this;\n\n        var asPath,\n            options,\n            parsed,\n            _parsed2,\n            pathname,\n            parsedAs,\n            localePathResult,\n            pages,\n            route,\n            _args4 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;\n                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                _parsed2 = parsed, pathname = _parsed2.pathname;\n\n                if (false) {}\n\n                _context4.next = 7;\n                return this.pageLoader.getPageList();\n\n              case 7:\n                pages = _context4.sent;\n                parsed = this._resolveHref(parsed, pages, false);\n\n                if (parsed.pathname !== pathname) {\n                  pathname = parsed.pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n\n\n                if (false) {}\n\n                return _context4.abrupt(\"return\");\n\n              case 12:\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n                _context4.next = 15;\n                return Promise.all([this.pageLoader._isSsg(url).then(function (isSsg) {\n                  return isSsg ? _this4._getStaticData(_this4.pageLoader.getDataHref(url, asPath, true, typeof options.locale !== 'undefined' ? options.locale : _this4.locale)) : false;\n                }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function prefetch(_x18) {\n        return _prefetch.apply(this, arguments);\n      }\n\n      return prefetch;\n    }()\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = this.clc = function () {\n                  cancelled = true;\n                };\n\n                _context5.next = 4;\n                return this.pageLoader.loadPage(route);\n\n              case 4:\n                componentResult = _context5.sent;\n\n                if (!cancelled) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n\n              case 9:\n                if (cancel === this.clc) {\n                  this.clc = null;\n                }\n\n                return _context5.abrupt(\"return\", componentResult);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchComponent(_x19) {\n        return _fetchComponent.apply(this, arguments);\n      }\n\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this5 = this;\n\n      var cancelled = false;\n\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this5.clc) {\n          _this5.clc = null;\n        }\n\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n\n        return data;\n      });\n    }\n  }, {\n    key: \"_getStaticData\",\n    value: function _getStaticData(dataHref) {\n      var _this6 = this;\n\n      var _URL = new URL(dataHref, window.location.href),\n          cacheKey = _URL.href;\n\n      if (false) {}\n\n      return fetchNextData(dataHref, this.isSsr).then(function (data) {\n        _this6.sdc[cacheKey] = data;\n        return data;\n      });\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function _getServerData(dataHref) {\n      return fetchNextData(dataHref, this.isSsr);\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n\n      var AppTree = this._wrapApp(App);\n\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as, routeProps) {\n      if (this.clc) {\n        Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data, resetScroll) {\n      return this.sub(data, this.components['/_app'].Component, resetScroll);\n    }\n  }]);\n\n  return Router;\n}();\n\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt[\"default\"])();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.formatUrl = formatUrl;\n\nvar querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar slashedProtocols = /https?|ftp|gopher|file/;\n\nfunction formatUrl(urlObj) {\n  var auth = urlObj.auth,\n      hostname = urlObj.hostname;\n  var protocol = urlObj.protocol || '';\n  var pathname = urlObj.pathname || '';\n  var hash = urlObj.hash || '';\n  var query = urlObj.query || '';\n  var host = false;\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n\n  if (urlObj.host) {\n    host = auth + urlObj.host;\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? \"[\".concat(hostname, \"]\") : hostname);\n\n    if (urlObj.port) {\n      host += ':' + urlObj.port;\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query));\n  }\n\n  var search = urlObj.search || query && \"?\".concat(query) || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash;\n  if (search && search[0] !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n  search = search.replace('#', '%23');\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LXVybC50cz8xM2M3Il0sIm5hbWVzIjpbInNsYXNoZWRQcm90b2NvbHMiLCJwcm90b2NvbCIsInVybE9iaiIsInBhdGhuYW1lIiwiaGFzaCIsInF1ZXJ5IiwiaG9zdCIsImF1dGgiLCJlbmNvZGVVUklDb21wb25lbnQiLCJob3N0bmFtZSIsIlN0cmluZyIsInF1ZXJ5c3RyaW5nIiwic2VhcmNoIl0sIm1hcHBpbmdzIjoiOzs7OztBQXdCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXhCQSxDLENBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFNQSxJQUFNQSxnQkFBZ0IsR0FBdEI7O0FBRU8sMkJBQXNDO0FBQUEsTUFDdkMsSUFEdUMsR0FDM0MsTUFEMkMsQ0FDdkMsSUFEdUM7QUFBQSxNQUN2QyxRQUR1QyxHQUMzQyxNQUQyQyxDQUN2QyxRQUR1QztBQUUzQyxNQUFJQyxRQUFRLEdBQUdDLE1BQU0sQ0FBTkEsWUFBZjtBQUNBLE1BQUlDLFFBQVEsR0FBR0QsTUFBTSxDQUFOQSxZQUFmO0FBQ0EsTUFBSUUsSUFBSSxHQUFHRixNQUFNLENBQU5BLFFBQVg7QUFDQSxNQUFJRyxLQUFLLEdBQUdILE1BQU0sQ0FBTkEsU0FBWjtBQUNBLE1BQUlJLElBQW9CLEdBQXhCO0FBRUFDLE1BQUksR0FBR0EsSUFBSSxHQUFHQyxrQkFBa0IsQ0FBbEJBLElBQWtCLENBQWxCQSx3QkFBSCxNQUFYRDs7QUFFQSxNQUFJTCxNQUFNLENBQVYsTUFBaUI7QUFDZkksUUFBSSxHQUFHQyxJQUFJLEdBQUdMLE1BQU0sQ0FBcEJJO0FBREYsU0FFTyxjQUFjO0FBQ25CQSxRQUFJLEdBQUdDLElBQUksSUFBSSxDQUFDRSxRQUFRLENBQVJBLFFBQUQsR0FBQ0EsQ0FBRCwrQkFBZkgsUUFBVyxDQUFYQTs7QUFDQSxRQUFJSixNQUFNLENBQVYsTUFBaUI7QUFDZkksVUFBSSxJQUFJLE1BQU1KLE1BQU0sQ0FBcEJJO0FBRUg7QUFFRDs7QUFBQSxNQUFJRCxLQUFLLElBQUksaUJBQWIsVUFBd0M7QUFDdENBLFNBQUssR0FBR0ssTUFBTSxDQUFDQyxXQUFXLENBQVhBLHVCQUFmTixLQUFlTSxDQUFELENBQWROO0FBR0Y7O0FBQUEsTUFBSU8sTUFBTSxHQUFHVixNQUFNLENBQU5BLFVBQWtCRyxLQUFLLGVBQXZCSCxLQUF1QixDQUF2QkEsSUFBYjtBQUVBLE1BQUlELFFBQVEsSUFBSUEsUUFBUSxDQUFSQSxPQUFnQixDQUFoQkEsT0FBaEIsS0FBNkNBLFFBQVEsSUFBUkE7O0FBRTdDLE1BQ0VDLE1BQU0sQ0FBTkEsV0FDQyxDQUFDLGFBQWFGLGdCQUFnQixDQUFoQkEsS0FBZCxRQUFjQSxDQUFkLEtBQWtETSxJQUFJLEtBRnpELE9BR0U7QUFDQUEsUUFBSSxHQUFHLFFBQVFBLElBQUksSUFBbkJBLEVBQU8sQ0FBUEE7QUFDQSxRQUFJSCxRQUFRLElBQUlBLFFBQVEsQ0FBUkEsQ0FBUSxDQUFSQSxLQUFoQixLQUFxQ0EsUUFBUSxHQUFHLE1BQVhBO0FBTHZDLFNBTU8sSUFBSSxDQUFKLE1BQVc7QUFDaEJHLFFBQUksR0FBSkE7QUFHRjs7QUFBQSxNQUFJRixJQUFJLElBQUlBLElBQUksQ0FBSkEsQ0FBSSxDQUFKQSxLQUFaLEtBQTZCQSxJQUFJLEdBQUcsTUFBUEE7QUFDN0IsTUFBSVEsTUFBTSxJQUFJQSxNQUFNLENBQU5BLENBQU0sQ0FBTkEsS0FBZCxLQUFpQ0EsTUFBTSxHQUFHLE1BQVRBO0FBRWpDVCxVQUFRLEdBQUdBLFFBQVEsQ0FBUkEsaUJBQVhBLGtCQUFXQSxDQUFYQTtBQUNBUyxRQUFNLEdBQUdBLE1BQU0sQ0FBTkEsYUFBVEEsS0FBU0EsQ0FBVEE7QUFFQSxtQkFBVVgsUUFBVixTQUFxQkssSUFBckIsU0FBNEJILFFBQTVCLFNBQXVDUyxNQUF2QztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC11cmwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGb3JtYXQgZnVuY3Rpb24gbW9kaWZpZWQgZnJvbSBub2RlanNcbi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgeyBVcmxPYmplY3QgfSBmcm9tICd1cmwnXG5pbXBvcnQgeyBQYXJzZWRVcmxRdWVyeSB9IGZyb20gJ3F1ZXJ5c3RyaW5nJ1xuaW1wb3J0ICogYXMgcXVlcnlzdHJpbmcgZnJvbSAnLi9xdWVyeXN0cmluZydcblxuY29uc3Qgc2xhc2hlZFByb3RvY29scyA9IC9odHRwcz98ZnRwfGdvcGhlcnxmaWxlL1xuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0VXJsKHVybE9iajogVXJsT2JqZWN0KSB7XG4gIGxldCB7IGF1dGgsIGhvc3RuYW1lIH0gPSB1cmxPYmpcbiAgbGV0IHByb3RvY29sID0gdXJsT2JqLnByb3RvY29sIHx8ICcnXG4gIGxldCBwYXRobmFtZSA9IHVybE9iai5wYXRobmFtZSB8fCAnJ1xuICBsZXQgaGFzaCA9IHVybE9iai5oYXNoIHx8ICcnXG4gIGxldCBxdWVyeSA9IHVybE9iai5xdWVyeSB8fCAnJ1xuICBsZXQgaG9zdDogc3RyaW5nIHwgZmFsc2UgPSBmYWxzZVxuXG4gIGF1dGggPSBhdXRoID8gZW5jb2RlVVJJQ29tcG9uZW50KGF1dGgpLnJlcGxhY2UoLyUzQS9pLCAnOicpICsgJ0AnIDogJydcblxuICBpZiAodXJsT2JqLmhvc3QpIHtcbiAgICBob3N0ID0gYXV0aCArIHVybE9iai5ob3N0XG4gIH0gZWxzZSBpZiAoaG9zdG5hbWUpIHtcbiAgICBob3N0ID0gYXV0aCArICh+aG9zdG5hbWUuaW5kZXhPZignOicpID8gYFske2hvc3RuYW1lfV1gIDogaG9zdG5hbWUpXG4gICAgaWYgKHVybE9iai5wb3J0KSB7XG4gICAgICBob3N0ICs9ICc6JyArIHVybE9iai5wb3J0XG4gICAgfVxuICB9XG5cbiAgaWYgKHF1ZXJ5ICYmIHR5cGVvZiBxdWVyeSA9PT0gJ29iamVjdCcpIHtcbiAgICBxdWVyeSA9IFN0cmluZyhxdWVyeXN0cmluZy51cmxRdWVyeVRvU2VhcmNoUGFyYW1zKHF1ZXJ5IGFzIFBhcnNlZFVybFF1ZXJ5KSlcbiAgfVxuXG4gIGxldCBzZWFyY2ggPSB1cmxPYmouc2VhcmNoIHx8IChxdWVyeSAmJiBgPyR7cXVlcnl9YCkgfHwgJydcblxuICBpZiAocHJvdG9jb2wgJiYgcHJvdG9jb2wuc3Vic3RyKC0xKSAhPT0gJzonKSBwcm90b2NvbCArPSAnOidcblxuICBpZiAoXG4gICAgdXJsT2JqLnNsYXNoZXMgfHxcbiAgICAoKCFwcm90b2NvbCB8fCBzbGFzaGVkUHJvdG9jb2xzLnRlc3QocHJvdG9jb2wpKSAmJiBob3N0ICE9PSBmYWxzZSlcbiAgKSB7XG4gICAgaG9zdCA9ICcvLycgKyAoaG9zdCB8fCAnJylcbiAgICBpZiAocGF0aG5hbWUgJiYgcGF0aG5hbWVbMF0gIT09ICcvJykgcGF0aG5hbWUgPSAnLycgKyBwYXRobmFtZVxuICB9IGVsc2UgaWYgKCFob3N0KSB7XG4gICAgaG9zdCA9ICcnXG4gIH1cblxuICBpZiAoaGFzaCAmJiBoYXNoWzBdICE9PSAnIycpIGhhc2ggPSAnIycgKyBoYXNoXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoWzBdICE9PSAnPycpIHNlYXJjaCA9ICc/JyArIHNlYXJjaFxuXG4gIHBhdGhuYW1lID0gcGF0aG5hbWUucmVwbGFjZSgvWz8jXS9nLCBlbmNvZGVVUklDb21wb25lbnQpXG4gIHNlYXJjaCA9IHNlYXJjaC5yZXBsYWNlKCcjJywgJyUyMycpXG5cbiAgcmV0dXJuIGAke3Byb3RvY29sfSR7aG9zdH0ke3BhdGhuYW1lfSR7c2VhcmNofSR7aGFzaH1gXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/format-url.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports[\"default\"] = getAssetPathFromRoute; // Translates a logical route into its pages asset path (relative from a common prefix)\n// \"asset path\" being its javascript file, data file, prerendered html,...\n\nfunction getAssetPathFromRoute(route) {\n  var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var path = route === '/' ? '/index' : /^\\/index(\\/|$)/.test(route) ? \"/index\".concat(route) : \"\".concat(route);\n  return path + ext;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LWFzc2V0LXBhdGgtZnJvbS1yb3V0ZS50cz9lMWMwIl0sIm5hbWVzIjpbImV4dCIsInBhdGgiLCJyb3V0ZSJdLCJtYXBwaW5ncyI6Ijs7OzRDQUFBO0FBQ0E7O0FBQ2Usc0NBR0w7QUFBQSxNQURSQSxHQUNRLHVFQUhLLEVBR0w7QUFDUixNQUFNQyxJQUFJLEdBQ1JDLEtBQUssS0FBTEEsaUJBRUksa0VBSE4sS0FHTSxDQUhOO0FBTUEsU0FBT0QsSUFBSSxHQUFYO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LWFzc2V0LXBhdGgtZnJvbS1yb3V0ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRyYW5zbGF0ZXMgYSBsb2dpY2FsIHJvdXRlIGludG8gaXRzIHBhZ2VzIGFzc2V0IHBhdGggKHJlbGF0aXZlIGZyb20gYSBjb21tb24gcHJlZml4KVxuLy8gXCJhc3NldCBwYXRoXCIgYmVpbmcgaXRzIGphdmFzY3JpcHQgZmlsZSwgZGF0YSBmaWxlLCBwcmVyZW5kZXJlZCBodG1sLC4uLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QXNzZXRQYXRoRnJvbVJvdXRlKFxuICByb3V0ZTogc3RyaW5nLFxuICBleHQ6IHN0cmluZyA9ICcnXG4pOiBzdHJpbmcge1xuICBjb25zdCBwYXRoID1cbiAgICByb3V0ZSA9PT0gJy8nXG4gICAgICA/ICcvaW5kZXgnXG4gICAgICA6IC9eXFwvaW5kZXgoXFwvfCQpLy50ZXN0KHJvdXRlKVxuICAgICAgPyBgL2luZGV4JHtyb3V0ZX1gXG4gICAgICA6IGAke3JvdXRlfWBcbiAgcmV0dXJuIHBhdGggKyBleHRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string\n\nvar TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\n\nfunction isDynamicRoute(route) {\n  return TEST_ROUTE.test(route);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy50cz9jZGU1Il0sIm5hbWVzIjpbIlRFU1RfUk9VVEUiXSwibWFwcGluZ3MiOiI7Ozt5Q0FBQTs7QUFDQSxJQUFNQSxVQUFVLEdBQWhCOztBQUVPLCtCQUFnRDtBQUNyRCxTQUFPQSxVQUFVLENBQVZBLEtBQVAsS0FBT0EsQ0FBUDtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3V0aWxzL2lzLWR5bmFtaWMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJZGVudGlmeSAvW3BhcmFtXS8gaW4gcm91dGUgc3RyaW5nXG5jb25zdCBURVNUX1JPVVRFID0gL1xcL1xcW1teL10rP1xcXSg/PVxcL3wkKS9cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRHluYW1pY1JvdXRlKHJvdXRlOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIFRFU1RfUk9VVEUudGVzdChyb3V0ZSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.parseRelativeUrl = parseRelativeUrl;\n\nvar _utils = __webpack_require__(/*! ../../utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nvar _querystring = __webpack_require__(/*! ./querystring */ \"./node_modules/next/dist/next-server/lib/router/utils/querystring.js\");\n/**\n* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n* (e.g. `./hello`) then at least base must be.\n* Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n* the current origin will be parsed as relative\n*/\n\n\nfunction parseRelativeUrl(url, base) {\n  var globalBase = new URL(false ? undefined : (0, _utils.getLocationOrigin)());\n  var resolvedBase = base ? new URL(base, globalBase) : globalBase;\n\n  var _URL = new URL(url, resolvedBase),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams,\n      search = _URL.search,\n      hash = _URL.hash,\n      href = _URL.href,\n      origin = _URL.origin;\n\n  if (origin !== globalBase.origin) {\n    throw new Error(\"invariant: invalid relative URL, router received \".concat(url));\n  }\n\n  return {\n    pathname: pathname,\n    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),\n    search: search,\n    hash: hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcmVsYXRpdmUtdXJsLnRzPzk0MGQiXSwibmFtZXMiOlsiZ2xvYmFsQmFzZSIsInJlc29sdmVkQmFzZSIsImJhc2UiLCJvcmlnaW4iLCJwYXRobmFtZSIsInF1ZXJ5Iiwic2VhcmNoIiwiaGFzaCIsImhyZWYiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNPLHFDQUFzRDtBQUMzRCxNQUFNQSxVQUFVLEdBQUcsUUFDakIsb0JBQTZDLFdBRC9DLGlCQUMrQyxHQUQ1QixDQUFuQjtBQUdBLE1BQU1DLFlBQVksR0FBR0MsSUFBSSxHQUFHLGNBQUgsVUFBRyxDQUFILEdBQXpCOztBQUoyRCxhQUtJLGFBQS9ELFlBQStELENBTEo7QUFBQSxNQUtyRCxRQUxxRCxRQUtyRCxRQUxxRDtBQUFBLE1BS3JELFlBTHFELFFBS3JELFlBTHFEO0FBQUEsTUFLckQsTUFMcUQsUUFLckQsTUFMcUQ7QUFBQSxNQUtyRCxJQUxxRCxRQUtyRCxJQUxxRDtBQUFBLE1BS3JELElBTHFELFFBS3JELElBTHFEO0FBQUEsTUFLckQsTUFMcUQsUUFLckQsTUFMcUQ7O0FBUzNELE1BQUlDLE1BQU0sS0FBS0gsVUFBVSxDQUF6QixRQUFrQztBQUNoQyxVQUFNLHFFQUFOLEdBQU0sRUFBTjtBQUVGOztBQUFBLFNBQU87QUFDTEksWUFESyxFQUNMQSxRQURLO0FBRUxDLFNBQUssRUFBRSx5Q0FGRixZQUVFLENBRkY7QUFHTEMsVUFISyxFQUdMQSxNQUhLO0FBSUxDLFFBSkssRUFJTEEsSUFKSztBQUtMQyxRQUFJLEVBQUVBLElBQUksQ0FBSkEsTUFBV1IsVUFBVSxDQUFWQSxPQUxuQixNQUtRUTtBQUxELEdBQVA7QUFPRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9wYXJzZS1yZWxhdGl2ZS11cmwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2NhdGlvbk9yaWdpbiB9IGZyb20gJy4uLy4uL3V0aWxzJ1xuaW1wb3J0IHsgc2VhcmNoUGFyYW1zVG9VcmxRdWVyeSB9IGZyb20gJy4vcXVlcnlzdHJpbmcnXG5cbi8qKlxuICogUGFyc2VzIHBhdGgtcmVsYXRpdmUgdXJscyAoZS5nLiBgL2hlbGxvL3dvcmxkP2Zvbz1iYXJgKS4gSWYgdXJsIGlzbid0IHBhdGgtcmVsYXRpdmVcbiAqIChlLmcuIGAuL2hlbGxvYCkgdGhlbiBhdCBsZWFzdCBiYXNlIG11c3QgYmUuXG4gKiBBYnNvbHV0ZSB1cmxzIGFyZSByZWplY3RlZCB3aXRoIG9uZSBleGNlcHRpb24sIGluIHRoZSBicm93c2VyLCBhYnNvbHV0ZSB1cmxzIHRoYXQgYXJlIG9uXG4gKiB0aGUgY3VycmVudCBvcmlnaW4gd2lsbCBiZSBwYXJzZWQgYXMgcmVsYXRpdmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUmVsYXRpdmVVcmwodXJsOiBzdHJpbmcsIGJhc2U/OiBzdHJpbmcpIHtcbiAgY29uc3QgZ2xvYmFsQmFzZSA9IG5ldyBVUkwoXG4gICAgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyAnaHR0cDovL24nIDogZ2V0TG9jYXRpb25PcmlnaW4oKVxuICApXG4gIGNvbnN0IHJlc29sdmVkQmFzZSA9IGJhc2UgPyBuZXcgVVJMKGJhc2UsIGdsb2JhbEJhc2UpIDogZ2xvYmFsQmFzZVxuICBjb25zdCB7IHBhdGhuYW1lLCBzZWFyY2hQYXJhbXMsIHNlYXJjaCwgaGFzaCwgaHJlZiwgb3JpZ2luIH0gPSBuZXcgVVJMKFxuICAgIHVybCxcbiAgICByZXNvbHZlZEJhc2VcbiAgKVxuICBpZiAob3JpZ2luICE9PSBnbG9iYWxCYXNlLm9yaWdpbikge1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YXJpYW50OiBpbnZhbGlkIHJlbGF0aXZlIFVSTCwgcm91dGVyIHJlY2VpdmVkICR7dXJsfWApXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZSxcbiAgICBxdWVyeTogc2VhcmNoUGFyYW1zVG9VcmxRdWVyeShzZWFyY2hQYXJhbXMpLFxuICAgIHNlYXJjaCxcbiAgICBoYXNoLFxuICAgIGhyZWY6IGhyZWYuc2xpY2UoZ2xvYmFsQmFzZS5vcmlnaW4ubGVuZ3RoKSxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nexports.__esModule = true;\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      ;\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  var result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (Array.isArray(value)) {\n      value.forEach(function (item) {\n        return result.append(key, stringifyUrlQueryParam(item));\n      });\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n\n  searchParamsList.forEach(function (searchParams) {\n    Array.from(searchParams.keys()).forEach(function (key) {\n      return target[\"delete\"](key);\n    });\n    searchParams.forEach(function (value, key) {\n      return target.append(key, value);\n    });\n  });\n  return target;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcudHM/MmViZiJdLCJuYW1lcyI6WyJxdWVyeSIsInNlYXJjaFBhcmFtcyIsIkFycmF5IiwiaXNOYU4iLCJTdHJpbmciLCJyZXN1bHQiLCJPYmplY3QiLCJ2YWx1ZSIsIml0ZW0iLCJzdHJpbmdpZnlVcmxRdWVyeVBhcmFtIiwic2VhcmNoUGFyYW1zTGlzdCIsImtleSIsInRhcmdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRU8sOENBRVc7QUFDaEIsTUFBTUEsS0FBcUIsR0FBM0I7QUFDQUMsY0FBWSxDQUFaQSxRQUFxQixzQkFBZ0I7QUFDbkMsUUFBSSxPQUFPRCxLQUFLLENBQVosR0FBWSxDQUFaLEtBQUosYUFBdUM7QUFDckNBLFdBQUssQ0FBTEEsR0FBSyxDQUFMQTtBQURGLFdBRU8sSUFBSUUsS0FBSyxDQUFMQSxRQUFjRixLQUFLLENBQXZCLEdBQXVCLENBQW5CRSxDQUFKLEVBQStCO0FBQ3BDO0FBQUVGLFdBQUssQ0FBTixHQUFNLENBQUxBLENBQUQsSUFBQ0EsQ0FBRCxLQUFDQTtBQURHLFdBRUE7QUFDTEEsV0FBSyxDQUFMQSxHQUFLLENBQUxBLEdBQWEsQ0FBQ0EsS0FBSyxDQUFOLEdBQU0sQ0FBTixFQUFiQSxLQUFhLENBQWJBO0FBRUg7QUFSREM7QUFTQTtBQUdGOztBQUFBLHVDQUF1RDtBQUNyRCxNQUNFLDZCQUNDLDZCQUE2QixDQUFDRSxLQUFLLENBRHBDLEtBQ29DLENBRHBDLElBRUEsaUJBSEYsV0FJRTtBQUNBLFdBQU9DLE1BQU0sQ0FBYixLQUFhLENBQWI7QUFMRixTQU1PO0FBQ0w7QUFFSDtBQUVNOztBQUFBLDBDQUVZO0FBQ2pCLE1BQU1DLE1BQU0sR0FBRyxJQUFmLGVBQWUsRUFBZjtBQUNBQyxRQUFNLENBQU5BLDBCQUFpQyxnQkFBa0I7QUFBQTtBQUFBLFFBQWpCLEdBQWlCO0FBQUEsUUFBbEIsS0FBa0I7O0FBQ2pELFFBQUlKLEtBQUssQ0FBTEEsUUFBSixLQUFJQSxDQUFKLEVBQTBCO0FBQ3hCSyxXQUFLLENBQUxBLFFBQWVDLGNBQUQ7QUFBQSxlQUFVSCxNQUFNLENBQU5BLFlBQW1CSSxzQkFBc0IsQ0FBakVGLElBQWlFLENBQXpDRixDQUFWO0FBQUEsT0FBZEU7QUFERixXQUVPO0FBQ0xGLFlBQU0sQ0FBTkEsU0FBZ0JJLHNCQUFzQixDQUF0Q0osS0FBc0MsQ0FBdENBO0FBRUg7QUFOREM7QUFPQTtBQUdLOztBQUFBLHdCQUdZO0FBQUEsb0NBSFosZ0JBR1k7QUFIWixvQkFHWTtBQUFBOztBQUNqQkksa0JBQWdCLENBQWhCQSxRQUEwQlQsc0JBQUQsRUFBa0I7QUFDekNDLFNBQUssQ0FBTEEsS0FBV0QsWUFBWSxDQUF2QkMsSUFBV0QsRUFBWEMsVUFBeUNTLGFBQUQ7QUFBQSxhQUFTQyxpQkFBakRWLEdBQWlEVSxDQUFUO0FBQUEsS0FBeENWO0FBQ0FELGdCQUFZLENBQVpBLFFBQXFCO0FBQUEsYUFBZ0JXLE1BQU0sQ0FBTkEsWUFBckNYLEtBQXFDVyxDQUFoQjtBQUFBLEtBQXJCWDtBQUZGUztBQUlBO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJzZWRVcmxRdWVyeSB9IGZyb20gJ3F1ZXJ5c3RyaW5nJ1xuXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoUGFyYW1zVG9VcmxRdWVyeShcbiAgc2VhcmNoUGFyYW1zOiBVUkxTZWFyY2hQYXJhbXNcbik6IFBhcnNlZFVybFF1ZXJ5IHtcbiAgY29uc3QgcXVlcnk6IFBhcnNlZFVybFF1ZXJ5ID0ge31cbiAgc2VhcmNoUGFyYW1zLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICBpZiAodHlwZW9mIHF1ZXJ5W2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBxdWVyeVtrZXldID0gdmFsdWVcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkocXVlcnlba2V5XSkpIHtcbiAgICAgIDsocXVlcnlba2V5XSBhcyBzdHJpbmdbXSkucHVzaCh2YWx1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgcXVlcnlba2V5XSA9IFtxdWVyeVtrZXldIGFzIHN0cmluZywgdmFsdWVdXG4gICAgfVxuICB9KVxuICByZXR1cm4gcXVlcnlcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShwYXJhbTogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKFxuICAgIHR5cGVvZiBwYXJhbSA9PT0gJ3N0cmluZycgfHxcbiAgICAodHlwZW9mIHBhcmFtID09PSAnbnVtYmVyJyAmJiAhaXNOYU4ocGFyYW0pKSB8fFxuICAgIHR5cGVvZiBwYXJhbSA9PT0gJ2Jvb2xlYW4nXG4gICkge1xuICAgIHJldHVybiBTdHJpbmcocGFyYW0pXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICcnXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMoXG4gIHVybFF1ZXJ5OiBQYXJzZWRVcmxRdWVyeVxuKTogVVJMU2VhcmNoUGFyYW1zIHtcbiAgY29uc3QgcmVzdWx0ID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpXG4gIE9iamVjdC5lbnRyaWVzKHVybFF1ZXJ5KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHZhbHVlLmZvckVhY2goKGl0ZW0pID0+IHJlc3VsdC5hcHBlbmQoa2V5LCBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKGl0ZW0pKSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0LnNldChrZXksIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0odmFsdWUpKVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzaWduKFxuICB0YXJnZXQ6IFVSTFNlYXJjaFBhcmFtcyxcbiAgLi4uc2VhcmNoUGFyYW1zTGlzdDogVVJMU2VhcmNoUGFyYW1zW11cbik6IFVSTFNlYXJjaFBhcmFtcyB7XG4gIHNlYXJjaFBhcmFtc0xpc3QuZm9yRWFjaCgoc2VhcmNoUGFyYW1zKSA9PiB7XG4gICAgQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMua2V5cygpKS5mb3JFYWNoKChrZXkpID0+IHRhcmdldC5kZWxldGUoa2V5KSlcbiAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4gdGFyZ2V0LmFwcGVuZChrZXksIHZhbHVlKSlcbiAgfSlcbiAgcmV0dXJuIHRhcmdldFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/querystring.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports[\"default\"] = resolveRewrites;\n\nfunction resolveRewrites() {}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcmVzb2x2ZS1yZXdyaXRlcy1ub29wLnRzP2FjYzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZSwyQkFBMkIsQ0FBRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9yZXNvbHZlLXJld3JpdGVzLW5vb3AuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlUmV3cml0ZXMoKSB7fVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.getRouteMatcher = getRouteMatcher;\n\nfunction getRouteMatcher(routeRegex) {\n  var re = routeRegex.re,\n      groups = routeRegex.groups;\n  return function (pathname) {\n    var routeMatch = re.exec(pathname);\n\n    if (!routeMatch) {\n      return false;\n    }\n\n    var decode = function decode(param) {\n      try {\n        return decodeURIComponent(param);\n      } catch (_) {\n        var err = new Error('failed to decode param');\n        err.code = 'DECODE_FAILED';\n        throw err;\n      }\n    };\n\n    var params = {};\n    Object.keys(groups).forEach(function (slugName) {\n      var g = groups[slugName];\n      var m = routeMatch[g.pos];\n\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {\n          return decode(entry);\n        }) : g.repeat ? [decode(m)] : decode(m);\n      }\n    });\n    return params;\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtbWF0Y2hlci50cz9hNjcyIl0sIm5hbWVzIjpbInBhdGhuYW1lIiwicm91dGVNYXRjaCIsInJlIiwiZGVjb2RlIiwicGFyYW0iLCJkZWNvZGVVUklDb21wb25lbnQiLCJlcnIiLCJwYXJhbXMiLCJPYmplY3QiLCJzbHVnTmFtZSIsImciLCJncm91cHMiLCJtIiwiZW50cnkiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRU8scUNBQXVFO0FBQUEsTUFDdEUsRUFEc0UsR0FDNUUsVUFENEUsQ0FDdEUsRUFEc0U7QUFBQSxNQUN0RSxNQURzRSxHQUM1RSxVQUQ0RSxDQUN0RSxNQURzRTtBQUU1RSxTQUFRQSxrQkFBRCxFQUF5QztBQUM5QyxRQUFNQyxVQUFVLEdBQUdDLEVBQUUsQ0FBRkEsS0FBbkIsUUFBbUJBLENBQW5COztBQUNBLFFBQUksQ0FBSixZQUFpQjtBQUNmO0FBR0Y7O0FBQUEsUUFBTUMsTUFBTSxHQUFJQyxTQUFWRCxNQUFVQyxNQUFELEVBQW1CO0FBQ2hDLFVBQUk7QUFDRixlQUFPQyxrQkFBa0IsQ0FBekIsS0FBeUIsQ0FBekI7QUFDQSxPQUZGLENBRUUsVUFBVTtBQUNWLFlBQU1DLEdBQThCLEdBQUcsVUFBdkMsd0JBQXVDLENBQXZDO0FBR0FBLFdBQUcsQ0FBSEE7QUFDQTtBQUVIO0FBVkQ7O0FBV0EsUUFBTUMsTUFBa0QsR0FBeEQ7QUFFQUMsVUFBTSxDQUFOQSxxQkFBNkJDLGtCQUFELEVBQXNCO0FBQ2hELFVBQU1DLENBQUMsR0FBR0MsTUFBTSxDQUFoQixRQUFnQixDQUFoQjtBQUNBLFVBQU1DLENBQUMsR0FBR1gsVUFBVSxDQUFDUyxDQUFDLENBQXRCLEdBQW9CLENBQXBCOztBQUNBLFVBQUlFLENBQUMsS0FBTCxXQUFxQjtBQUNuQkwsY0FBTSxDQUFOQSxRQUFNLENBQU5BLEdBQW1CLENBQUNLLENBQUMsQ0FBREEsUUFBRCxHQUFDQSxDQUFELEdBQ2ZBLENBQUMsQ0FBREEsZUFBa0JDLGVBQUQ7QUFBQSxpQkFBV1YsTUFBTSxDQURuQixLQUNtQixDQUFqQjtBQUFBLFNBQWpCUyxDQURlLEdBRWZGLENBQUMsQ0FBREEsU0FDQSxDQUFDUCxNQUFNLENBRFBPLENBQ08sQ0FBUCxDQURBQSxHQUVBUCxNQUFNLENBSlZJLENBSVUsQ0FKVkE7QUFNSDtBQVZEQztBQVdBO0FBOUJGO0FBZ0NEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3V0aWxzL3JvdXRlLW1hdGNoZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRSb3V0ZVJlZ2V4IH0gZnJvbSAnLi9yb3V0ZS1yZWdleCdcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJvdXRlTWF0Y2hlcihyb3V0ZVJlZ2V4OiBSZXR1cm5UeXBlPHR5cGVvZiBnZXRSb3V0ZVJlZ2V4Pikge1xuICBjb25zdCB7IHJlLCBncm91cHMgfSA9IHJvdXRlUmVnZXhcbiAgcmV0dXJuIChwYXRobmFtZTogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIGNvbnN0IHJvdXRlTWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lISlcbiAgICBpZiAoIXJvdXRlTWF0Y2gpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGNvbnN0IGRlY29kZSA9IChwYXJhbTogc3RyaW5nKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtKVxuICAgICAgfSBjYXRjaCAoXykge1xuICAgICAgICBjb25zdCBlcnI6IEVycm9yICYgeyBjb2RlPzogc3RyaW5nIH0gPSBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2ZhaWxlZCB0byBkZWNvZGUgcGFyYW0nXG4gICAgICAgIClcbiAgICAgICAgZXJyLmNvZGUgPSAnREVDT0RFX0ZBSUxFRCdcbiAgICAgICAgdGhyb3cgZXJyXG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtczogeyBbcGFyYW1OYW1lOiBzdHJpbmddOiBzdHJpbmcgfCBzdHJpbmdbXSB9ID0ge31cblxuICAgIE9iamVjdC5rZXlzKGdyb3VwcykuZm9yRWFjaCgoc2x1Z05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgY29uc3QgZyA9IGdyb3Vwc1tzbHVnTmFtZV1cbiAgICAgIGNvbnN0IG0gPSByb3V0ZU1hdGNoW2cucG9zXVxuICAgICAgaWYgKG0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBwYXJhbXNbc2x1Z05hbWVdID0gfm0uaW5kZXhPZignLycpXG4gICAgICAgICAgPyBtLnNwbGl0KCcvJykubWFwKChlbnRyeSkgPT4gZGVjb2RlKGVudHJ5KSlcbiAgICAgICAgICA6IGcucmVwZWF0XG4gICAgICAgICAgPyBbZGVjb2RlKG0pXVxuICAgICAgICAgIDogZGVjb2RlKG0pXG4gICAgICB9XG4gICAgfSlcbiAgICByZXR1cm4gcGFyYW1zXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module\n// to reduce bytes\n\nfunction escapeRegex(str) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n}\n\nfunction parseParameter(param) {\n  var optional = param.startsWith('[') && param.endsWith(']');\n\n  if (optional) {\n    param = param.slice(1, -1);\n  }\n\n  var repeat = param.startsWith('...');\n\n  if (repeat) {\n    param = param.slice(3);\n  }\n\n  return {\n    key: param,\n    repeat: repeat,\n    optional: optional\n  };\n}\n\nfunction getRouteRegex(normalizedRoute) {\n  var segments = (normalizedRoute.replace(/\\/$/, '') || '/').slice(1).split('/');\n  var groups = {};\n  var groupIndex = 1;\n  var parameterizedRoute = segments.map(function (segment) {\n    if (segment.startsWith('[') && segment.endsWith(']')) {\n      var _parseParameter = parseParameter(segment.slice(1, -1)),\n          key = _parseParameter.key,\n          optional = _parseParameter.optional,\n          repeat = _parseParameter.repeat;\n\n      groups[key] = {\n        pos: groupIndex++,\n        repeat: repeat,\n        optional: optional\n      };\n      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';\n    } else {\n      return \"/\".concat(escapeRegex(segment));\n    }\n  }).join(''); // dead code eliminate for browser since it's only needed\n  // while generating routes-manifest\n\n  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }\n\n  return {\n    re: new RegExp(\"^\".concat(parameterizedRoute, \"(?:/)?$\")),\n    groups: groups\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtcmVnZXgudHM/OWRiYyJdLCJuYW1lcyI6WyJzdHIiLCJvcHRpb25hbCIsInBhcmFtIiwicmVwZWF0Iiwia2V5Iiwic2VnbWVudHMiLCJub3JtYWxpemVkUm91dGUiLCJncm91cHMiLCJncm91cEluZGV4IiwicGFyYW1ldGVyaXplZFJvdXRlIiwic2VnbWVudCIsInBhcnNlUGFyYW1ldGVyIiwicG9zIiwiZXNjYXBlUmVnZXgiLCJyZSJdLCJtYXBwaW5ncyI6Ijs7O3VDQU1BO0FBQ0E7O0FBQ0EsMEJBQWtDO0FBQ2hDLFNBQU9BLEdBQUcsQ0FBSEEsZ0NBQVAsTUFBT0EsQ0FBUDtBQUdGOztBQUFBLCtCQUF1QztBQUNyQyxNQUFNQyxRQUFRLEdBQUdDLEtBQUssQ0FBTEEsbUJBQXlCQSxLQUFLLENBQUxBLFNBQTFDLEdBQTBDQSxDQUExQzs7QUFDQSxnQkFBYztBQUNaQSxTQUFLLEdBQUdBLEtBQUssQ0FBTEEsU0FBZSxDQUF2QkEsQ0FBUUEsQ0FBUkE7QUFFRjs7QUFBQSxNQUFNQyxNQUFNLEdBQUdELEtBQUssQ0FBTEEsV0FBZixLQUFlQSxDQUFmOztBQUNBLGNBQVk7QUFDVkEsU0FBSyxHQUFHQSxLQUFLLENBQUxBLE1BQVJBLENBQVFBLENBQVJBO0FBRUY7O0FBQUEsU0FBTztBQUFFRSxPQUFHLEVBQUw7QUFBY0QsVUFBZCxFQUFjQSxNQUFkO0FBQXNCRixZQUE3QixFQUE2QkE7QUFBdEIsR0FBUDtBQUdLOztBQUFBLHdDQU9MO0FBQ0EsTUFBTUksUUFBUSxHQUFHLENBQUNDLGVBQWUsQ0FBZkEsc0JBQUQsb0JBQWpCLEdBQWlCLENBQWpCO0FBSUEsTUFBTUMsTUFBc0MsR0FBNUM7QUFDQSxNQUFJQyxVQUFVLEdBQWQ7QUFDQSxNQUFNQyxrQkFBa0IsR0FBR0osUUFBUSxDQUFSQSxJQUNuQkssaUJBQUQsRUFBYTtBQUNoQixRQUFJQSxPQUFPLENBQVBBLG1CQUEyQkEsT0FBTyxDQUFQQSxTQUEvQixHQUErQkEsQ0FBL0IsRUFBc0Q7QUFBQSw0QkFDbEJDLGNBQWMsQ0FBQ0QsT0FBTyxDQUFQQSxTQUFpQixDQUFsRSxDQUFpREEsQ0FBRCxDQURJO0FBQUEsVUFDOUMsR0FEOEMsbUJBQzlDLEdBRDhDO0FBQUEsVUFDOUMsUUFEOEMsbUJBQzlDLFFBRDhDO0FBQUEsVUFDOUMsTUFEOEMsbUJBQzlDLE1BRDhDOztBQUVwREgsWUFBTSxDQUFOQSxHQUFNLENBQU5BLEdBQWM7QUFBRUssV0FBRyxFQUFFSixVQUFQO0FBQXFCTCxjQUFyQixFQUFxQkEsTUFBckI7QUFBNkJGLGdCQUEzQ00sRUFBMkNOO0FBQTdCLE9BQWRNO0FBQ0EsYUFBT0osTUFBTSxHQUFJRixRQUFRLG1CQUFaLFdBQWI7QUFIRixXQUlPO0FBQ0wsd0JBQVdZLFdBQVcsQ0FBdEIsT0FBc0IsQ0FBdEI7QUFFSDtBQVR3QlIsVUFBM0IsRUFBMkJBLENBQTNCLENBUEEsQ0FtQkE7QUFDQTs7QUFDQSxhQUFtQyxrR0FnRW5DOztBQUFBLFNBQU87QUFDTFMsTUFBRSxFQUFFLHNCQURDLGtCQUNELGFBREM7QUFFTFAsVUFGRixFQUVFQTtBQUZLLEdBQVA7QUFJRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9yb3V0ZS1yZWdleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgR3JvdXAge1xuICBwb3M6IG51bWJlclxuICByZXBlYXQ6IGJvb2xlYW5cbiAgb3B0aW9uYWw6IGJvb2xlYW5cbn1cblxuLy8gdGhpcyBpc24ndCBpbXBvcnRpbmcgdGhlIGVzY2FwZS1zdHJpbmctcmVnZXggbW9kdWxlXG4vLyB0byByZWR1Y2UgYnl0ZXNcbmZ1bmN0aW9uIGVzY2FwZVJlZ2V4KHN0cjogc3RyaW5nKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvW3xcXFxce30oKVtcXF1eJCsqPy4tXS9nLCAnXFxcXCQmJylcbn1cblxuZnVuY3Rpb24gcGFyc2VQYXJhbWV0ZXIocGFyYW06IHN0cmluZykge1xuICBjb25zdCBvcHRpb25hbCA9IHBhcmFtLnN0YXJ0c1dpdGgoJ1snKSAmJiBwYXJhbS5lbmRzV2l0aCgnXScpXG4gIGlmIChvcHRpb25hbCkge1xuICAgIHBhcmFtID0gcGFyYW0uc2xpY2UoMSwgLTEpXG4gIH1cbiAgY29uc3QgcmVwZWF0ID0gcGFyYW0uc3RhcnRzV2l0aCgnLi4uJylcbiAgaWYgKHJlcGVhdCkge1xuICAgIHBhcmFtID0gcGFyYW0uc2xpY2UoMylcbiAgfVxuICByZXR1cm4geyBrZXk6IHBhcmFtLCByZXBlYXQsIG9wdGlvbmFsIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJvdXRlUmVnZXgoXG4gIG5vcm1hbGl6ZWRSb3V0ZTogc3RyaW5nXG4pOiB7XG4gIHJlOiBSZWdFeHBcbiAgbmFtZWRSZWdleD86IHN0cmluZ1xuICByb3V0ZUtleXM/OiB7IFtuYW1lZDogc3RyaW5nXTogc3RyaW5nIH1cbiAgZ3JvdXBzOiB7IFtncm91cE5hbWU6IHN0cmluZ106IEdyb3VwIH1cbn0ge1xuICBjb25zdCBzZWdtZW50cyA9IChub3JtYWxpemVkUm91dGUucmVwbGFjZSgvXFwvJC8sICcnKSB8fCAnLycpXG4gICAgLnNsaWNlKDEpXG4gICAgLnNwbGl0KCcvJylcblxuICBjb25zdCBncm91cHM6IHsgW2dyb3VwTmFtZTogc3RyaW5nXTogR3JvdXAgfSA9IHt9XG4gIGxldCBncm91cEluZGV4ID0gMVxuICBjb25zdCBwYXJhbWV0ZXJpemVkUm91dGUgPSBzZWdtZW50c1xuICAgIC5tYXAoKHNlZ21lbnQpID0+IHtcbiAgICAgIGlmIChzZWdtZW50LnN0YXJ0c1dpdGgoJ1snKSAmJiBzZWdtZW50LmVuZHNXaXRoKCddJykpIHtcbiAgICAgICAgY29uc3QgeyBrZXksIG9wdGlvbmFsLCByZXBlYXQgfSA9IHBhcnNlUGFyYW1ldGVyKHNlZ21lbnQuc2xpY2UoMSwgLTEpKVxuICAgICAgICBncm91cHNba2V5XSA9IHsgcG9zOiBncm91cEluZGV4KyssIHJlcGVhdCwgb3B0aW9uYWwgfVxuICAgICAgICByZXR1cm4gcmVwZWF0ID8gKG9wdGlvbmFsID8gJyg/Oi8oLis/KSk/JyA6ICcvKC4rPyknKSA6ICcvKFteL10rPyknXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYC8ke2VzY2FwZVJlZ2V4KHNlZ21lbnQpfWBcbiAgICAgIH1cbiAgICB9KVxuICAgIC5qb2luKCcnKVxuXG4gIC8vIGRlYWQgY29kZSBlbGltaW5hdGUgZm9yIGJyb3dzZXIgc2luY2UgaXQncyBvbmx5IG5lZWRlZFxuICAvLyB3aGlsZSBnZW5lcmF0aW5nIHJvdXRlcy1tYW5pZmVzdFxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBsZXQgcm91dGVLZXlDaGFyQ29kZSA9IDk3XG4gICAgbGV0IHJvdXRlS2V5Q2hhckxlbmd0aCA9IDFcblxuICAgIC8vIGJ1aWxkcyBhIG1pbmltYWwgcm91dGVLZXkgdXNpbmcgb25seSBhLXogYW5kIG1pbmltYWwgbnVtYmVyIG9mIGNoYXJhY3RlcnNcbiAgICBjb25zdCBnZXRTYWZlUm91dGVLZXkgPSAoKSA9PiB7XG4gICAgICBsZXQgcm91dGVLZXkgPSAnJ1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdXRlS2V5Q2hhckxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJvdXRlS2V5ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUocm91dGVLZXlDaGFyQ29kZSlcbiAgICAgICAgcm91dGVLZXlDaGFyQ29kZSsrXG5cbiAgICAgICAgaWYgKHJvdXRlS2V5Q2hhckNvZGUgPiAxMjIpIHtcbiAgICAgICAgICByb3V0ZUtleUNoYXJMZW5ndGgrK1xuICAgICAgICAgIHJvdXRlS2V5Q2hhckNvZGUgPSA5N1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcm91dGVLZXlcbiAgICB9XG5cbiAgICBjb25zdCByb3V0ZUtleXM6IHsgW25hbWVkOiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9XG5cbiAgICBsZXQgbmFtZWRQYXJhbWV0ZXJpemVkUm91dGUgPSBzZWdtZW50c1xuICAgICAgLm1hcCgoc2VnbWVudCkgPT4ge1xuICAgICAgICBpZiAoc2VnbWVudC5zdGFydHNXaXRoKCdbJykgJiYgc2VnbWVudC5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgICAgY29uc3QgeyBrZXksIG9wdGlvbmFsLCByZXBlYXQgfSA9IHBhcnNlUGFyYW1ldGVyKHNlZ21lbnQuc2xpY2UoMSwgLTEpKVxuICAgICAgICAgIC8vIHJlcGxhY2UgYW55IG5vbi13b3JkIGNoYXJhY3RlcnMgc2luY2UgdGhleSBjYW4gYnJlYWtcbiAgICAgICAgICAvLyB0aGUgbmFtZWQgcmVnZXhcbiAgICAgICAgICBsZXQgY2xlYW5lZEtleSA9IGtleS5yZXBsYWNlKC9cXFcvZywgJycpXG4gICAgICAgICAgbGV0IGludmFsaWRLZXkgPSBmYWxzZVxuXG4gICAgICAgICAgLy8gY2hlY2sgaWYgdGhlIGtleSBpcyBzdGlsbCBpbnZhbGlkIGFuZCBmYWxsYmFjayB0byB1c2luZyBhIGtub3duXG4gICAgICAgICAgLy8gc2FmZSBrZXlcbiAgICAgICAgICBpZiAoY2xlYW5lZEtleS5sZW5ndGggPT09IDAgfHwgY2xlYW5lZEtleS5sZW5ndGggPiAzMCkge1xuICAgICAgICAgICAgaW52YWxpZEtleSA9IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFpc05hTihwYXJzZUludChjbGVhbmVkS2V5LnN1YnN0cigwLCAxKSkpKSB7XG4gICAgICAgICAgICBpbnZhbGlkS2V5ID0gdHJ1ZVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChpbnZhbGlkS2V5KSB7XG4gICAgICAgICAgICBjbGVhbmVkS2V5ID0gZ2V0U2FmZVJvdXRlS2V5KClcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByb3V0ZUtleXNbY2xlYW5lZEtleV0gPSBrZXlcbiAgICAgICAgICByZXR1cm4gcmVwZWF0XG4gICAgICAgICAgICA/IG9wdGlvbmFsXG4gICAgICAgICAgICAgID8gYCg/Oi8oPzwke2NsZWFuZWRLZXl9Pi4rPykpP2BcbiAgICAgICAgICAgICAgOiBgLyg/PCR7Y2xlYW5lZEtleX0+Lis/KWBcbiAgICAgICAgICAgIDogYC8oPzwke2NsZWFuZWRLZXl9PlteL10rPylgXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGAvJHtlc2NhcGVSZWdleChzZWdtZW50KX1gXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuam9pbignJylcblxuICAgIHJldHVybiB7XG4gICAgICByZTogbmV3IFJlZ0V4cChgXiR7cGFyYW1ldGVyaXplZFJvdXRlfSg/Oi8pPyRgKSxcbiAgICAgIGdyb3VwcyxcbiAgICAgIHJvdXRlS2V5cyxcbiAgICAgIG5hbWVkUmVnZXg6IGBeJHtuYW1lZFBhcmFtZXRlcml6ZWRSb3V0ZX0oPzovKT8kYCxcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHJlOiBuZXcgUmVnRXhwKGBeJHtwYXJhbWV0ZXJpemVkUm91dGV9KD86Lyk/JGApLFxuICAgIGdyb3VwcyxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/side-effect.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/side-effect.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _toConsumableArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nvar _classCallCheck = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nvar _assertThisInitialized = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\n\nvar _inherits = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/inherits.js\");\n\nvar _possibleConstructorReturn = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n\nvar _getPrototypeOf = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar isServer = false;\n\nvar _default = /*#__PURE__*/function (_react$Component) {\n  _inherits(_default, _react$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n    _this._hasHeadManager = void 0;\n\n    _this.emitChange = function () {\n      if (_this._hasHeadManager) {\n        _this.props.headManager.updateHead(_this.props.reduceComponentsToState(_toConsumableArray(_this.props.headManager.mountedInstances), _this.props));\n      }\n    };\n\n    _this._hasHeadManager = _this.props.headManager && _this.props.headManager.mountedInstances;\n\n    if (isServer && _this._hasHeadManager) {\n      _this.props.headManager.mountedInstances.add(_assertThisInitialized(_this));\n\n      _this.emitChange();\n    }\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances.add(this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.emitChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances[\"delete\"](this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return _default;\n}(_react.Component);\n\nexports[\"default\"] = _default;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9zaWRlLWVmZmVjdC50c3g/MTNiNyJdLCJuYW1lcyI6WyJpc1NlcnZlciIsImNvbnN0cnVjdG9yIiwiX2hhc0hlYWRNYW5hZ2VyIiwiZW1pdENoYW5nZSIsImNvbXBvbmVudERpZE1vdW50IiwiY29tcG9uZW50RGlkVXBkYXRlIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJyZW5kZXIiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsUUFBTjs7SUFjZSxROzs7OztBQWNiQyxvQkFBVyxLQUFYQSxFQUF3QjtBQUFBOztBQUFBOztBQUN0QjtBQURzQixVQWJoQkMsZUFhZ0I7O0FBQUEsVUFYeEJDLFVBV3dCLEdBWFgsWUFBWTtBQUN2QixVQUFJLE1BQUosaUJBQTBCO0FBQ3hCLDJDQUNFLHVEQUNNLHdCQUROLG1CQUVFLE1BSEosS0FDRSxDQURGO0FBT0g7QUFFdUI7O0FBRXRCLDRCQUNFLDJCQUEwQix3QkFENUI7O0FBR0EsUUFBSUgsUUFBUSxJQUFJLE1BQWhCLGlCQUFzQztBQUNwQzs7QUFDQTtBQUVIOztBQVR1QjtBQVV4Qkk7Ozs7d0NBQW9CO0FBQ2xCLFVBQUksS0FBSixpQkFBMEI7QUFDeEI7QUFFRjs7QUFBQTtBQUVGQzs7O3lDQUFxQjtBQUNuQjtBQUVGQzs7OzJDQUF1QjtBQUNyQixVQUFJLEtBQUosaUJBQTBCO0FBQ3hCO0FBRUY7O0FBQUE7QUFHRkM7Ozs2QkFBUztBQUNQO0FBekNvRDs7OztFQUEzQkMsZ0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9zaWRlLWVmZmVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcblxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xuXG50eXBlIFN0YXRlID0gSlNYLkVsZW1lbnRbXSB8IHVuZGVmaW5lZFxuXG50eXBlIFNpZGVFZmZlY3RQcm9wcyA9IHtcbiAgcmVkdWNlQ29tcG9uZW50c1RvU3RhdGU6IDxUPihcbiAgICBjb21wb25lbnRzOiBBcnJheTxSZWFjdC5SZWFjdEVsZW1lbnQ8YW55Pj4sXG4gICAgcHJvcHM6IFRcbiAgKSA9PiBTdGF0ZVxuICBoYW5kbGVTdGF0ZUNoYW5nZT86IChzdGF0ZTogU3RhdGUpID0+IHZvaWRcbiAgaGVhZE1hbmFnZXI6IGFueVxuICBpbkFtcE1vZGU/OiBib29sZWFuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgQ29tcG9uZW50PFNpZGVFZmZlY3RQcm9wcz4ge1xuICBwcml2YXRlIF9oYXNIZWFkTWFuYWdlcjogYm9vbGVhblxuXG4gIGVtaXRDaGFuZ2UgPSAoKTogdm9pZCA9PiB7XG4gICAgaWYgKHRoaXMuX2hhc0hlYWRNYW5hZ2VyKSB7XG4gICAgICB0aGlzLnByb3BzLmhlYWRNYW5hZ2VyLnVwZGF0ZUhlYWQoXG4gICAgICAgIHRoaXMucHJvcHMucmVkdWNlQ29tcG9uZW50c1RvU3RhdGUoXG4gICAgICAgICAgWy4uLnRoaXMucHJvcHMuaGVhZE1hbmFnZXIubW91bnRlZEluc3RhbmNlc10sXG4gICAgICAgICAgdGhpcy5wcm9wc1xuICAgICAgICApXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IGFueSkge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuX2hhc0hlYWRNYW5hZ2VyID1cbiAgICAgIHRoaXMucHJvcHMuaGVhZE1hbmFnZXIgJiYgdGhpcy5wcm9wcy5oZWFkTWFuYWdlci5tb3VudGVkSW5zdGFuY2VzXG5cbiAgICBpZiAoaXNTZXJ2ZXIgJiYgdGhpcy5faGFzSGVhZE1hbmFnZXIpIHtcbiAgICAgIHRoaXMucHJvcHMuaGVhZE1hbmFnZXIubW91bnRlZEluc3RhbmNlcy5hZGQodGhpcylcbiAgICAgIHRoaXMuZW1pdENoYW5nZSgpXG4gICAgfVxuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLl9oYXNIZWFkTWFuYWdlcikge1xuICAgICAgdGhpcy5wcm9wcy5oZWFkTWFuYWdlci5tb3VudGVkSW5zdGFuY2VzLmFkZCh0aGlzKVxuICAgIH1cbiAgICB0aGlzLmVtaXRDaGFuZ2UoKVxuICB9XG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLmVtaXRDaGFuZ2UoKVxuICB9XG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLl9oYXNIZWFkTWFuYWdlcikge1xuICAgICAgdGhpcy5wcm9wcy5oZWFkTWFuYWdlci5tb3VudGVkSW5zdGFuY2VzLmRlbGV0ZSh0aGlzKVxuICAgIH1cbiAgICB0aGlzLmVtaXRDaGFuZ2UoKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/side-effect.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nexports.__esModule = true;\nexports.execOnce = execOnce;\nexports.getLocationOrigin = getLocationOrigin;\nexports.getURL = getURL;\nexports.getDisplayName = getDisplayName;\nexports.isResSent = isResSent;\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.formatWithValidation = formatWithValidation;\nexports.ST = exports.SP = exports.urlObjectKeys = void 0;\n\nvar _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ \"./node_modules/next/dist/next-server/lib/router/utils/format-url.js\");\n/**\n* Utils\n*/\n\n\nfunction execOnce(fn) {\n  var used = false;\n  var result;\n  return function () {\n    if (!used) {\n      used = true;\n      result = fn.apply(void 0, arguments);\n    }\n\n    return result;\n  };\n}\n\nfunction getLocationOrigin() {\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      hostname = _window$location.hostname,\n      port = _window$location.port;\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(port ? ':' + port : '');\n}\n\nfunction getURL() {\n  var href = window.location.href;\n  var origin = getLocationOrigin();\n  return href.substring(origin.length);\n}\n\nfunction getDisplayName(Component) {\n  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\n\nfunction isResSent(res) {\n  return res.finished || res.headersSent;\n}\n\nfunction loadGetInitialProps(_x, _x2) {\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nfunction _loadGetInitialProps() {\n  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {\n    var _App$prototype, message, res, props, _message;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (false) {}\n\n            if (!((_App$prototype = App.prototype) != null && _App$prototype.getInitialProps)) {\n              _context.next = 4;\n              break;\n            }\n\n            message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.\");\n            throw new Error(message);\n\n          case 4:\n            // when called from _app `ctx` is nested in `ctx`\n            res = ctx.res || ctx.ctx && ctx.ctx.res;\n\n            if (App.getInitialProps) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(ctx.ctx && ctx.Component)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return loadGetInitialProps(ctx.Component, ctx.ctx);\n\n          case 9:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: _context.t0\n            });\n\n          case 11:\n            return _context.abrupt(\"return\", {});\n\n          case 12:\n            _context.next = 14;\n            return App.getInitialProps(ctx);\n\n          case 14:\n            props = _context.sent;\n\n            if (!(res && isResSent(res))) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 17:\n            if (props) {\n              _context.next = 20;\n              break;\n            }\n\n            _message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" should resolve to an object. But found \\\"\").concat(props, \"\\\" instead.\");\n            throw new Error(_message);\n\n          case 20:\n            if (true) {\n              if (Object.keys(props).length === 0 && !ctx.ctx) {\n                console.warn(\"\".concat(getDisplayName(App), \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps\"));\n              }\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nvar urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];\nexports.urlObjectKeys = urlObjectKeys;\n\nfunction formatWithValidation(url) {\n  if (true) {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach(function (key) {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\"Unknown key passed via urlObject into url.format: \".concat(key));\n        }\n      });\n    }\n  }\n\n  return (0, _formatUrl.formatUrl)(url);\n}\n\nvar SP = typeof performance !== 'undefined';\nexports.SP = SP;\nvar ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';\nexports.ST = ST;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}\n//# sourceMappingURL=denormalize-page-path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9zZXJ2ZXIvZGVub3JtYWxpemUtcGFnZS1wYXRoLmpzP2MyNDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWEsd0JBQXdCLDBDQUEwQyxnREFBZ0QsZ0NBQWdDLGdDQUFnQyxtQ0FBbUMsNEJBQTRCLCtCQUErQixvQkFBb0IseUJBQXlCLFVBQVU7QUFDcFYiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL3NlcnZlci9kZW5vcm1hbGl6ZS1wYWdlLXBhdGguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtleHBvcnRzLl9fZXNNb2R1bGU9dHJ1ZTtleHBvcnRzLm5vcm1hbGl6ZVBhdGhTZXA9bm9ybWFsaXplUGF0aFNlcDtleHBvcnRzLmRlbm9ybWFsaXplUGFnZVBhdGg9ZGVub3JtYWxpemVQYWdlUGF0aDtmdW5jdGlvbiBub3JtYWxpemVQYXRoU2VwKHBhdGgpe3JldHVybiBwYXRoLnJlcGxhY2UoL1xcXFwvZywnLycpO31mdW5jdGlvbiBkZW5vcm1hbGl6ZVBhZ2VQYXRoKHBhZ2Upe3BhZ2U9bm9ybWFsaXplUGF0aFNlcChwYWdlKTtpZihwYWdlLnN0YXJ0c1dpdGgoJy9pbmRleC8nKSl7cGFnZT1wYWdlLnNsaWNlKDYpO31lbHNlIGlmKHBhZ2U9PT0nL2luZGV4Jyl7cGFnZT0nLyc7fXJldHVybiBwYWdlO31cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbm9ybWFsaXplLXBhZ2UtcGF0aC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/server/denormalize-page-path.js\n");

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/next-server/lib/head */ \"./node_modules/next/dist/next-server/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvaGVhZC5qcz84MzhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLHFGQUE2QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2hlYWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9uZXh0LXNlcnZlci9saWIvaGVhZCcpXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzPzRjZWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsMEZBQStCO0FBQzFEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.2\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// TODO: this is special because it gets imported during build.\nvar ReactVersion = '17.0.2';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nexports.StrictMode = 0xeacc;\nexports.Profiler = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nexports.Suspense = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  exports.StrictMode = symbolFor('react.strict_mode');\n  exports.Profiler = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  exports.Suspense = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: 0\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case exports.Profiler:\n      return 'Profiler';\n\n    case exports.StrictMode:\n      return 'StrictMode';\n\n    case exports.Suspense:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (Array.isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). If you meant to render a collection of children, use an array instead.\" );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n\n    var pending = payload;\n    pending._status = Pending;\n    pending._result = thenable;\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending) {\n        var defaultExport = moduleObject.default;\n\n        {\n          if (defaultExport === undefined) {\n            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        } // Transition to the next state.\n\n\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = defaultExport;\n      }\n    }, function (error) {\n      if (payload._status === Pending) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n  }\n\n  if (payload._status === Resolved) {\n    return payload._result;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: -1,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (render.displayName == null) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (type.displayName == null) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case exports.Suspense:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === exports.Fragment) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    /* eslint-disable no-new */\n\n    new Map([[frozenObject, null]]);\n    new Set([frozenObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.PureComponent = PureComponent;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsaUZBQTRCO0FBQ3ZEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz85MjBlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLGlIQUE0QztBQUN2RSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_kfl_p_next_shit_01_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var govuk_frontend_govuk_all_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! govuk-frontend/govuk/all.scss */ \"./node_modules/govuk-frontend/govuk/all.scss\");\n/* harmony import */ var govuk_frontend_govuk_all_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_all_scss__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\nvar _jsxFileName = \"/Users/kfl/p/next-shit/01/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_Users_kfl_p_next_shit_01_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\nvar TITLE = \"?\";\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  // By default NextJS performs server rednering thus initAll() would have error since document is not existed yet\n  // temporary solution would be wait until the page has loaded on the client side then call initAll()\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    var GOVUKFrontend = __webpack_require__(/*! govuk-frontend */ \"./node_modules/govuk-frontend/govuk/all.js\");\n\n    GOVUKFrontend.initAll();\n  });\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"title\", {\n        children: TITLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"link\", {\n        rel: \"shortcut icon\",\n        href: \"/assets/images/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9kNTMwIl0sIm5hbWVzIjpbIlRJVExFIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJ1c2VFZmZlY3QiLCJHT1ZVS0Zyb250ZW5kIiwicmVxdWlyZSIsImluaXRBbGwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQSxJQUFNQSxLQUFLLEdBQUcsR0FBZDs7QUFFQSxTQUFTQyxLQUFULE9BQXlDO0FBQUE7O0FBQUEsTUFBeEJDLFNBQXdCLFFBQXhCQSxTQUF3QjtBQUFBLE1BQWJDLFNBQWEsUUFBYkEsU0FBYTtBQUN2QztBQUNBO0FBQ0FDLHlEQUFTLENBQUMsWUFBTTtBQUNkLFFBQU1DLGFBQWEsR0FBR0MsbUJBQU8sQ0FBQyxrRUFBRCxDQUE3Qjs7QUFDQUQsaUJBQWEsQ0FBQ0UsT0FBZDtBQUNELEdBSFEsQ0FBVDtBQUtBLHNCQUNFO0FBQUEsNEJBQ0UscUVBQUMsZ0RBQUQ7QUFBQSw4QkFDRTtBQUFBLGtCQUFRUDtBQUFSO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FERixlQUVFO0FBQU0sV0FBRyxFQUFDLGVBQVY7QUFBMEIsWUFBSSxFQUFDO0FBQS9CO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FGRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFERixlQUtFLHFFQUFDLFNBQUQsb0JBQWVHLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUxGO0FBQUEsa0JBREY7QUFTRDs7R0FqQlFGLEs7O0tBQUFBLEs7QUFtQk1BLG9FQUFmIiwiZmlsZSI6Ii4vcGFnZXMvX2FwcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgJy4uL3N0eWxlcy9nbG9iYWxzLmNzcydcbmltcG9ydCBcImdvdnVrLWZyb250ZW5kL2dvdnVrL2FsbC5zY3NzXCI7XG5cbmNvbnN0IFRJVExFID0gXCI/XCI7XG5cbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xuICAvLyBCeSBkZWZhdWx0IE5leHRKUyBwZXJmb3JtcyBzZXJ2ZXIgcmVkbmVyaW5nIHRodXMgaW5pdEFsbCgpIHdvdWxkIGhhdmUgZXJyb3Igc2luY2UgZG9jdW1lbnQgaXMgbm90IGV4aXN0ZWQgeWV0XG4gIC8vIHRlbXBvcmFyeSBzb2x1dGlvbiB3b3VsZCBiZSB3YWl0IHVudGlsIHRoZSBwYWdlIGhhcyBsb2FkZWQgb24gdGhlIGNsaWVudCBzaWRlIHRoZW4gY2FsbCBpbml0QWxsKClcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBHT1ZVS0Zyb250ZW5kID0gcmVxdWlyZSgnZ292dWstZnJvbnRlbmQnKTtcbiAgICBHT1ZVS0Zyb250ZW5kLmluaXRBbGwoKTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT57VElUTEV9PC90aXRsZT5cbiAgICAgICAgPGxpbmsgcmVsPVwic2hvcnRjdXQgaWNvblwiIGhyZWY9XCIvYXNzZXRzL2ltYWdlcy9mYXZpY29uLmljb1wiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHBcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./globals.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement);};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(!a[p]){return false;}}return true;};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./globals.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./globals.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.i, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL2dsb2JhbHMuY3NzPzhkNzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG1OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQyw0U0FBbUs7O0FBRXJNOztBQUVBO0FBQ0EsMEJBQTBCLFFBQVM7QUFDbkM7O0FBRUE7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0Esc0VBQXNFLHdDQUF3QztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZDtBQUNBLGtFQUFrRSxpQkFBaUIsY0FBYyxNQUFNLFlBQVksaUNBQWlDO0FBQ3BKLFVBQVUsZ0JBQWdCLGVBQWUsWUFBWSxpQ0FBaUM7QUFDdEYsVUFBVSxVQUFVLGVBQWU7QUFDbkM7O0FBRUE7QUFDQSxNQUFNLDRTQUFtSztBQUN6SztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDRTQUFtSzs7QUFFN0w7O0FBRUE7QUFDQSw0QkFBNEIsUUFBUztBQUNyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsImZpbGUiOiIuL3N0eWxlcy9nbG9iYWxzLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNi0xIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNi0yIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KXsvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbi8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbnZhciBhbmNob3JFbGVtZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNfX25leHRfY3NzX19ET19OT1RfVVNFX18nKTt2YXIgcGFyZW50Tm9kZT1hbmNob3JFbGVtZW50LnBhcmVudE5vZGU7Ly8gTm9ybWFsbHkgPGhlYWQ+XG4vLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbi8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3Rcbi8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsYW5jaG9yRWxlbWVudCk7fTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSxiLGlzTmFtZWRFeHBvcnQpe2lmKCFhJiZifHxhJiYhYil7cmV0dXJuIGZhbHNlO31sZXQgcDtmb3IocCBpbiBhKXtpZihpc05hbWVkRXhwb3J0JiZwPT09J2RlZmF1bHQnKXsvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbmNvbnRpbnVlO31pZihhW3BdIT09YltwXSl7cmV0dXJuIGZhbHNlO319Zm9yKHAgaW4gYil7aWYoaXNOYW1lZEV4cG9ydCYmcD09PSdkZWZhdWx0Jyl7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG5jb250aW51ZTt9aWYoIWFbcF0pe3JldHVybiBmYWxzZTt9fXJldHVybiB0cnVlO307XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTYtMSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cmVmLS01LW9uZU9mLTYtMiEuL2dsb2JhbHMuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNi0xIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9yZWYtLTUtb25lT2YtNi0yIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n");

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ./node_modules/next/dist/client/router.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./");
module.exports = __webpack_require__(/*! /Users/kfl/p/next-shit/01/node_modules/next/dist/client/router.js */"./node_modules/next/dist/client/router.js");


/***/ })

},[[0,"webpack"]]]);